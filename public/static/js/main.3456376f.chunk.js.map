{"version":3,"sources":["Components/ImprimirOrden/logoCompuservices.PNG","Components/NuevoCliente.js","Components/EditarCliente.js","Components/Error/index.js","Constantes/index.js","SignInSide.js","utils/index.js","Components/ImprimirOrden/index.js","Components/ImprimirOrden/OrdenDiseño.js","Components/Ordenes.js","Components/NuevoCliente/Formulario.js","Components/NuevoCliente/index.js","Components/Clientes.js","Components/usuarios/NuevoUsuario.js","Components/usuarios/index.js","Components/OrdenesGarantia.js","Components/NuevaOrden/ModalOrden.js","Components/Autocomplete/index.js","Components/FechaListo/index.js","Components/NuevaOrden/Formulario.js","Components/NuevaOrden/FormularioEditar.js","Components/EditarCliente/EditarCliente.js","Components/usuarios/EditarUsuario.js","Components/Menu.js","App.js","serviceWorker.js","Components/ExcelReact.js","index.js"],"names":["module","exports","__webpack_require__","p","NuevoCliente","react_default","a","createElement","className","EditarCliente","Error","_ref","mensaje","http","concat","apiCompuServices","API_MARCA","API_REPORTE_ORDENES","API_CIUDAD","API_TIPO_EQUIPO","API_STATUS","API_CLIENTES","API_GET_UNA_ORDEN","API_POST_GUARDAR_CLIENTE","API_USUARIO","API_GET_CLIENTE_CODIGO","API_GET_ORDEN_CODIGO","API_POST_GUARDAR_ORDEN","API_GET_REPORTE_ORDEN_GARANTIA","API_GET_REPORTE_ORDEN_GARANTIA_HAITECH","API_GET_TECNICOS_ADMINISTRADORES","API_GET_ESTADOS_ORDEN","API_GET_GARANTIAS","API_LOGIN","API_GET_LISTADO_USUARIOS_ROL","API_GE_ROL","ROL_ADMINISTRADOR","ROL_HAITECH","API_ZONAS","API_DISTRITO","API_COLEGIOS","API_GET_CIUDAD_DISTRITO","API_CATALOGO_FALLAS","API_GET_INFO_TICKET","TIME_FOR_LOGOUT_INACTIVE","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","backgroundColor","form","width","marginTop","submit","withRouter","props","history","classes","_useState","useState","_useState2","Object","slicedToArray","nombreUsuario","setNombreusuario","_useState3","_useState4","cargando","setCargando","_useState5","_useState6","cargandoPC","setCargandoPC","_useState7","_useState8","Password","setPassword","_useState9","_useState10","error","setError","login","asyncToGenerator","regenerator_default","mark","_callee","e","response","wrap","_context","prev","next","preventDefault","Axios","get","undefined","sent","data","code","localStorage","setItem","JSON","stringify","push","iziToast","title","message","timeout","position","t0","stop","_x","apply","this","arguments","Grid","container","component","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","LaptopWindows_default","style","CircularProgress","progress","Typography","variant","noValidate","onSubmit","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","target","value","type","Components_Error","Button","color","getCurrentDate","separator","length","newDate","Date","date","getDate","month","getMonth","year","getFullYear","hour","getHours","min","getMinutes","seg","getSeconds","ref","React","createRef","ReimpiresionOrden","_this","classCallCheck","_super","call","state","console","log","orden","src","logo","codigoCliente","nombres","apellidos","cedula","celular","numeroOrden","numeroTicket","serie","falla","fecha","DialogActions","onClick","handleClose","react_to_pdf_default","targetRef","filename","toPdf","Component","OrdenDiseño","ImprimirOrden","Ordenes","customers","custs","i","firstName","lastName","email","address","zipcode","cerrarModalReporteGarantia","setState","modalReporteGarantia","abrirModalReporteGarantia","abrirModalVerORden","dataBruta","jsonFallas","cadenaFallas","axios","getItem","parse","_","forEach","key","LABEL","slice","unaOrden","modalImpresionOrden","descargarTicketEnExcel","_callee2","JSON_DATA","ws","wb","wscols","excelBuffer","_context2","","  ","distrito","ciudad","ie","codigoAmie","marca","direccionMac","variado","pruebasRealizadas","docenteCustodio","personaContacto","telefono","XLSX","json_to_sheet","Sheets","Ticket","SheetNames","wch","bookType","Blob","FileSaver","handleClickOpen","_callee3","_context3","setTimeout","bind","assertThisInitialized","setOpenProps","procesardata","resultado","dataArreglada","FALLA","toUpperCase","fn_eliminarOrden","IDStatus","Swal","fire","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","post","res","guardarRecargarProductos","handleDateChange","fechaInicio","handleDateChangeFechaFin","fechaFin","handleAfterPrint","handleBeforePrint","renderContent","componentRef","renderTrigger","setRef","jsonReporteOrdenes","fileName","csvData","_this2","inicio","moment","format","fin","Reporte uso de garantia","_React$createElement","_this3","permisoEstilo","rol","columns","options","filter","sort","empty","customBodyRender","tableMeta","updateValue","currentIDOrden","rowData","IconButton","disabled","aria-label","Visibility_default","fontSize","ConfirmationNumber_default","react_router_dom","to","Edit_default","Delete_default","Reporteordenes","download","print","filterType","responsive","onRowClick","rowState","Fab","size","PlayForWork_default","Add_default","dist_default","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogContent","DialogContentText","OrdenDise_o","keepMounted","DialogTitle","useUtils_cfb96ac9","utils","DateFnsUtils","justify","DatePicker","todayLabel","cancelLabel","minDateMessage","KeyboardButtonProps","minDate","defineProperty","descargarExcel","flexWrap","textField","marginLeft","marginRight","selectDistritoCiudad","diseñoModalDistritos","diseñoModalDistritosCombos","textFieldCi","textFieldAll","dense","menu","formControl","minWidth","TextFields","Zonas","Ciudades","Distritos","Colegios","setRecargarColegios","setCurrentDistrito","nombreZonaSeleccioando","ciudadSeleccioanda","nombreDistritoSeleccionado","setNombreDistritoSeleccionado","setIdDistritoSeleccionado","nombreColegioSeleccionado","setNombreColegioSeleccionado","_useState11","_useState12","setIdColegioSeleccionado","_useState13","_useState14","_distritos","_setDistritos","_useState15","_useState16","_ciudadDistrito","_setCiudadDistrito","_useState17","_useState18","_instutucionEducativa","_setInstutucionEducativa","_useState19","_useState20","idInstitucionEducativa","setIdInstitucionEducativa","_React$useState","_React$useState2","setOpenDistrito","handleCloseDistrito","_React$useState3","currency","_React$useState4","values","setValues","_useState21","_useState22","setCedula","_useState23","_useState24","primerNombre","setPrimerNombre","_useState25","_useState26","segundoNombre","setSegundoNombre","_useState27","_useState28","apellidoPaterno","setApellidoPaterno","_useState29","_useState30","apellidoMaterno","setApellidoMaterno","_useState31","_useState32","telefonoCelular","setTelefonoCelular","_useState33","_useState34","direccion","setDireccion","_useState35","_useState36","correo","setCorreo","currencies","cancelar","_ref2","limpiarCampos","agregarProducto","_ref3","abrupt","datos","IDCliente","uuid","codigo","nombre1","nombre2","IDCiudad","IDDistrito","IDInstitucionEducativa","_x2","cargarDistritoPorZona","_ref4","idZona","_x3","cargarCiudadPorDistrito","_ref5","_callee4","idDistrito","_context4","_x4","cargarColegioPorCiudad","_ref6","_callee5","_context5","_x5","defaultValue","select","event","objectSpread2","SelectProps","MenuProps","helperText","map","option","MenuItem","placeholder","InputLabelProps","shrink","disableBackdropClick","disableEscapeKeyDown","FormControl","Autocomplete","getOptionLabel","renderInput","params","assign","Transition","forwardRef","Slide","direction","ModalNuevoCliente","distritoColegio","handleCloseModalCliente","setRecargarClientes","guardar","warning","TransitionComponent","Clientes","fn_eliminarCliente","cliente","estado","cerrar","btnNuevoCliente","rowsSelected","currentIDCliente","btnEditarStyle","btnEliminarStyle","btnSeleccionarStyle","btnEditar","btnELiminar","btnSeleccionar","Check_default","ReportClientes","currentCliente","titulo","src_Components_NuevoCliente","setRecargarCombos","fn_cerrarModal","fn_cerrarModalNuevoUsuario","roles","cargarUsuarios","usuario","setUsuario","constraseña","setContraseña","confirmarConstraseña","setConfirmarConstraseña","agregarUsuario","timer","onBeforeOpen","showLoading","IDUsuario","nick","pass","IDRol","Cerrar","descripcion","Usuarios","fn_eliminarUsuario","setRecargarUsuario","fn_abrirModal","objUsuarios","usuarios","unUsuario","tipo","currentIDusuario","usuarios_NuevoUsuario","OrdenesGarantia","procesardataHaitech","INCIDENTE","API","permisoEstil1","editarOrdenHaitech","ordenes","garantia","ModalOrden","maxWidth","Components_Clientes","& > * + *","createFilterOptions","AutocompleteSugerencias","activo","classe","catalogFallas","fallasDefault","setNuevasFallas","setValue","_React$useState5","_React$useState6","Fragment","multiple","newValue","filterOptions","filtered","inputValue","nombreFalla","selectOnFocus","clearOnBlur","renderOption","freeSolo","multiline","rowsMax","FechaListo","setmodalFechaReparacion","modalFechaReparacion","setmensajeEstadoOrden","setfechaReparacion","fechaReparacion","padding","input","flex","iconButton","divider","textFieldSalto","buttonAdd","linea","textFieldInforme","button","clear","esTecnico","tiposEquipos","marcas","operarios","estadosOrden","garantias","nuevasFallas","mensajeEstadoOrden","days","myDate","setDate","gettDateSumDays","_React$useState7","_React$useState8","_React$useState9","_React$useState10","_React$useState11","_React$useState12","setCodigo","banderaModalNuevaOrden","setBanderaModalNuevaOrden","__setSaldo","numeroticket","modelo","accesorios","fallas","total","abono","saldo","informe","valores","setValores","fn_onChange","_e$target","regex","RegExp","letra","test","InputBase","inputProps","Divider","Search_default","fallasListadoyNuevas","fallasSeleccionEnter","fallasSeleccionadasDelListado","fallasNuevasInsertadas","fallasNuevasConID","dataInsert","unaFalla","IDCatalogoFallas","rest","valorAbono","nOrden","_orden","IDOrden","informeTecnico","orden_varchar1","orden_varchar2","orden_entero1","orden_entero2","resp","clsx","Cancel_default","leftIcon","iconSmall","Save_default","NuevaOrden_ModalOrden","Components_FechaListo","textFieldFalla","back","fallasDefaults","toLowerCase","setmodalReporteGarantia","IDTipoEquipo","IDMarca","IDEstadoOrden","objOperarios","setOperarios","IDGarantia","_operarios","responseA","distritonombre","institucioneducativanombre","institucion","setNombre1","setNombre2","setCelular","_useState37","_useState38","native","nombreZona","nombreCiudadDistrito","currentRol","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","paddingTop","paddingBottom","linkPanel","textDecoration","fixedHeight","Menu","setOpen","ReporteOrdenesProesada","setReporteOrdenesProesada","setReporteOrdenes","setReportClientes","ReportClientesSinFiltro","setReportClientesSF","setZonas","setColegios","setDistritos","setCiudades","setTiposEquipos","setMarcas","setUsuarios","recargarUsuarios","setRoles","recargarProductos","recargarClientes","recargarCombos","recargarComboUsuario","setrecargarComboUsuario","_useState39","_useState40","setEstadosOrden","_useState41","_useState42","setGarantias","_useState43","_useState44","visualizaMenu","serVisualizaMenu","_useState45","_useState46","usuarioHaitech","setUsuarioHaitech","_useState47","_useState48","recargarColegios","_useState49","_useState50","currentDistrito","_useState51","_useState52","setCatalogFallas","onLogout","removeItem","useEffect","getTecnicosYAdministradores","getGarantias","getEstadosOrden","getMarcas","getTiposEquipo","_callee6","_context6","_ref7","_callee7","_context7","Getciudades","_ref8","_callee8","_context8","GetZonas","_ref9","_callee9","_context9","GetDistritos","_ref10","_callee10","_context10","getCatalogoFallas","_ref11","_callee11","_context11","GetColegios","_ref12","_callee12","resultado1","_context12","GetStatus","consultarUsuarios","_ref13","_callee13","listaUsuarios","_context13","_ref14","_callee14","listaRoles","_context14","consultarRoles","window","innerWidth","_ref15","_callee15","dataCAdena","_context15","consultarApi","_ref16","_callee16","reporteClientes","_context16","unCliente","consultarApiClientes","tiempo","IDLE_TIMEOUT","idleCounter","document","onmousemove","onkeypress","setInterval","verificarSessionInactiva","clearInterval","AppBar","Toolbar","edge","Menu_default","noWrap","Drawer","ChevronLeft_default","List","ListItem","ListItemIcon","ShoppingCart_default","ListItemText","primary","People_default","NaturePeopleOutlined_default","KeyboardReturn_default","Container","react_router","exact","path","render","Components_Ordenes","Components_OrdenesGarantia","Components_usuarios","idOrden","match","esTecn","FormularioEditar","Formulario","idCliente","Components_EditarCliente_EditarCliente","idUsuario","unRol","usuarios_EditarUsuario","App","intervalId","Login","Boolean","location","hostname","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","dataSet1","amount","sex","is_married","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3456376f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoCompuservices.611cb07c.PNG\";","import React from 'react';\r\n\r\nfunction NuevoCliente () {\r\n\r\n    return (\r\n        <h1 className=\"text-center\">Nuevosss cliente</h1>\r\n    )\r\n}\r\nexport default NuevoCliente ;","import React from 'react';\r\n\r\nfunction EditarCliente () {\r\n\r\n    return (\r\n        <h1 className=\"text-center\">Editar cliente</h1>\r\n    )\r\n}\r\nexport default EditarCliente ;","import React from 'react';\r\nconst Error = ({mensaje}) =>(\r\n    <p className=\"alert alert-danger p3 my-5 text-center text-uppercase font-weight-bold\">\r\n    {mensaje}</p>\r\n)\r\n\r\nexport default Error;","const ambiente =\"prod\"\r\n\r\nlet ipServer = \"\" \r\nlet puerto =\"8000\"\r\nlet http =\"\"\r\n\r\nif (ambiente === \"prod\"){\r\n  ipServer = \"http://reparatucompu.com\"\r\n  http =`${ipServer}`\r\n}else {\r\n  ipServer = \"http://192.168.100.6\" \r\n  http =`${ipServer}:${puerto}`\r\n}\r\n\r\nconst apiCompuServices =`${http}/api/`\r\n\r\nexport const API_MARCA =apiCompuServices + \"marca\"\r\n\r\n// Obtiene todas las ordenes (reporte) activas del sistema.\r\nexport const API_REPORTE_ORDENES = apiCompuServices + \"reporteOrdenes\"\r\n// Obtiene todas las ciudades del sistema que seran mostradas en los List.\r\nexport const API_CIUDAD = apiCompuServices + \"ciudad\"\r\n// Obtiene los tipos de equipos para asignarlo a las ordenes.\r\nexport const API_TIPO_EQUIPO = apiCompuServices + \"tipoequipo\"\r\n// Obtiene los estados activo o inactivo segun se necesite.\r\nexport const API_STATUS = apiCompuServices + \"getStatus\"\r\n// Obtiene el listado de clientes activos.\r\nexport const API_CLIENTES = apiCompuServices + \"cliente\"\r\n\r\n\r\n// Obtiene el listado de clientes activos.\r\nexport const API_CLIENTES_DESCONCATENADO = apiCompuServices + \"clientes-desconcatenado\"\r\n\r\n// Obtiene el listado de clientes activos.\r\nexport const API_GET_NEW_ID = apiCompuServices + \"uuid\"\r\n\r\n\r\n// Obtiene el listado de clientes activos.\r\nexport const API_GET_UNA_ORDEN = apiCompuServices + \"getorden\"\r\n\r\n\r\n// Guardar cliente\r\nexport const API_POST_GUARDAR_CLIENTE = apiCompuServices + \"cliente\"\r\n\r\n\r\n// Guardar abono\r\nexport const API_POST_GUARDAR_ABONO = apiCompuServices + \"abonos\"\r\n\r\n\r\n \r\nexport const API_USUARIO = apiCompuServices + \"usuario\"\r\n\r\n\r\n\r\n//   \r\nexport const API_GET_CLIENTE_CODIGO = apiCompuServices + \"clientecodigo\"\r\n\r\n\r\n//   \r\nexport const API_GET_ORDEN_CODIGO = apiCompuServices + \"ordencodigo\"\r\n\r\n//   \r\nexport const API_POST_GUARDAR_ORDEN = apiCompuServices + \"orden\"\r\n\r\n//   \r\nexport const API_GET_REPORTE_ORDEN_GARANTIA = apiCompuServices + \"reporteOrdenesGarantia\"\r\nexport const API_GET_REPORTE_ORDEN_GARANTIA_HAITECH = apiCompuServices + \"reporteOrdenesGarantiaHaitech\"\r\n\r\n//\r\nexport const API_GET_TECNICOS_ADMINISTRADORES = apiCompuServices + \"usuario_cli_tec\"\r\n\r\n//  \r\nexport const API_GET_ESTADOS_ORDEN = apiCompuServices + \"estadoorden\"\r\n\r\n//  \r\nexport const API_GET_GARANTIAS = apiCompuServices + \"garantia\"\r\n\r\n// Api para el login de la aplicacion.\r\nexport const API_LOGIN = apiCompuServices + \"login\"\r\n\r\n// Api para el login de la aplicacion.\r\nexport const API_GET_LISTADO_USUARIOS_ROL = apiCompuServices + \"listadoUsuariosRol\"\r\n// Api para el login de la aplicacion.\r\nexport const API_GE_ROL = apiCompuServices + \"rol\"\r\n\r\nexport const ROL_ADMINISTRADOR =  \"Administrador\"\r\nexport const ROL_HAITECH =  \"Haitech\"\r\n \r\n \r\nexport const API_ZONAS = apiCompuServices + \"zonas\"\r\n\r\n// Distritos\r\nexport const API_DISTRITO = apiCompuServices + \"distrito\"\r\nexport const API_COLEGIOS = apiCompuServices + \"colegios\"\r\nexport const API_GET_CIUDAD_DISTRITO= apiCompuServices + \"ciudad-distrito\"\r\n\r\n\r\nexport const API_CATALOGO_FALLAS = apiCompuServices + \"catalogofallas\"\r\n\r\nexport const API_GET_INFO_TICKET = apiCompuServices + \"get-info-ticket\"\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n\r\n\r\nexport const TIME_FOR_LOGOUT_INACTIVE =  300","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LaptopWindows from '@material-ui/icons/LaptopWindows';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport Error from './Components/Error'\r\nimport iziToast from \"izitoast\";\r\nimport { API_LOGIN } from './Constantes'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Axios from 'axios';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(/fondo.jpeg)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: '100% 100%',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    // backgroundColor: theme.palette.secondary.main,\r\n    backgroundColor: \"#CC3333\"\r\n\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    // backgroundColor: \"#000000\"\r\n  },\r\n}));\r\n\r\nfunction Login(props) {\r\n\r\n\r\n  const { history } = props;\r\n\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  const [nombreUsuario, setNombreusuario] = useState('')\r\n\r\n\r\n  const [cargando, setCargando] = useState({ display: 'none' })\r\n  const [cargandoPC, setCargandoPC] = useState({ display: 'block' })\r\n\r\n\r\n  const [Password, setPassword] = useState('')\r\n  const [error, setError] = useState(false)\r\n\r\n  const login = async e => {\r\n    e.preventDefault()\r\n    setCargando({ display: 'block' })\r\n    setCargandoPC({ display: 'none' })\r\n    try {\r\n\r\n        const response = await Axios.get(`${API_LOGIN}?user=${nombreUsuario}&pass=${Password}`)\r\n\r\n      if (response.data.code === undefined) {\r\n\r\n        localStorage.setItem(\"usuario\", JSON.stringify(response.data[0]))\r\n        setError(false)\r\n        history.push('/menu')\r\n        \r\n\r\n      } else {\r\n\r\n        setCargando({ display: 'none' })\r\n        setCargandoPC({ display: 'block' })\r\n        iziToast.error({\r\n          title: 'Error',\r\n          message: 'Credenciales incorrectas',\r\n          timeout: 1500,\r\n          position: \"topRight\"\r\n        });\r\n\r\n      }\r\n\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid className=\"ini\" item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LaptopWindows style={cargandoPC} />\r\n            <CircularProgress style={cargando} className={classes.progress} />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            <strong>Inicio de sesión</strong>\r\n\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={login}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Usuario\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={e => setNombreusuario(e.target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Contraseña\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={e => setPassword(e.target.value)}\r\n            />\r\n\r\n            {(error) ? <Error mensaje=\"Credenciales Incorrectas..!!\"></Error> : null}\r\n\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Ingresar\r\n            </Button>\r\n\r\n            {/* <Link to=\"/\" href=\"#\" variant=\"body2\">Menú Inicio</Link> */}\r\n\r\n\r\n            <Grid container>\r\n              <Grid item xs>\r\n                {/* <Link href=\"#\" variant=\"body2\">\r\n                  Olvido su contraseña\r\n                </Link> */}\r\n              </Grid>\r\n\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login)","export function getCurrentDate(separator = '') {\r\n\r\n    let newDate = new Date()\r\n    let date = newDate.getDate();\r\n    let month = newDate.getMonth() + 1;\r\n    let year = newDate.getFullYear();\r\n    let hour = newDate.getHours();\r\n    let min = newDate.getMinutes();\r\n    let seg = newDate.getSeconds();\r\n\r\n    return `${year}${separator}${month < 10 ? `0${month}` : `${month}`}${separator}${date} ${hour}:${min}:${seg}`\r\n}\r\n\r\n\r\nexport function gettDateSumDays(separator = '', days = 0) {\r\n    let myDate = new Date()\r\n    myDate.setDate(myDate.getDate() + days);\r\n   \r\n    return myDate  \r\n}","import React, { Component } from 'react';\r\nimport logo from './logoCompuservices.PNG';\r\n\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Pdf from \"react-to-pdf\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nconst ref = React.createRef();\r\n\r\n\r\nclass ReimpiresionOrden extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n \r\n\r\n\r\n    render() {\r\n        console.log(\"orden de impresion \" , this.props.orden)\r\n        return (\r\n\r\n            <div>\r\n\r\n                 <div ref={ref}  >\r\n\r\n                <img className=\"imagenImpresion\" src={logo} />\r\n                <div className=\"titleImpresionOrden\">ORDEN DE INGRESO HAITECH</div>\r\n\r\n                <div className=\"container\">\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 opcion\">COD. CLIENTE :</div>\r\n                        <div className=\"col-md-8 value\">{this.props.orden.codigoCliente}</div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 opcion\">NOMBRE:</div>\r\n                        <div className=\"col-md-8 value\">{this.props.orden.nombres}</div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 opcion\">APELLIDO:</div>\r\n                        <div className=\"col-md-8 value\">{this.props.orden.apellidos}</div>\r\n                    </div>\r\n\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 opcion\">CÉDULA:</div>\r\n                        <div className=\"col-md-8 value\">{this.props.orden.cedula}</div>\r\n                    </div>\r\n\r\n\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 opcion\">CELULAR:</div>\r\n                        <div className=\"col-md-8 value\">{this.props.orden.celular}</div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 opcion\">&nbsp;</div>\r\n                        <div className=\"col-md-8 opcion\">&nbsp;</div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 opcion\">ORDEN  N°:</div>\r\n                        <div className=\"col-md-8 value\">{this.props.orden.numeroOrden}</div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 opcion\">Número Ticket:</div>\r\n                        <div className=\"col-md-8 value\">{this.props.orden.numeroTicket}</div>\r\n                    </div>\r\n\r\n\r\n                    {/* <div className=\"row\">\r\n                        <div className=\"col-md-4 opcion\">Marca:</div>\r\n                        <div className=\"col-md-8 value\">{this.props.orden.marca}</div>\r\n                    </div> */}\r\n\r\n\r\n                    {/* <div className=\"row\">\r\n                        <div className=\"col-md-4 opcion\">Modelo:</div>\r\n                        <div className=\"col-md-8 value\">{this.props.orden.modelo}</div>\r\n                    </div> */}\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 opcion\">Serie:</div>\r\n                        <div className=\"col-md-8 value\">{this.props.orden.serie}</div>\r\n                    </div>\r\n\r\n                    {/* <div className=\"row\">\r\n                        <div className=\"col-md-4 opcion\">Accesorios:</div>\r\n                        <div className=\"col-md-8 value\">{this.props.orden.accesorios}</div>\r\n                    </div> */}\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 opcion\">Falla:</div>\r\n                        <div className=\"col-md-8 value\">{this.props.orden.falla}</div>\r\n                    </div>\r\n\r\n                    {/* <div className=\"row\">\r\n                        <div className=\"col-md-4 opcion\">Informe Técnico:</div>\r\n                        <div className=\"col-md-8 value\">{this.props.orden.informeTecnico}</div>\r\n                    </div> */}\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 opcion\">Fecha: </div>\r\n                        <div className=\"col-md-8 value\">{this.props.orden.fecha}</div>\r\n                    </div>\r\n\r\n                    <br />\r\n                    <br />\r\n\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 \">_______________________ </div>\r\n                        <div className=\"col-md-1 \">  </div>\r\n                        <div className=\"col-md-7 \">________________________________________</div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 \">Firma Autorizada </div>\r\n                        <div className=\"col-md-1 \">  </div>\r\n                        <div className=\"col-md-7\">Firma Cliente</div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n           \r\n            <DialogActions>\r\n                        <Button onClick={this.props.handleClose} color=\"primary\">\r\n                            Cerrar\r\n                          </Button>\r\n \r\n              <Pdf targetRef={ref} filename={\"Orden_\"+ this.props.orden.numeroOrden +\".pdf\" }  >\r\n \r\n                    {({ toPdf }) => <Button onClick={toPdf  }>Descargar</Button>}\r\n\r\n                    \r\n                </Pdf>\r\n\r\n                    </DialogActions>\r\n           \r\n            </div>\r\n     );\r\n    }\r\n}\r\n\r\nexport default ReimpiresionOrden;","import React  from 'react';\r\nimport './Style.css';\r\nimport ReimpiresionOrden from './index'\r\n \r\nfunction OrdenDiseño ({orden, handleClose})   {\r\n        return (  <ReimpiresionOrden handleClose={handleClose}  orden={orden}   ></ReimpiresionOrden> )\r\n    }\r\nexport default OrdenDiseño;\r\n","import React, { Component } from 'react';\r\n\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\nimport moment from 'moment';\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport Swal from \"sweetalert2\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ConfirmationNumberIcon from '@material-ui/icons/ConfirmationNumber';\r\n\r\nimport Edit from \"@material-ui/icons/Visibility\";\r\nimport Editar from \"@material-ui/icons/Edit\";\r\n\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport axios from 'axios';\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport PlayForWork from '@material-ui/icons/PlayForWork';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport _ from 'lodash'\r\nimport { getCurrentDate } from '../utils'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport iziToast from \"izitoast\";\r\n\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\nimport OrdenDiseño from './ImprimirOrden/OrdenDiseño'\r\n\r\n\r\n\r\n\r\nimport { API_GET_INFO_TICKET, API_GET_REPORTE_ORDEN_GARANTIA, API_GET_UNA_ORDEN, API_POST_GUARDAR_ORDEN, ROL_ADMINISTRADOR } from '../Constantes'\r\n\r\n\r\n\r\n\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n\r\n    KeyboardDatePicker,\r\n\r\n} from '@material-ui/pickers';\r\n\r\n\r\n\r\n\r\n\r\nclass Ordenes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            jsonReporteOrdenes: [],\r\n            unaOrden: [],\r\n            modalImpresionOrden: false,\r\n            modalReporteGarantia: false,\r\n            customers: this.customers(),\r\n            fileName: 'Reporte Garantia',\r\n            fechaInicio: new Date(getCurrentDate('-')),\r\n            fechaFin: new Date(getCurrentDate('-')),\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    customers = () => {\r\n        let custs = []\r\n        for (let i = 0; i <= 25; i++) {\r\n            custs.push({\r\n                firstName: `first${i}`, lastName: `last${i}`,\r\n                email: `abc${i}@gmail.com`, address: `000${i} street city, ST`, zipcode: `0000${i}`\r\n            });\r\n        }\r\n\r\n\r\n        return custs;\r\n    }\r\n\r\n    cerrarModalReporteGarantia = () => {\r\n        this.setState({\r\n            modalReporteGarantia: false\r\n        })\r\n    }\r\n    abrirModalReporteGarantia = () => {\r\n        this.setState({\r\n            modalReporteGarantia: true\r\n        })\r\n    }\r\n\r\n\r\n    abrirModalVerORden = async () => {\r\n\r\n \r\n        let response = await axios.get(`${API_GET_UNA_ORDEN}/${localStorage.getItem(\"current_IDOrden\")}`)\r\n\r\n\r\n        const dataBruta = response.data[0]\r\n \r\n        if (dataBruta.falla !== null && dataBruta.falla !== \"\") {\r\n            var jsonFallas = JSON.parse(dataBruta.falla)\r\n            var cadenaFallas = \"\";\r\n            _.forEach(jsonFallas, function (value, key) {\r\n                cadenaFallas += value.LABEL + \", \"\r\n            })\r\n            cadenaFallas = cadenaFallas.slice(0, -2);\r\n            dataBruta.falla = cadenaFallas;\r\n        }\r\n\r\n         \r\n        this.setState({\r\n            unaOrden: response.data[0],\r\n            modalImpresionOrden: true\r\n        })\r\n    }\r\n\r\n    descargarTicketEnExcel = async () => {\r\n\r\n   \r\n\r\n        let response = await axios.get(`${API_GET_INFO_TICKET}/${localStorage.getItem(\"current_IDOrden\")}`)\r\n\r\n        const dataBruta = response.data[0]\r\n        if (dataBruta.falla !== null && dataBruta.falla !== \"\") {\r\n            var jsonFallas = JSON.parse(dataBruta.falla)\r\n            var cadenaFallas = \"\";\r\n            _.forEach(jsonFallas, function (value, key) {\r\n                cadenaFallas += value.label + \", \"\r\n            })\r\n            cadenaFallas = cadenaFallas.slice(0, -2);\r\n            dataBruta.falla = cadenaFallas;\r\n        }\r\n\r\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n        const fileExtension = '.xlsx';\r\n\r\n\r\n        const JSON_DATA = [\r\n            {\r\n                \"\": \"\",\r\n                \"  \": \"\"\r\n            },\r\n            {\r\n                \"\": \"FECHA\",\r\n                \"  \": dataBruta.fecha\r\n            },\r\n            {\r\n                \"\": \"\",\r\n                \"  \": \"\"\r\n            },\r\n            {\r\n                \"\": \"DESCRIPCION\",\r\n                \"  \": \"DATOS\"\r\n            },\r\n\r\n            {\r\n                \"\": \"\",\r\n                \"  \": \"\"\r\n            },\r\n            {\r\n                \"\": \"DISTRITO\",\r\n                \"  \": dataBruta.distrito\r\n            },\r\n            {\r\n                \"\": \"CIUDAD\",\r\n                \"  \":dataBruta.ciudad\r\n            }\r\n            ,\r\n            {\r\n                \"\": \"IE\",\r\n                \"  \":dataBruta.ie\r\n            }\r\n            ,\r\n            {\r\n                \"\": \"CODIGO AMIE\",\r\n                \"  \":dataBruta.codigoAmie\r\n            }\r\n\r\n            ,\r\n            {\r\n                \"\": \"MARCA DEL EQUIPO\",\r\n                \"  \":dataBruta.marca\r\n            }\r\n\r\n            ,\r\n            {\r\n                \"\": \"NUMERO DE SERIE\",\r\n                \"  \":dataBruta.serie\r\n            }\r\n            ,\r\n            {\r\n                \"\": \"DIRECCION MAC\",\r\n                \"  \":dataBruta.direccionMac\r\n            }\r\n            ,\r\n            {\r\n                \"\": \"DESCRIPCION DEL INCIDENTE\",\r\n                \"  \":dataBruta.falla\r\n            }\r\n            ,\r\n            {\r\n                \"\": \"DESCRIPCIONDE EVENTOS INUSUALES, OCURRIDOS CON EL EQUIPO (CAIDAS, VARIACIONES DE VOLTAJE, INSTALACION DE SOFTWARE, ETC)\",\r\n                \"  \":dataBruta.variado\r\n            }\r\n            ,\r\n            {\r\n                \"\": \"PRUEBAS REALIZADAS\",\r\n                \"  \":dataBruta.pruebasRealizadas\r\n            }\r\n            ,\r\n            {\r\n                \"\": \"DOCENTE CUSTODIO\",\r\n                \"  \":dataBruta.docenteCustodio\r\n            },\r\n            {\r\n                \"\": \"CEDULA CUSTODIO\",\r\n                \"  \":dataBruta.cedula\r\n            },\r\n            {\r\n                \"\": \"PERSONAS DE CONTACTO\",\r\n                \"  \":dataBruta.personaContacto\r\n            },\r\n            {\r\n                \"\": \"TELEFONO DE CONTACTO\",\r\n                \"  \":dataBruta.telefono\r\n            }\r\n            \r\n        ]\r\n \r\n\r\n\r\n\r\n        const ws = XLSX.utils.json_to_sheet(JSON_DATA);\r\n        const wb = { Sheets: { 'Ticket': ws }, SheetNames: ['Ticket'] };\r\n\r\n\r\n        var wscols = [\r\n            { wch: 30 },\r\n            { wch: 30 },\r\n            { wch: 30 },\r\n            { wch: 30 },\r\n            { wch: 30 }\r\n\r\n        ];\r\n\r\n\r\n        ws['!cols'] = wscols;\r\n\r\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n        const data = new Blob([excelBuffer], { type: fileType });\r\n        FileSaver.saveAs(data, dataBruta.docenteCustodio   + fileExtension);\r\n\r\n\r\n\r\n\r\n    }\r\n    handleClickOpen = async () => {\r\n\r\n\r\n        setTimeout(\r\n            function () {\r\n                this.abrirModalVerORden()\r\n            }\r\n                .bind(this),\r\n            500\r\n        );\r\n\r\n\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            modalImpresionOrden: false\r\n        })\r\n    }\r\n\r\n    setOpenProps = () => {\r\n        this.setState({\r\n            setOpenProps: true\r\n        })\r\n    }\r\n    procesardata = (resultado) => {\r\n\r\n        const dataArreglada = []\r\n        const dataBruta = resultado.data\r\n        _.forEach(dataBruta, function (value, key) {\r\n            if (value.FALLA !== undefined) {\r\n                if (value.FALLA !== \"\" && value.FALLA !== null) {\r\n                    var jsonFallas = JSON.parse(value.FALLA)\r\n                    var cadenaFallas = \"\";\r\n                    _.forEach(jsonFallas, function (value, key) {\r\n                        cadenaFallas += value.label + \", \"\r\n                    })\r\n                    value.FALLA = cadenaFallas.slice(0, -2).toUpperCase();\r\n                }\r\n            }\r\n            dataArreglada.push(value)\r\n        })\r\n        return dataArreglada;\r\n    }\r\n    descargarExcel(csvData, fileName) {\r\n\r\n        var options = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n        var inicio = moment(this.state.fechaInicio).format(\"YYYY-MM-DD\") //   moment(new Date(this.state.fechaInicio).toLocaleDateString([], options)).format(\"YYYY-MM-DD\")\r\n        var fin = moment(this.state.fechaFin).format(\"YYYY-MM-DD\")//    moment(new Date(this.state.fechaFin).toLocaleDateString([], options)).format(\"YYYY-MM-DD\")\r\n\r\n\r\n        axios.get(`${API_GET_REPORTE_ORDEN_GARANTIA}/${inicio}/${fin}`).then(resultado => {\r\n\r\n\r\n            let dataArreglada = []\r\n            dataArreglada = this.procesardata(resultado)\r\n\r\n\r\n            const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n            const fileExtension = '.xlsx';\r\n\r\n            const ws = XLSX.utils.json_to_sheet(dataArreglada);\r\n            const wb = { Sheets: { 'Reporte uso de garantia': ws }, SheetNames: ['Reporte uso de garantia'] };\r\n\r\n\r\n            var wscols = [\r\n                { wch: 30 },\r\n                { wch: 30 },\r\n                { wch: 30 },\r\n                { wch: 30 },\r\n                { wch: 30 }\r\n\r\n            ];\r\n\r\n\r\n            ws['!cols'] = wscols;\r\n\r\n            const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n            const data = new Blob([excelBuffer], { type: fileType });\r\n            FileSaver.saveAs(data, fileName + \" \" + getCurrentDate('-') + fileExtension);\r\n\r\n            this.cerrarModalReporteGarantia();\r\n\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    fn_eliminarOrden = () => {\r\n        const orden = {\r\n            IDStatus: localStorage.getItem('IDStatusInactivo')\r\n        }\r\n        Swal.fire({\r\n            title: '¿Está usted seguro/a?',\r\n            text: \"¡Esta orden se eliminará permanentemente!\",\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Si, eliminar'\r\n        }).then((result) => {\r\n            if (result.value) {\r\n\r\n                axios.post(`${API_POST_GUARDAR_ORDEN}/${localStorage.getItem('current_IDOrden')}`, orden).then(res => {\r\n                    this.props.guardarRecargarProductos(true)\r\n                    this.props.history.push('/ordenes')\r\n                })\r\n\r\n                Swal.fire(\r\n                    '¡Eliminado!',\r\n                    'La orden ha sido eliminada.',\r\n                    'success'\r\n                )\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    handleDateChange = (date) => {\r\n\r\n        this.setState({\r\n            fechaInicio: date\r\n        })\r\n    }\r\n    handleDateChangeFechaFin = (date) => {\r\n\r\n        this.setState({\r\n            fechaFin: date\r\n        })\r\n    }\r\n\r\n    handleAfterPrint = () => console.log('after print!');\r\n    handleBeforePrint = () => console.log('before print!');\r\n    renderContent = () => this.componentRef;\r\n    renderTrigger = () => <button type=\"button\">Print this out!</button>;\r\n    //   onBeforeGetContent = () => this.setState({text: \"text changed\"});\r\n\r\n    setRef = ref => this.componentRef = ref;\r\n\r\n\r\n    render() {\r\n\r\n        try {\r\n\r\n            var permisoEstilo = (JSON.parse(localStorage.getItem('usuario')).rol === ROL_ADMINISTRADOR) ? { display: '' } : { display: 'none' }\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n\r\n        const columns = [\r\n            {\r\n                name: \"IDOrden\",\r\n                label: \"IDOrden\",\r\n                options: {\r\n                    filter: false,\r\n                    sort: false,\r\n                }\r\n            },\r\n\r\n            {\r\n                name: \"numeroOrden\",\r\n                label: \"N° Orden\",\r\n                options: {\r\n                    filter: false,\r\n                    sort: false,\r\n                }\r\n            },\r\n\r\n            {\r\n                name: \"fecha\",\r\n                label: \"fecha\",\r\n                options: {\r\n                    filter: false,\r\n                    sort: false,\r\n                }\r\n            },\r\n            {\r\n                name: \"fechaReparacion\",\r\n                label: \"F. reparación\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: false,\r\n                }\r\n            },\r\n\r\n            {\r\n                name: \"numeroTicket\",\r\n                label: \"Ticket\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: false,\r\n                }\r\n            },\r\n            {\r\n                name: \"serie\",\r\n                label: \"Serie\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: false,\r\n                }\r\n            },\r\n            {\r\n                name: \"falla\",\r\n                label: \"Fallas\",\r\n                options: {\r\n                    filter: false,\r\n                    sort: false,\r\n                }\r\n            },\r\n\r\n            {\r\n                name: \"informeTecnico\",\r\n                label: \"Inf. Técnico\",\r\n                options: {\r\n                    filter: false,\r\n                    sort: false,\r\n                }\r\n            },\r\n\r\n            {\r\n                name: \"cliente\",\r\n                label: \"Cliente\",\r\n                options: {\r\n                    filter: false,\r\n                    sort: false,\r\n\r\n                }\r\n            },\r\n\r\n            // {\r\n            //     name: \"descripcion\",\r\n            //     label: \"Equipo\",\r\n            //     options: {\r\n            //         filter: false,\r\n            //         sort: false,\r\n            //     }\r\n            // },\r\n            // {\r\n            //     name: \"modelo\",\r\n            //     label: \"modelo\",\r\n            //     options: {\r\n            //         filter: false,\r\n            //         sort: false,\r\n            //     }\r\n            // },\r\n\r\n\r\n            // {\r\n            //     name: \"falla\",\r\n            //     label: \"falla\",\r\n            //     options: {\r\n            //         filter: false,\r\n            //         sort: false,\r\n            //     }\r\n            // },\r\n\r\n\r\n\r\n\r\n\r\n            {\r\n                name: \"distrito\",\r\n                label: \"Distrito\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: false,\r\n                }\r\n            },\r\n            // ,\r\n            // {\r\n            //     name: \"ie\",\r\n            //     label: \"IE\",\r\n            //     options: {\r\n            //         filter: true,\r\n            //         sort: false,\r\n            //     }\r\n            // },\r\n\r\n\r\n\r\n\r\n            {\r\n                name: \"\",\r\n                options: {\r\n                    filter: false,\r\n                    sort: false,\r\n                    empty: true,\r\n\r\n\r\n                    customBodyRender: (value, tableMeta, updateValue) => {\r\n\r\n                        var currentIDOrden = localStorage.getItem('current_IDOrden')\r\n                        var PermisoAdministrador = false;\r\n                        if (tableMeta.rowData !== undefined) {\r\n                            localStorage.setItem('current_IDOrden', tableMeta.rowData[0])\r\n                            currentIDOrden = localStorage.getItem('current_IDOrden')\r\n\r\n\r\n                        }\r\n                        try {\r\n                            var permisoEstilo = (JSON.parse(localStorage.getItem('usuario')).rol === ROL_ADMINISTRADOR) ? { display: '' } : { display: 'none' }\r\n\r\n                        } catch (error) {\r\n\r\n                        }\r\n\r\n\r\n                        return (\r\n                            <div>\r\n                                <IconButton\r\n                                    onClick={this.handleClickOpen}\r\n                                    disabled={false}\r\n                                    title=\"Ver/Descargar Orden\"\r\n                                    color=\"primary\"\r\n                                    aria-label=\"Imprimir\">\r\n                                    <Edit fontSize=\"small\" />\r\n                                </IconButton>\r\n\r\n                                <IconButton\r\n                                    onClick={this.descargarTicketEnExcel}\r\n                                    disabled={false}\r\n                                    title=\"Descargar Formato Ticket\"\r\n                                    color=\"primary\"\r\n                                    aria-label=\"Descargar Ticket\">\r\n                                    <ConfirmationNumberIcon fontSize=\"small\" />\r\n                                </IconButton>\r\n\r\n                                <Link to={`/orden/editar/${currentIDOrden}`}    >\r\n                                    <IconButton\r\n                                        // style={permisoEstilo}\r\n                                        title=\"¿Editar Orden?\"\r\n                                        // onClick={this.fn_eliminarCliente}\r\n                                        // style={btnEliminarStyle}\r\n                                        color=\"primary\"\r\n                                        aria-label=\"Imprimir\">\r\n                                        <Editar fontSize=\"small\" />\r\n                                    </IconButton>\r\n                                </Link>\r\n\r\n\r\n\r\n\r\n                                <IconButton\r\n                                    disabled={PermisoAdministrador}\r\n                                    title=\"¿Eliminar Orden?\"\r\n                                    style={permisoEstilo}\r\n                                    onClick={this.fn_eliminarOrden}\r\n                                    // style={btnEliminarStyle}\r\n                                    color=\"primary\"\r\n                                    aria-label=\"Imprimir\">\r\n                                    <Delete fontSize=\"small\" />\r\n                                </IconButton>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        ];\r\n\r\n\r\n        var data = this.props.Reporteordenes\r\n\r\n\r\n\r\n        const options = {\r\n            download: false,\r\n            print: false,\r\n            filterType: 'checkbox',\r\n            responsive: \"scroll\", //scrollMaxHeight\r\n\r\n\r\n\r\n            onRowClick: (rowData, rowState) => {\r\n\r\n                localStorage.setItem(\"current_IDOrden\", rowData[0]);\r\n                // let response =  axios.get(`${API_GET_UNA_ORDEN}/${rowData[0]}`) //.then(response => {\r\n\r\n                // localStorage.setItem(\"ordenVer\", JSON.stringify(response.data[0]))\r\n                // this.setState({\r\n                //     unaOrden: response.data[0]\r\n                // })\r\n                // })\r\n\r\n            }\r\n        };\r\n\r\n\r\n\r\n        return (\r\n\r\n            <div id=\"tablaDatos\">\r\n\r\n\r\n\r\n                <Fab className=\"flotante\" style={permisoEstilo} size=\"small\" color=\"secondary\" aria-label=\"Add\"\r\n\r\n                    onClick={this.abrirModalReporteGarantia}\r\n                >\r\n                    <PlayForWork />\r\n                </Fab>\r\n\r\n                <Link to=\"/formularioNuevaOrden\"    >\r\n                    <Fab className=\"flotante\" size=\"small\" color=\"primary\" aria-label=\"Add\" onClick={this.setOpenProps} >\r\n                        <AddIcon />\r\n                    </Fab>\r\n                </Link>\r\n\r\n                <div id=\"tablaDatosOrdenes\">\r\n\r\n\r\n                    <MUIDataTable\r\n                        title={\"Listado Ordenes\"}\r\n                        data={data}\r\n                        columns={columns}\r\n                        options={options}\r\n                    />\r\n                </div>\r\n\r\n\r\n\r\n                <Dialog\r\n                    open={this.state.modalImpresionOrden}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    {/* <DialogTitle id=\"alert-dialog-title\">{\"Reimprimir esta orden?\"}</DialogTitle> */}\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n\r\n\r\n\r\n                            <OrdenDiseño handleClose={this.handleClose} orden={this.state.unaOrden} ></OrdenDiseño>\r\n\r\n\r\n\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n\r\n                </Dialog>\r\n\r\n\r\n\r\n\r\n                <Dialog\r\n                    open={this.state.modalReporteGarantia}\r\n                    // TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={this.cerrarModalReporteGarantia}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\">{\"Seleccione un rango de fecha para el reporte de garantia\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-slide-description\">\r\n\r\n\r\n\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\">\r\n\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n                                        todayLabel=\"asdadasd\"\r\n                                        cancelLabel=\"Cancelar\"\r\n\r\n                                        minDateMessage=\"La fecha desde no puede ser mayor a la fecha hasta\"\r\n                                        id=\"date-picker-dialog\"\r\n                                        label=\"Date picker dialog\"\r\n                                        format=\"yyyy-MM-dd\"\r\n                                        value={this.state.fechaInicio}\r\n                                        onChange={this.handleDateChange}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n\r\n                                        cancelLabel=\"Cancelar\"\r\n                                        format=\"yyyy-MM-dd\"\r\n                                        minDateMessage=\"La fecha hasta no puede ser menor a la fecha desde\"\r\n                                        id=\"date-picker-dialog\"\r\n                                        label=\"Date picker dialog\"\r\n                                        minDate={this.state.fechaInicio}\r\n                                        format=\"yyyy-MM-dd\"\r\n                                        value={this.state.fechaFin}\r\n                                        onChange={this.handleDateChangeFechaFin}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n\r\n\r\n\r\n\r\n\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={this.cerrarModalReporteGarantia} color=\"primary\"> Cancelar </Button>\r\n                        <Button onClick={(e) => this.descargarExcel(this.state.customers, this.state.fileName)} color=\"primary\">  Descargar </Button>\r\n                    </DialogActions>\r\n\r\n                </Dialog>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Ordenes);","import React, { useState } from 'react';\r\n// import clsx from 'clsx';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport iziToast from \"izitoast\";\r\nimport axios from 'axios';\r\nimport uuid from 'uuid/v4'\r\nimport { API_DISTRITO , API_COLEGIOS ,  API_GET_CIUDAD_DISTRITO ,   API_GET_CLIENTE_CODIGO } from '../../Constantes'\r\n\r\n\r\n\r\n//  ppara distrito y colegio.\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n \r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 250,\r\n  },\r\n  selectDistritoCiudad: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 500,\r\n  },\r\n  diseñoModalDistritos: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    height: 200,\r\n  },\r\n  diseñoModalDistritosCombos: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    height: 80,\r\n  },\r\n  textFieldCi: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 300,\r\n  },\r\n  textFieldAll: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 530,\r\n  },\r\n  dense: {\r\n    marginTop: 19,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\n \r\n\r\n\r\nexport default function TextFields({ Zonas, handleClose, Ciudades, Distritos, Colegios, setRecargarColegios, setCurrentDistrito }) {\r\n\r\n\r\n  const [nombreZonaSeleccioando, setNombreZonaSeleccioando] = useState('--SELECCIONE ZONA--')\r\n  const [ciudadSeleccioanda, setCiudadSeleccioanda] = useState('--SELECCIONE CIUDAD--')\r\n\r\n  const [nombreDistritoSeleccionado, setNombreDistritoSeleccionado] = useState('--SELECCIONE DISTRITO--')\r\n  const [idDistritoSeleccionado, setIdDistritoSeleccionado] = useState('')\r\n\r\n  const [nombreColegioSeleccionado, setNombreColegioSeleccionado] = useState('--SELECCIONE COLEGIO--')\r\n  const [idColegioSeleccionado, setIdColegioSeleccionado] = useState('')\r\n\r\n\r\n  const [_distritos, _setDistritos] = useState([])\r\n  const [_ciudadDistrito, _setCiudadDistrito] = useState([])\r\n  const [_instutucionEducativa, _setInstutucionEducativa] = useState([])\r\n\r\n\r\n  const [idInstitucionEducativa, setIdInstitucionEducativa] = useState(null)\r\n\r\n\r\n\r\n  const [open, setOpenDistrito] = React.useState(false);\r\n\r\n  const handleClickOpenDistrito = () => {\r\n    setOpenDistrito(true);\r\n  };\r\n\r\n  const handleCloseDistrito = () => {\r\n    setOpenDistrito(false);\r\n  };\r\n\r\n  const handleCancelarDistrito = () => {\r\n    setNombreColegioSeleccionado('--SELECCIONE COLEGIO--')\r\n    setNombreDistritoSeleccionado('--SELECCIONE DISTRITO--')\r\n    setIdColegioSeleccionado('')\r\n    setIdDistritoSeleccionado('')\r\n    setOpenDistrito(false);\r\n  };\r\n\r\n\r\n\r\n\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    currency: '',\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n\r\n  const [cedula, setCedula] = useState('')\r\n  const [primerNombre, setPrimerNombre] = useState('')\r\n  const [segundoNombre, setSegundoNombre] = useState('')\r\n  const [apellidoPaterno, setApellidoPaterno] = useState('')\r\n  const [apellidoMaterno, setApellidoMaterno] = useState('')\r\n  const [telefonoCelular, setTelefonoCelular] = useState('')\r\n  const [direccion, setDireccion] = useState('')\r\n  const [correo, setCorreo] = useState('')\r\n\r\n\r\n  const currencies = Ciudades\r\n\r\n\r\n  const cancelar = async e => {\r\n    limpiarCampos()\r\n    handleClose(null, false)\r\n  }\r\n\r\n  function limpiarCampos() {\r\n    setCedula('')\r\n    setPrimerNombre('')\r\n    setSegundoNombre('')\r\n    setApellidoPaterno('')\r\n    setApellidoMaterno('')\r\n    setTelefonoCelular('')\r\n    setDireccion('')\r\n    setCorreo('')\r\n\r\n    setNombreColegioSeleccionado('--SELECCIONE COLEGIO--')\r\n    setNombreDistritoSeleccionado('--SELECCIONE DISTRITO--')\r\n    setIdColegioSeleccionado('')\r\n    setIdDistritoSeleccionado('')\r\n  }\r\n\r\n  const agregarProducto = async e => {\r\n    e.preventDefault()\r\n\r\n\r\n\r\n    if (values.currency === \"\") {\r\n      iziToast.error({\r\n        title: 'Campos imcompletos',\r\n        message: 'Seleccione la ciudad',\r\n        timeout: 2000,\r\n        position: \"topRight\"\r\n      });\r\n      return\r\n    }\r\n\r\n    if (idInstitucionEducativa === null) {\r\n      iziToast.error({\r\n        title: 'Campos imcompletos',\r\n        message: 'Seleccione la unidad Educativa',\r\n        timeout: 2000,\r\n        position: \"topRight\"\r\n      });\r\n      return\r\n    }\r\n\r\n    axios.get(API_GET_CLIENTE_CODIGO).then(resultado => {\r\n\r\n\r\n      const datos = {\r\n        'IDCliente': uuid()\r\n        , 'codigo': resultado.data[0].codigo\r\n        , 'cedula': cedula\r\n        , 'nombre1': (primerNombre !== null) ? primerNombre.toUpperCase() : \"\"   //primerNombre.toUpperCase()\r\n        , 'nombre2': (segundoNombre !== null) ? segundoNombre.toUpperCase() : \"\"  //   segundoNombre.toUpperCase()\r\n        , 'apellidoPaterno': (apellidoPaterno !== null) ? apellidoPaterno.toUpperCase() : \"\" //apellidoPaterno.toUpperCase()\r\n        , 'apellidoMaterno': (apellidoMaterno !== null) ? apellidoMaterno.toUpperCase() : \"\" //apellidoMaterno.toUpperCase()\r\n        , 'celular': telefonoCelular\r\n        , 'direccion': (direccion === null) ? \"\" : direccion.toUpperCase()\r\n        , 'correo': (correo === null) ? \"\" : correo.toUpperCase()\r\n        , 'IDStatus': localStorage.getItem(\"IDStatusActivo\")\r\n        , 'IDCiudad': values.currency\r\n        , 'IDDistrito': null\r\n        , 'IDInstitucionEducativa': idInstitucionEducativa\r\n      }\r\n\r\n\r\n      limpiarCampos()\r\n      handleClose(datos, true)\r\n\r\n    })\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  const cargarDistritoPorZona = async (idZona) => {\r\n    const resultado = await axios.get(`${API_DISTRITO}/${idZona}`)\r\n    _setDistritos(resultado.data)\r\n  }\r\n  const cargarCiudadPorDistrito = async (idDistrito) => {\r\n    const resultado = await axios.get(`${API_GET_CIUDAD_DISTRITO}/${idDistrito}`)\r\n    _setCiudadDistrito(resultado.data)\r\n  }\r\n  const cargarColegioPorCiudad = async (idDistrito) => {\r\n    const resultado = await axios.get(`${API_COLEGIOS}/${idDistrito}`)\r\n    _setInstutucionEducativa(resultado.data)\r\n  }\r\n\r\n\r\n\r\n\r\n  const cargarColegioPorDistrito = async (idDistrito) => {\r\n\r\n\r\n    setCurrentDistrito(idDistrito);\r\n    setRecargarColegios(true)\r\n  }\r\n\r\n  return (\r\n    <form className={classes.container} autoComplete=\"off\"\r\n      onSubmit={agregarProducto}\r\n    >\r\n      <TextField\r\n        id=\"standard-uncontrolled\"\r\n        required\r\n        label=\"Cédula\"\r\n        value={cedula}\r\n        defaultValue=\"\"\r\n        className={classes.textFieldCi}\r\n        margin=\"normal\"\r\n        onChange={e => setCedula(e.target.value)}\r\n      />\r\n\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpenDistrito}>Establecer IE</Button>\r\n\r\n      <TextField\r\n        id=\"standard-uncontrolled\"\r\n        required\r\n        label=\"Primer Nombre\"\r\n        defaultValue=\"\"\r\n        value={primerNombre}\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        onChange={e => setPrimerNombre(e.target.value)}\r\n      />\r\n\r\n      <TextField\r\n        required\r\n        id=\"standard-required\"\r\n        label=\"Segundo Nombre\"\r\n        value={segundoNombre}\r\n        defaultValue=\"\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        onChange={e => setSegundoNombre(e.target.value)}\r\n      />\r\n\r\n      <TextField\r\n        id=\"standard-uncontrolled\"\r\n        required\r\n        label=\"Apellido Paterno\"\r\n        value={apellidoPaterno}\r\n        defaultValue=\"\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        onChange={e => setApellidoPaterno(e.target.value)}\r\n      />\r\n      <TextField\r\n        required\r\n        id=\"standard-required\"\r\n        label=\"Apellido Materno\"\r\n        value={apellidoMaterno}\r\n        defaultValue=\"\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        onChange={e => setApellidoMaterno(e.target.value)}\r\n      />\r\n\r\n      <TextField\r\n        required\r\n        id=\"standard-required\"\r\n        value={telefonoCelular}\r\n        label=\"Teléfono Celular\"\r\n        defaultValue=\"\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        onChange={e => setTelefonoCelular(e.target.value)}\r\n      />\r\n\r\n      {/* nuevi */}\r\n      <TextField\r\n        id=\"standard-sdelect-currency\"\r\n        select\r\n        label=\"\"\r\n        className={classes.textField}\r\n        required\r\n        value={values.currency}\r\n        onChange={handleChange('currency')}\r\n        SelectProps={{\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        helperText=\"Por favor, seleccione una ciudad de residencia.\"\r\n        margin=\"normal\"\r\n      >\r\n        {currencies.map(option => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {`${option.label}`}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n\r\n\r\n      <TextField\r\n        id=\"standard-full-width\"\r\n        label=\"Direccion\"\r\n        value={direccion}\r\n        placeholder=\"Dirección Domiciliaria\"\r\n        helperText=\"\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        onChange={e => setDireccion(e.target.value)}\r\n      />\r\n\r\n\r\n\r\n\r\n      <TextField\r\n        id=\"standard-full-width\"\r\n        label=\"Correo Electronico\"\r\n        value={correo}\r\n        placeholder=\"mi-correo@ejemplo.com\"\r\n        helperText=\"\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        onChange={e => setCorreo(e.target.value)}\r\n      />\r\n\r\n\r\n\r\n      <DialogActions className=\"pull-right\">\r\n        <Button onClick={cancelar} color=\"primary\">\r\n          Cancelar\r\n              </Button>\r\n        <Button type=\"submit\" color=\"primary\">\r\n          Guardar\r\n            </Button>\r\n      </DialogActions>\r\n\r\n\r\n      <div>\r\n\r\n        <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleCloseDistrito}>\r\n          <DialogTitle>Establecer Institución Educativa</DialogTitle>\r\n\r\n          <DialogContent className={classes.diseñoModalDistritos}>\r\n            <form className={classes.container}>\r\n\r\n              {/* Zona */}\r\n\r\n              <FormControl className={classes.diseñoModalDistritosCombos} >\r\n                <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={Zonas}\r\n                  getOptionLabel={(option) => option.label}\r\n                  style={{ width: 400 }}\r\n                  onChange={(event, value) => {\r\n                    if (value != null) {\r\n                      cargarDistritoPorZona(value.value)\r\n                    }\r\n                  }}\r\n                  renderInput={(params) =>\r\n                    <TextField {...params}\r\n                      className={classes.selectDistritoCiudad}\r\n                      label={nombreZonaSeleccioando}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  }\r\n                />\r\n              </FormControl>\r\n\r\n              {/* Distrito */}\r\n              <FormControl className={classes.diseñoModalDistritosCombos} >\r\n                <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={_distritos}\r\n                  getOptionLabel={(option) => option.label}\r\n                  style={{ width: 300 }}\r\n                  onChange={(event, value) => {\r\n                    if (value != null) {\r\n                      cargarCiudadPorDistrito(value.value);\r\n                      // cargarColegioPorDistrito(value.value)\r\n                      // setNombreDistritoSeleccionado(value.label)\r\n                      // setIdDistritoSeleccionado(value.value)\r\n\r\n                    }\r\n                  }}\r\n                  renderInput={(params) =>\r\n                    <TextField {...params}\r\n                      className={classes.selectDistritoCiudad}\r\n                      label={nombreDistritoSeleccionado}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  }\r\n                />\r\n              </FormControl>\r\n\r\n              {/* CIUDAD */}\r\n              <FormControl className={classes.diseñoModalDistritosCombos} >\r\n                <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={_ciudadDistrito}\r\n                  getOptionLabel={(option) => option.label}\r\n                  style={{ width: 300 }}\r\n                  onChange={(event, value) => {\r\n                    if (value != null) {\r\n                      cargarColegioPorCiudad(value.value);\r\n                      // cargarColegioPorDistrito(value.value)\r\n                      // setNombreDistritoSeleccionado(value.label)\r\n                      // setIdDistritoSeleccionado(value.value)\r\n\r\n                    }\r\n                  }}\r\n                  renderInput={(params) =>\r\n                    <TextField {...params}\r\n                      className={classes.selectDistritoCiudad}\r\n                      label={ciudadSeleccioanda}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  }\r\n                />\r\n              </FormControl>\r\n\r\n\r\n\r\n\r\n              {/* Colegios */}\r\n              <FormControl className={classes.formControl}>\r\n                <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={_instutucionEducativa}\r\n                  getOptionLabel={(option) => option.label}\r\n                  style={{ width: 300 }}\r\n                  onChange={(event, value) => {\r\n                    if (value != null) {\r\n                      setIdInstitucionEducativa(value.value)\r\n                      // setNombreColegioSeleccionado(value.label)\r\n                      // setIdColegioSeleccionado(value.value)\r\n                    } else {\r\n                      // cargarColegioPorDistrito('')\r\n                    }\r\n                  }}\r\n                  renderInput={(params) =>\r\n                    <TextField {...params}\r\n                      className={classes.selectDistritoCiudad}\r\n                      label={nombreColegioSeleccionado}\r\n                      variant=\"outlined\"\r\n\r\n                    />\r\n                  }\r\n                />\r\n\r\n              </FormControl>\r\n\r\n\r\n            </form>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleCloseDistrito} color=\"primary\">\r\n              Cerrar\r\n          </Button>\r\n            <Button onClick={handleCancelarDistrito} color=\"primary\">\r\n              Guardar sin datos\r\n          </Button>\r\n            <Button onClick={handleCloseDistrito} color=\"primary\">\r\n              Guardar\r\n          </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </form>\r\n  );\r\n}","import React from 'react';\r\n// import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n// import DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n// import DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\n// import TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\n// import { withStyles } from '@material-ui/core/styles';\r\nimport {API_POST_GUARDAR_CLIENTE }  from '../../Constantes' \r\n\r\nimport Formulario from './Formulario'\r\nimport iziToast from \"izitoast\";\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nfunction ModalNuevoCliente({Zonas, distritoColegio, setOpenProps, handleCloseModalCliente, Ciudades, setRecargarClientes, Distritos,Colegios,setRecargarColegios ,setCurrentDistrito}) {\r\n    // const [open, setOpen] = React.useState(setOpenProps);\r\n\r\n\r\n    function handleClose(datos, guardar) {\r\n\r\n\r\n        try {\r\n\r\n            if (guardar) {\r\n                axios.post(API_POST_GUARDAR_CLIENTE,datos\r\n                ).then(res => {\r\n\r\n                    if (res.data.code === undefined){\r\n                        setRecargarClientes(true)\r\n                    }else {\r\n                        iziToast.warning({\r\n                            title: 'Cliente ya existente',\r\n                            message:  res.data.message,\r\n                            timeout: 2000,\r\n                            position: \"topRight\"\r\n                          });\r\n                    }\r\n                })\r\n            }\r\n            handleCloseModalCliente(false)\r\n\r\n        } catch (error) {\r\n            handleCloseModalCliente(false)\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            <Dialog\r\n                open={setOpenProps}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <div className=\"title-cliente\"> Nuevo Cliente </div>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n\r\n\r\n\r\n                        <Formulario handleClose={handleClose} \r\n                        Zonas={Zonas}\r\n                        Ciudades={Ciudades} \r\n                        Distritos={Distritos} \r\n                        Colegios={Colegios}\r\n                        setRecargarColegios={setRecargarColegios}\r\n                        setCurrentDistrito={setCurrentDistrito}\r\n                        />\r\n\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n\r\n\r\n\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default (ModalNuevoCliente);","import React, { Component } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Swal from \"sweetalert2\";\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport PageviewIcon from '@material-ui/icons/Check';\r\nimport ModalNuevoCliente from './NuevoCliente/index'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { API_CLIENTES, ROL_ADMINISTRADOR } from '../Constantes'\r\n\r\nclass Clientes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            setOpenProps: false,\r\n            btnNuevoCliente: { display: '' },\r\n            rowsSelected: []\r\n        }\r\n    }\r\n\r\n\r\n    fn_eliminarCliente = () => {\r\n        const cliente = {\r\n            IDStatus: localStorage.getItem('IDStatusInactivo')\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        Swal.fire({\r\n            title: '¿Está usted seguro/a?',\r\n            text: \"¡Este cliente se eliminará permanentemente!\",\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Si, eliminar'\r\n        }).then((result) => {\r\n            if (result.value) {\r\n\r\n\r\n                axios.post(`${API_CLIENTES}/${localStorage.getItem('current_IDCLiente')}`, cliente).then(res => {\r\n                    this.props.setRecargarClientes(true)\r\n                    this.props.history.push('/clientes')\r\n                })\r\n\r\n\r\n                Swal.fire(\r\n                    '¡Eliminado!',\r\n                    'El cliente ha sido eliminado.',\r\n                    'success'\r\n                )\r\n            }\r\n        })\r\n\r\n    }\r\n    componentDidMount() {\r\n        if (!this.props.btnNuevoCliente) {\r\n            this.setState({\r\n                btnNuevoCliente: { display: 'none' }\r\n            })\r\n        }\r\n    }\r\n\r\n    setOpenProps = () => {\r\n        this.setState({\r\n            setOpenProps: true\r\n        })\r\n    }\r\n\r\n\r\n    handleCloseModalCliente = (estado) => {\r\n        this.setState({\r\n            setOpenProps: estado\r\n        })\r\n    }\r\n\r\n    cerrar = () => {\r\n\r\n        this.props.handleCloseModalCliente();\r\n    }\r\n\r\n    render() {\r\n\r\n        const columns = [\r\n            {\r\n                name: \"IDCliente\",\r\n                label: \"IDCliente\",\r\n                options: {\r\n                    filter: false,\r\n                    sort: false,\r\n                }\r\n            },\r\n            {\r\n                name: \"codigo\",\r\n                label: \"Código\",\r\n                options: {\r\n                    filter: false,\r\n                    sort: false,\r\n                }\r\n            },\r\n            {\r\n                name: \"cedula\",\r\n                label: \"Cédula\",\r\n                options: {\r\n                    filter: false,\r\n                    sort: false,\r\n                }\r\n            },\r\n            {\r\n                name: \"nombres\",\r\n                label: \"Nombres\",\r\n                options: {\r\n                    filter: false,\r\n                    sort: false,\r\n                }\r\n            },\r\n\r\n            {\r\n                name: \"celular\",\r\n                label: \"Celular\",\r\n                options: {\r\n                    filter: false,\r\n                    sort: false,\r\n                }\r\n            },\r\n\r\n\r\n\r\n\r\n\r\n            {\r\n                name: \"direccion\",\r\n                label: \"Dirección\",\r\n                options: {\r\n                    filter: false,\r\n                    sort: false,\r\n                }\r\n            },\r\n\r\n\r\n\r\n\r\n\r\n            {\r\n                name: \"correo\",\r\n                label: \"Correo\",\r\n                options: {\r\n                    filter: false,\r\n                    sort: false,\r\n                }\r\n            },\r\n\r\n\r\n\r\n            {\r\n                name: \"ciudad\",\r\n                label: \"Ciudad\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: false,\r\n                }\r\n            }\r\n            ,\r\n            {\r\n                name: \"distritonombre\",\r\n                label: \"Distrito\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: false,\r\n                }\r\n            }\r\n,  {\r\n    name: \"institucioneducativanombre\",\r\n    label: \"IE\",\r\n    options: {\r\n        filter: true,\r\n        sort: false,\r\n    }\r\n}\r\n\r\n\r\n            , {\r\n                name: \"\",\r\n                options: {\r\n                    filter: false,\r\n                    sort: false,\r\n                    empty: true,\r\n                    customBodyRender: (value, tableMeta, updateValue) => {\r\n\r\n                        var currentIDCliente = localStorage.getItem('current_IDCLiente')\r\n                        if (tableMeta.rowData !== undefined) {\r\n\r\n                            localStorage.setItem('current_IDCLiente', tableMeta.rowData[0])\r\n                            currentIDCliente = localStorage.getItem('current_IDCLiente')\r\n\r\n                        }\r\n\r\n                        var btnEditarStyle = { display: '' }\r\n                        var btnEliminarStyle = { display: '' }\r\n                        var btnSeleccionarStyle = { display: '' }\r\n\r\n\r\n                        btnEditarStyle = (JSON.parse(localStorage.getItem('usuario')).rol === ROL_ADMINISTRADOR) ? { display: '' } : { display: 'none' }\r\n                        btnEliminarStyle = (JSON.parse(localStorage.getItem('usuario')).rol === ROL_ADMINISTRADOR) ? { display: '' } : { display: 'none' }\r\n\r\n\r\n                        if (!this.props.btnEditar) {\r\n                            btnEditarStyle = { display: 'none' }\r\n                        }\r\n                        if (!this.props.btnELiminar) {\r\n                            btnEliminarStyle = { display: 'none' }\r\n                        }\r\n                        if (!this.props.btnSeleccionar) {\r\n                            btnSeleccionarStyle = { display: 'none' }\r\n                        }\r\n\r\n\r\n\r\n\r\n                        return (\r\n\r\n                            <div>\r\n                                <Link to={`/cliente/editar/${currentIDCliente}`}    >\r\n                                    <IconButton\r\n                                        style={btnEditarStyle}\r\n                                        disabled={false}\r\n                                        title=\"\"\r\n                                        color=\"primary\"\r\n                                        aria-label=\"Imprimir\">\r\n                                        <Edit fontSize=\"small\" />\r\n                                    </IconButton>\r\n                                </Link>\r\n\r\n\r\n                                <IconButton\r\n                                    disabled={false}\r\n                                    title=\"Eliminar Cliente?\"\r\n                                    onClick={this.fn_eliminarCliente}\r\n                                    style={btnEliminarStyle}\r\n                                    color=\"primary\"\r\n                                    aria-label=\"Imprimir\">\r\n                                    <Delete fontSize=\"small\" />\r\n                                </IconButton>\r\n\r\n                                <IconButton\r\n                                    onClick={this.cerrar}\r\n                                    disabled={false}\r\n                                    title=\"\"\r\n                                    style={btnSeleccionarStyle}\r\n                                    color=\"primary\"\r\n                                    aria-label=\"Imprimir\">\r\n                                    <PageviewIcon fontSize=\"small\" />\r\n                                </IconButton>\r\n\r\n\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n\r\n\r\n        ];\r\n\r\n        const data = this.props.ReportClientes\r\n\r\n        const options = {\r\n            download: false,\r\n            print: false,\r\n            filterType: 'select',\r\n            responsive: \"scroll\",\r\n            rowsSelected: this.state.rowsSelected,\r\n\r\n            onRowClick: (rowData, rowState) => {\r\n                localStorage.setItem(\"current_IDCLiente\", rowData[0]);\r\n\r\n                var currentCliente = {\r\n                    IDCliente: rowData[0],\r\n                    codigo: rowData[1],\r\n                    cedula: rowData[2],\r\n                    nombres: rowData[3],\r\n                    celular: rowData[4]\r\n                }\r\n                localStorage.setItem(\"currentCliente\", JSON.stringify(currentCliente))\r\n\r\n                if (this.props.btnSeleccionar) {\r\n                    this.cerrar()\r\n                }\r\n\r\n\r\n\r\n            },\r\n\r\n        };\r\n\r\n\r\n\r\n\r\n        return (\r\n\r\n            <div id=\"tablaDatos\" className=\"deClientes\">\r\n\r\n                <Fab className=\"flotante\" style={this.state.btnNuevoCliente} size=\"small\" color=\"primary\" aria-label=\"Add\" onClick={this.setOpenProps} >\r\n                    <AddIcon />\r\n                </Fab>\r\n\r\n                <MUIDataTable\r\n                    title={this.props.titulo}\r\n                    data={data}\r\n                    columns={columns}\r\n                    options={options}\r\n                />\r\n\r\n\r\n                <ModalNuevoCliente\r\n                \r\n                    setRecargarColegios={this.props.setRecargarColegios}\r\n                    setCurrentDistrito={this.props.setCurrentDistrito}\r\n                    Zonas ={this.props.Zonas}\r\n                    Distritos={this.props.Distritos}\r\n                    Colegios={this.props.Colegios}\r\n                    Ciudades={this.props.Ciudades}\r\n                    setOpenProps={this.state.setOpenProps}\r\n                    handleCloseModalCliente={this.handleCloseModalCliente}\r\n                    setRecargarClientes={this.props.setRecargarClientes}\r\n                />\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Clientes);","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios'\r\nimport {  API_USUARIO } from '../../Constantes'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport iziToast from \"izitoast\";\r\nimport uuid  from 'uuid/v4'\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport TextField from '@material-ui/core/TextField';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 250,\r\n  },\r\n  textFieldCi: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 300,\r\n  },\r\n  textFieldAll: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 530,\r\n  },\r\n  dense: {\r\n    marginTop: 19,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n}));\r\n\r\n\r\nfunction NuevoUsuario({ history, setRecargarCombos, fn_cerrarModal, open, fn_cerrarModalNuevoUsuario, title, roles, cargarUsuarios }) {\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n  const [cedula, setCedula] = useState('')\r\n  const [primerNombre, setPrimerNombre] = useState('')\r\n  const [segundoNombre, setSegundoNombre] = useState('')\r\n  const [apellidoPaterno, setApellidoPaterno] = useState('')\r\n  const [apellidoMaterno, setApellidoMaterno] = useState('')\r\n  const [telefonoCelular, setTelefonoCelular] = useState('')\r\n  const [direccion, setDireccion] = useState('')\r\n  const [correo, setCorreo] = useState('')\r\n  const [usuario, setUsuario] = useState('')\r\n  const [constraseña, setContraseña] = useState('')\r\n  const [confirmarConstraseña, setConfirmarConstraseña] = useState('')\r\n\r\n  const currencies = roles\r\n\r\n  const [values, setValues] = React.useState({\r\n    currency: '',\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const agregarUsuario = async e => {\r\n    e.preventDefault()\r\n\r\n\r\n\r\n    if (values.currency === \"\") {\r\n      iziToast.error({\r\n        title: 'Campos imcompletos',\r\n        message: 'Seleccione el tipo de usuario',\r\n        timeout: 2000,\r\n        position: \"topRight\"\r\n      });\r\n      return\r\n    }\r\n\r\n\r\n    if (constraseña !== confirmarConstraseña) {\r\n      iziToast.error({\r\n        title: 'Contraseña incorrecta',\r\n        message: 'Las contraseñas no coinciden.',\r\n        timeout: 2000,\r\n        position: \"topRight\"\r\n      });\r\n      return\r\n    }\r\n\r\n\r\n\r\n\r\n    fn_cerrarModal(false)\r\n\r\n    Swal.fire({\r\n      title: 'Un momento',\r\n      timer: 2000,\r\n      onBeforeOpen: () => {\r\n        Swal.showLoading()\r\n      },\r\n    })\r\n\r\n\r\n\r\n    \r\n\r\n      const datos = {\r\n        'IDUsuario': uuid()\r\n        , 'cedula': cedula\r\n        , 'nombre1': primerNombre.toUpperCase()\r\n        , 'nombre2': segundoNombre.toUpperCase()\r\n        , 'apellidoPaterno': apellidoPaterno.toUpperCase()\r\n        , 'apellidoMaterno': apellidoMaterno.toUpperCase()\r\n        , 'celular': telefonoCelular\r\n        , 'direccion': (direccion ===  null ) ? \"\" : direccion.toUpperCase()    \r\n        , 'correo': (correo ===  null ) ? \"\" : correo.toUpperCase()   \r\n        , 'IDStatus': localStorage.getItem(\"IDStatusActivo\")\r\n        , 'nick': usuario\r\n        , 'pass': constraseña\r\n        , 'IDRol': values.currency\r\n      }\r\n\r\n\r\n      axios.post(API_USUARIO, datos).then(response => {\r\n        console.log(\"Guardar usuario\", response.data)\r\n        setRecargarCombos(true)\r\n        cargarUsuarios(true);\r\n        history.push(\"/usuarios\")\r\n        limpiarCampos()\r\n\r\n      })\r\n\r\n\r\n\r\n\r\n    // })\r\n\r\n\r\n  }\r\n\r\n  function limpiarCampos() {\r\n    setCedula('')\r\n    setPrimerNombre('')\r\n    setSegundoNombre('')\r\n    setApellidoPaterno('')\r\n    setApellidoMaterno('')\r\n    setTelefonoCelular('')\r\n    setDireccion('')\r\n    setCorreo('')\r\n    setUsuario('')\r\n    setContraseña('')\r\n    setConfirmarConstraseña('')\r\n  }\r\n  function Cerrar() {\r\n    fn_cerrarModalNuevoUsuario(false)\r\n    limpiarCampos()\r\n  }\r\n\r\n\r\n  // useEffect(()=> {\r\n  //   console.log('paso por aqui')\r\n  //   setCedula('')\r\n  // })\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={Cerrar}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n\r\n            {/* ///////////////////////////////////////////////// */}\r\n\r\n            <form className={classes.container} autoComplete=\"off\" onSubmit={agregarUsuario}>\r\n\r\n              <TextField\r\n                id=\"standard-uncontrolled\"\r\n                required\r\n                label=\"Cédula\"\r\n                value={cedula}\r\n                className={classes.textFieldCi}\r\n                margin=\"normal\"\r\n                onChange={e => setCedula(e.target.value)}\r\n              />\r\n              <TextField\r\n                id=\"standard-uncontrolled\"\r\n                required\r\n                label=\"Primer Nombre\"\r\n                defaultValue=\"\"\r\n                value={primerNombre}\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                onChange={e => setPrimerNombre(e.target.value)}\r\n              />\r\n\r\n              <TextField\r\n                required\r\n                id=\"standard-required\"\r\n                label=\"Segundo Nombre\"\r\n                value={segundoNombre}\r\n                defaultValue=\"\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                onChange={e => setSegundoNombre(e.target.value)}\r\n              />\r\n\r\n              <TextField\r\n                id=\"standard-uncontrolled\"\r\n                required\r\n                value={apellidoPaterno}\r\n                label=\"Apellido Paterno\"\r\n                defaultValue=\"\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                onChange={e => setApellidoPaterno(e.target.value)}\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"standard-required\"\r\n                value={apellidoMaterno}\r\n                label=\"Apellido Materno\"\r\n                defaultValue=\"\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                onChange={e => setApellidoMaterno(e.target.value)}\r\n              />\r\n\r\n              <TextField\r\n                required\r\n                id=\"standard-required\"\r\n                label=\"Teléfono Celular\"\r\n                value={telefonoCelular}\r\n                defaultValue=\"\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                onChange={e => setTelefonoCelular(e.target.value)}\r\n              />\r\n\r\n\r\n\r\n              <TextField\r\n                id=\"standard-select-currency\"\r\n                select\r\n\r\n                label=\"Tipo de usuairo\"\r\n                className={classes.textField}\r\n                value={values.currency}\r\n                onChange={handleChange('currency')}\r\n                SelectProps={{\r\n                  MenuProps: {\r\n                    className: classes.menu,\r\n                  },\r\n                }}\r\n                helperText=\"Por favor, seleccione el tipo de usuario\"\r\n                margin=\"normal\"\r\n              >\r\n                {currencies.map(option => (\r\n                  <MenuItem key={option.IDRol} value={option.IDRol}>\r\n                    {option.descripcion}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n\r\n\r\n              {/* <TextField\r\n                id=\"standard-select-currency-native\"\r\n                select\r\n                label=\"\"\r\n                className={classes.textField}\r\n                value={values.currency}\r\n                onChange={handleChange('currency')}\r\n                SelectProps={{\r\n                  native: true,\r\n                  MenuProps: {\r\n                    className: classes.menu,\r\n                  },\r\n                }}\r\n                helperText=\"Por favor, seleccione el rol del usuario.\"\r\n                margin=\"normal\"\r\n              >\r\n                {currencies.map(option => (\r\n                  <option key={option.IDRol} value={option.IDRol}>\r\n                    {option.descripcion}\r\n                  </option>\r\n                ))}\r\n              </TextField> */}\r\n\r\n\r\n\r\n\r\n              <TextField\r\n                id=\"standard-full-width\"\r\n                label=\"Direccion\"\r\n                value={direccion}\r\n                placeholder=\"Dirección Domiciliaria\"\r\n                helperText=\"\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                onChange={e => setDireccion(e.target.value)}\r\n              />\r\n\r\n\r\n\r\n\r\n              <TextField\r\n                id=\"standard-full-width\"\r\n                label=\"Correo Electronico\"\r\n                value={correo}\r\n                placeholder=\"mi-correo@ejemplo.com\"\r\n                helperText=\"\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                onChange={e => setCorreo(e.target.value)}\r\n              />\r\n\r\n\r\n\r\n              <TextField\r\n                id=\"standard-uncontrolled\"\r\n                required\r\n                value={usuario}\r\n                label=\"Usuario\"\r\n                defaultValue=\"\"\r\n                className={classes.textFieldCi}\r\n                margin=\"normal\"\r\n                helperText=\"Nick con el cual iniciará sesión\"\r\n                onChange={e => setUsuario(e.target.value)}\r\n              />\r\n\r\n\r\n              <TextField\r\n                required\r\n                id=\"standard-required\"\r\n                label=\"Contraseña\"\r\n                value={constraseña}\r\n                defaultValue=\"\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                onChange={e => setContraseña(e.target.value)}\r\n              />\r\n\r\n\r\n\r\n              <TextField\r\n                required\r\n                id=\"standard-required\"\r\n                label=\"Confirmar Contraseña\"\r\n                defaultValue=\"\"\r\n                value={confirmarConstraseña}\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                onChange={e => setConfirmarConstraseña(e.target.value)}\r\n              />\r\n\r\n\r\n              <DialogActions>\r\n                <Button onClick={Cerrar} color=\"primary\">\r\n                  Cancelar\r\n            </Button>\r\n                <Button type=\"submit\" color=\"primary\">\r\n                  Guardar\r\n            </Button>\r\n              </DialogActions>\r\n\r\n\r\n            </form>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          </DialogContentText>\r\n        </DialogContent>\r\n\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\nexport default withRouter(NuevoUsuario)\r\n","import React, { Component } from 'react';\r\n\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport axios from 'axios';\r\nimport Swal from \"sweetalert2\";  \r\nimport { Link } from 'react-router-dom'\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n// Componentes\r\nimport NuevoUsuario from './NuevoUsuario'\r\nimport { API_GET_LISTADO_USUARIOS_ROL,API_GE_ROL, API_USUARIO } from '../../Constantes'\r\n\r\n\r\nclass Usuarios extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            open: false,\r\n            roles: []\r\n        }\r\n\r\n    }\r\n\r\n  \r\n    componentDidMount() {\r\n \r\n\r\n         \r\n        axios.get(API_GE_ROL).then(response => {\r\n            this.setState({\r\n                roles: response.data\r\n            })\r\n\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n    fn_eliminarUsuario = ()=>{\r\n        const usuario = {\r\n         IDStatus:localStorage.getItem('IDStatusInactivo')\r\n        }\r\n \r\n\r\n        Swal.fire({\r\n            title: '¿Está usted seguro/a?',\r\n            text: \"¡Este usuario se eliminará permanentemente!\",\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Si, eliminar'\r\n          }).then((result) => {\r\n            if (result.value) {\r\n\r\n\r\n                axios.post(`${API_USUARIO}/${localStorage.getItem('current_IDUsuario')}`  ,usuario ).then(res => {\r\n                   this.props.setRecargarCombos(true)\r\n                   this.props.setRecargarUsuario(true)\r\n \r\n                    this.props.history.push('/usuarios')\r\n                })\r\n              Swal.fire(\r\n                '¡Eliminado!',\r\n                'El usuario ha sido eliminado.',\r\n                'success'\r\n              )\r\n            }\r\n          })\r\n\r\n    }\r\n\r\n\r\n    fn_abrirModal = () => {\r\n        this.setState({\r\n            open: true\r\n        });\r\n    }\r\n\r\n    fn_cerrarModal = (estado) => {\r\n        this.setState({\r\n            open: false,\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        var objUsuarios = []\r\n        this.props.usuarios.filter(usuario => {\r\n              var unUsuario = {\r\n                    IDUsuario:usuario.IDUsuario\r\n                  , IDRol: usuario.IDRol\r\n                  , cedula: usuario.cedula\r\n                  , nombres: usuario.nombre1 + \" \" + usuario.nombre2 +  \" \" + usuario.apellidoPaterno + \" \" + usuario.apellidoMaterno\r\n                  , direccion: usuario.direccion\r\n                  , celular: usuario.celular\r\n                  , correo: usuario.correo\r\n                  , tipo: usuario.tipo\r\n              }\r\n              objUsuarios.push(unUsuario)\r\n          })\r\n\r\n\r\n\r\n        const options = {\r\n            download: false,\r\n            print: false,\r\n            filterType: 'checkbox',\r\n            responsive: \"scroll\",\r\n            // rowsSelected: this.state.rowsSelected,\r\n\r\n            onRowClick: (rowData, rowState) => {\r\n             \r\n                localStorage.setItem(\"current_IDUsuario\", rowData[0]);\r\n            },\r\n\r\n        };\r\n\r\n\r\n        const columns = [\r\n            {\r\n                name: \"IDUsuario\",\r\n                label: \"IDUsuario\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: false,\r\n                }\r\n            }\r\n            ,\r\n            {\r\n                name: \"cedula\",\r\n                label: \"Cédula\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: false,\r\n                }\r\n            },\r\n            {\r\n                name: \"nombres\",\r\n                label: \"Usuario\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: false,\r\n                }\r\n            },\r\n            {\r\n                name: \"direccion\",\r\n                label: \"Dirección\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: false,\r\n                }\r\n            },\r\n\r\n            {\r\n                name: \"celular\",\r\n                label: \"Celular\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: false,\r\n                }\r\n            },\r\n\r\n\r\n\r\n\r\n\r\n            {\r\n                name: \"correo\",\r\n                label: \"Correo\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: false,\r\n                }\r\n            },\r\n\r\n\r\n\r\n\r\n\r\n            // {\r\n            //     name: \"correo\",\r\n            //     label: \"correo\",\r\n            //     options: {\r\n            //         filter: true,\r\n            //         sort: false,\r\n            //     }\r\n            // },\r\n\r\n\r\n\r\n            {\r\n                name: \"tipo\",\r\n                label: \"Tipo\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: false,\r\n                }\r\n            }\r\n            , {\r\n                name: \"\",\r\n                options: {\r\n                    sort: false,\r\n                    empty: true,\r\n                    customBodyRender: (value, tableMeta, updateValue) => {\r\n \r\n                        var currentIDusuario = localStorage.getItem('current_IDUsuario')\r\n                        if (tableMeta.rowData !== undefined) {\r\n\r\n                            localStorage.setItem('current_IDUsuario', tableMeta.rowData[0])\r\n                            currentIDusuario = localStorage.getItem('current_IDUsuario')\r\n\r\n                        }\r\n\r\n              \r\n\r\n                        return (\r\n\r\n                            <div>\r\n                                <Link to={`/usuario/editar/${currentIDusuario}`}    >\r\n                                    <IconButton\r\n                                        // style={btnEditarStyle}\r\n                                        disabled={false}\r\n                                        title=\"\"\r\n                                        color=\"primary\"\r\n                                        aria-label=\"Imprimir\">\r\n                                        <Edit fontSize=\"small\" />\r\n                                    </IconButton>\r\n                                </Link>\r\n\r\n\r\n                                <IconButton\r\n                                    disabled={false}\r\n                                    title=\"Eliminar Usuario?\"\r\n                                     onClick={this.fn_eliminarUsuario}\r\n                                    // style={btnEliminarStyle}\r\n                                    color=\"primary\"\r\n                                    aria-label=\"Imprimir\">\r\n                                    <Delete fontSize=\"small\" />\r\n                                </IconButton>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n\r\n        ]\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div id=\"tablaDatos\">\r\n\r\n\r\n                <Fab onClick={this.fn_abrirModal} className=\"flotante\" size=\"small\" color=\"primary\" aria-label=\"Add\">\r\n                    <AddIcon />\r\n                </Fab>\r\n\r\n\r\n                <MUIDataTable\r\n                    title=\"Usuarios\"\r\n                    data={objUsuarios}\r\n                    columns={columns}\r\n                    options={options}\r\n                />\r\n  \r\n\r\n                <NuevoUsuario  setRecargarCombos={this.props.setRecargarCombos} fn_cerrarModal={this.fn_cerrarModal} cargarUsuarios={ this.props.setRecargarUsuario} roles={this.state.roles} title=\"Nuevo Usuario\" open={this.state.open} fn_cerrarModalNuevoUsuario={this.fn_cerrarModal} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Usuarios);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\nimport moment from 'moment';\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport Swal from \"sweetalert2\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Edit from \"@material-ui/icons/Visibility\";\r\nimport Editar from \"@material-ui/icons/Edit\";\r\n\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport axios from 'axios';\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport PlayForWork from '@material-ui/icons/PlayForWork';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\n\r\nimport { getCurrentDate } from '../utils'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\nimport OrdenDiseño from './ImprimirOrden/OrdenDiseño'\r\n\r\nimport _ from 'lodash'\r\n\r\n\r\n\r\nimport { API_GET_REPORTE_ORDEN_GARANTIA_HAITECH, ROL_HAITECH, API_GET_REPORTE_ORDEN_GARANTIA, API_GET_UNA_ORDEN, API_POST_GUARDAR_ORDEN, ROL_ADMINISTRADOR } from '../Constantes'\r\n\r\n\r\n\r\n// import 'date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n\r\n} from '@material-ui/pickers';\r\n\r\n\r\n\r\n\r\nclass OrdenesGarantia extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            jsonReporteOrdenes: [],\r\n            unaOrden: [],\r\n            modalImpresionOrden: false,\r\n            modalReporteGarantia: false,\r\n            customers: this.customers(),\r\n            fileName: 'Reporte Garantia',\r\n            fechaInicio: new Date(getCurrentDate('-')),\r\n            fechaFin: new Date(getCurrentDate('-'))\r\n\r\n        }\r\n    }\r\n\r\n    customers = () => {\r\n        let custs = []\r\n        for (let i = 0; i <= 25; i++) {\r\n            custs.push({\r\n                firstName: `first${i}`, lastName: `last${i}`,\r\n                email: `abc${i}@gmail.com`, address: `000${i} street city, ST`, zipcode: `0000${i}`\r\n            });\r\n        }\r\n\r\n\r\n        return custs;\r\n    }\r\n\r\n    cerrarModalReporteGarantia = () => {\r\n        this.setState({\r\n            modalReporteGarantia: false\r\n        })\r\n    }\r\n    abrirModalReporteGarantia = () => {\r\n        this.setState({\r\n            modalReporteGarantia: true\r\n        })\r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({\r\n            modalImpresionOrden: true\r\n        })\r\n\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            modalImpresionOrden: false\r\n        })\r\n    }\r\n\r\n    setOpenProps = () => {\r\n        this.setState({\r\n            setOpenProps: true\r\n        })\r\n    }\r\n    procesardata = (resultado) => {\r\n\r\n        const dataArreglada = []\r\n        const dataBruta = resultado.data\r\n        _.forEach(dataBruta, function (value, key) {\r\n            if (value.FALLA !== undefined) {\r\n                if (value.FALLA !== \"\" && value.FALLA !== null) {\r\n                    var jsonFallas = JSON.parse(value.FALLA)\r\n                    var cadenaFallas = \"\";\r\n                    _.forEach(jsonFallas, function (value, key) {\r\n                        cadenaFallas += value.label + \", \"\r\n                    })\r\n                    value.FALLA = cadenaFallas.slice(0, -2).toUpperCase();\r\n                }\r\n            }\r\n            dataArreglada.push(value)\r\n        })\r\n        return dataArreglada;\r\n    }\r\n    procesardataHaitech = (resultado) => {\r\n\r\n        const dataArreglada = []\r\n        const dataBruta = resultado.data\r\n        _.forEach(dataBruta, function (value, key) {\r\n          \r\n                if (value.INCIDENTE !== \"\" && value.INCIDENTE !== null) {\r\n                    var jsonFallas = JSON.parse(value.INCIDENTE)\r\n                    var cadenaFallas = \"\";\r\n                    _.forEach(jsonFallas, function (value, key) {\r\n                        cadenaFallas += value.label + \", \"\r\n                    })\r\n                    value.INCIDENTE = cadenaFallas.slice(0, -2).toUpperCase();\r\n                }\r\n           \r\n            dataArreglada.push(value)\r\n        })\r\n        return dataArreglada;\r\n    }\r\n    descargarExcel(csvData, fileName) {\r\n\r\n        var options = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n        var inicio = moment(this.state.fechaInicio).format(\"YYYY-MM-DD\") //   moment(new Date(this.state.fechaInicio).toLocaleDateString([], options)).format(\"YYYY-MM-DD\")\r\n        var fin = moment(this.state.fechaFin).format(\"YYYY-MM-DD\")//    moment(new Date(this.state.fechaFin).toLocaleDateString([], options)).format(\"YYYY-MM-DD\")\r\n\r\n\r\n\r\n        var API = API_GET_REPORTE_ORDEN_GARANTIA\r\n\r\n        if (JSON.parse(localStorage.getItem('usuario')).rol === ROL_HAITECH) {\r\n            API = API_GET_REPORTE_ORDEN_GARANTIA_HAITECH\r\n        }\r\n\r\n\r\n        axios.get(`${API}/${inicio}/${fin}`).then(resultado => {\r\n\r\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n        const fileExtension = '.xlsx';\r\n\r\n            let dataArreglada = []\r\n          \r\n            if (JSON.parse(localStorage.getItem('usuario')).rol === ROL_HAITECH) {\r\n                dataArreglada = this.procesardataHaitech(resultado)  \r\n            }else  {\r\n                dataArreglada = this.procesardata(resultado)\r\n            }\r\n \r\n            const ws = XLSX.utils.json_to_sheet(dataArreglada);\r\n            const wb = { Sheets: { 'Reporte uso de garantia': ws }, SheetNames: ['Reporte uso de garantia'] };\r\n\r\n            // ws['!protect'] = {\r\n            //     password:\"password\",\r\n            //     /* enable formatting rows and columns */\r\n            //     formatRows:false,\r\n            //     formatColumns:false,\r\n            //     /* disable editing objects and scenarios */\r\n            //     objects:true,\r\n            //     scenarios:true\r\n            // };\r\n            var wscols = [\r\n                { wch: 30 },\r\n                { wch: 30 },\r\n                { wch: 30 },\r\n                { wch: 30 },\r\n                { wch: 30 }\r\n\r\n                // {hidden: true} // hide column\r\n            ];\r\n\r\n\r\n            ws['!cols'] = wscols;\r\n\r\n            const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n            const data = new Blob([excelBuffer], { type: fileType });\r\n            FileSaver.saveAs(data, fileName + \" \" + getCurrentDate('-') + fileExtension);\r\n\r\n            this.cerrarModalReporteGarantia();\r\n\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    fn_eliminarOrden = () => {\r\n        const orden = {\r\n            IDStatus: localStorage.getItem('IDStatusInactivo')\r\n        }\r\n        Swal.fire({\r\n            title: '¿Está usted seguro/a?',\r\n            text: \"¡Esta orden se eliminará permanentemente!\",\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Si, eliminar'\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                axios.post(`${API_POST_GUARDAR_ORDEN}/${localStorage.getItem('current_IDOrden')}`, orden).then(res => {\r\n                    this.props.guardarRecargarProductos(true)\r\n                    this.props.history.push('/ordenesgarantia')\r\n                })\r\n\r\n\r\n                Swal.fire(\r\n                    '¡Eliminado!',\r\n                    'La orden ha sido eliminada.',\r\n                    'success'\r\n                )\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    handleDateChange = (date) => {\r\n\r\n        this.setState({\r\n            fechaInicio: date\r\n        })\r\n    }\r\n    handleDateChangeFechaFin = (date) => {\r\n\r\n        this.setState({\r\n            fechaFin: date\r\n        })\r\n    }\r\n\r\n    handleAfterPrint = () => console.log('after print!');\r\n    handleBeforePrint = () => console.log('before print!');\r\n    renderContent = () => this.componentRef;\r\n    renderTrigger = () => <button type=\"button\">Print this out!</button>;\r\n    //   onBeforeGetContent = () => this.setState({text: \"text changed\"});\r\n\r\n    setRef = ref => this.componentRef = ref;\r\n\r\n\r\n\r\n    render() {\r\n        try {\r\n\r\n            var permisoEstil1 = (JSON.parse(localStorage.getItem('usuario')).rol === ROL_ADMINISTRADOR) ? { display: '' } : { display: 'none' }\r\n\r\n            if (JSON.parse(localStorage.getItem('usuario')).rol === ROL_HAITECH) {\r\n                permisoEstil1 = { display: '' };\r\n\r\n            }\r\n\r\n            // var DescargarExcel = (JSON.parse(localStorage.getItem('usuario')).rol === ROL_HAITECH) ? { display: '' } : { display: 'none' }\r\n            // var EditarHaitech = (JSON.parse(localStorage.getItem('usuario')).rol === ROL_HAITECH) ? { display: 'none' } : { display: '' }\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n        const columns = [\r\n            {\r\n                name: \"IDOrden\",\r\n                label: \"IDOrden\",\r\n                options: {\r\n                    filter: false,\r\n                    sort: false,\r\n                }\r\n            },\r\n\r\n            {\r\n                name: \"fecha\",\r\n                label: \"Fecha\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: false,\r\n                }\r\n            },\r\n\r\n            {\r\n                name: \"serie\",\r\n                label: \"Serie\",\r\n                options: {\r\n                    filter: false,\r\n                    sort: false,\r\n                }\r\n            },\r\n\r\n\r\n\r\n\r\n            {\r\n                name: \"falla\",\r\n                label: \"Falla\",\r\n                options: {\r\n                    filter: false,\r\n                    sort: false,\r\n\r\n                }\r\n            },\r\n\r\n            {\r\n                name: \"informeTecnico\",\r\n                label: \"Trabajo\",\r\n                options: {\r\n                    filter: false,\r\n                    sort: false,\r\n                }\r\n            },\r\n            {\r\n                name: \"cliente\",\r\n                label: \"Cliente\",\r\n                options: {\r\n                    filter: false,\r\n                    sort: false,\r\n                }\r\n            },\r\n            {\r\n                name: \"fechaReparacion\",\r\n                label: \"F. reparación\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: false,\r\n                }\r\n            },\r\n            {\r\n                name: \"distrito\",\r\n                label: \"Distrito\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: false,\r\n                }\r\n            },\r\n            {\r\n                name: \"ie\",\r\n                label: \"IE\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: false,\r\n                }\r\n            },\r\n\r\n\r\n            {\r\n                name: \"\",\r\n                options: {\r\n                    filter: false,\r\n                    sort: false,\r\n                    empty: true,\r\n\r\n\r\n\r\n                    customBodyRender: (value, tableMeta, updateValue) => {\r\n\r\n                        var currentIDOrden = localStorage.getItem('current_IDOrden')\r\n                        var PermisoAdministrador = false;\r\n                        if (tableMeta.rowData !== undefined) {\r\n\r\n                            localStorage.setItem('current_IDOrden', tableMeta.rowData[0])\r\n                            currentIDOrden = localStorage.getItem('current_IDOrden')\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        }\r\n\r\n                        try {\r\n                            var permisoEstilo = (JSON.parse(localStorage.getItem('usuario')).rol === ROL_ADMINISTRADOR) ? { display: '' } : { display: 'none' }\r\n                            var editarOrdenHaitech = (JSON.parse(localStorage.getItem('usuario')).rol === ROL_HAITECH) ? { display: 'none' } : { display: '' }\r\n                        } catch (error) {\r\n\r\n                        }\r\n\r\n\r\n                        return (\r\n                            <div>\r\n                                <IconButton\r\n                                    onClick={this.handleClickOpen}\r\n                                    disabled={false}\r\n                                    title=\"Ver/Descargar Orden\"\r\n                                    color=\"primary\"\r\n                                    aria-label=\"Imprimir\">\r\n                                    <Edit fontSize=\"small\" />\r\n                                </IconButton>\r\n\r\n\r\n                                <Link to={`/ordengarantia/editar/${currentIDOrden}`}    >\r\n                                    <IconButton\r\n                                        style={editarOrdenHaitech}\r\n                                        title=\"¿Editar Orden?\"\r\n                                        // onClick={this.fn_eliminarCliente}\r\n                                        // style={btnEliminarStyle}\r\n                                        color=\"primary\"\r\n                                        aria-label=\"Imprimir\">\r\n                                        <Editar fontSize=\"small\" />\r\n                                    </IconButton>\r\n                                </Link>\r\n\r\n\r\n\r\n\r\n                                <IconButton\r\n                                    disabled={PermisoAdministrador}\r\n                                    title=\"¿Eliminar Orden?\"\r\n                                    style={permisoEstilo}\r\n                                    onClick={this.fn_eliminarOrden}\r\n                                    // style={btnEliminarStyle}\r\n                                    color=\"primary\"\r\n                                    aria-label=\"Imprimir\">\r\n                                    <Delete fontSize=\"small\" />\r\n                                </IconButton>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    , onRowClick: (rowData, rowState) => {\r\n\r\n                        if (rowData.rowData !== undefined) {\r\n                            localStorage.setItem('current_IDOrden', rowData.rowData[0])\r\n                        }\r\n                    },\r\n                }\r\n            }\r\n\r\n\r\n        ];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        var data = this.props.Reporteordenes.filter(ordenes => {\r\n            return ordenes.garantia == \"APLICA GARANTIA\"\r\n        })\r\n\r\n        const options = {\r\n            download: false,\r\n            print: false,\r\n            filterType: 'select',\r\n            responsive: \"scroll\",\r\n\r\n\r\n            onRowClick: (rowData, rowState) => {\r\n                localStorage.setItem(\"current_IDOrden\", rowData[0]);\r\n\r\n\r\n                axios.get(`${API_GET_UNA_ORDEN}/${rowData[0]}`).then(response => {\r\n\r\n                    const dataBruta = response.data[0]\r\n\r\n                    if (dataBruta.falla !== null && dataBruta.falla !== \"\") {\r\n                        var jsonFallas = JSON.parse(dataBruta.falla)\r\n                        var cadenaFallas = \"\";\r\n                        _.forEach(jsonFallas, function (value, key) {\r\n                            cadenaFallas += value.LABEL + \", \"\r\n                        })\r\n                        cadenaFallas = cadenaFallas.slice(0, -2);\r\n                        dataBruta.falla = cadenaFallas;\r\n                    }\r\n\r\n\r\n                    this.setState({\r\n                        unaOrden: response.data[0]\r\n                    })\r\n\r\n                })\r\n\r\n            }\r\n\r\n\r\n\r\n        };\r\n\r\n\r\n\r\n        return (\r\n\r\n            <div id=\"tablaDatos\">\r\n\r\n\r\n                <div id=\"garantia\">\r\n                    <Fab className=\"flotante\" style={permisoEstil1} size=\"small\" color=\"secondary\" aria-label=\"Add\"\r\n                        onClick={this.abrirModalReporteGarantia}  >\r\n                        <PlayForWork />\r\n                    </Fab>\r\n\r\n\r\n\r\n                    <MUIDataTable\r\n\r\n                        title={\"Listado Ordenes Garantia\"}\r\n                        data={data}\r\n                        columns={columns}\r\n                        options={options}\r\n                    />\r\n\r\n                </div>\r\n\r\n\r\n                <Dialog\r\n                    open={this.state.modalImpresionOrden}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    {/* <DialogTitle id=\"alert-dialog-title\">{\"Reimprimir esta orden?\"}</DialogTitle> */}\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n\r\n\r\n\r\n                            <OrdenDiseño  handleClose={this.handleClose} orden={this.state.unaOrden} >  </OrdenDiseño>\r\n\r\n\r\n\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n\r\n                </Dialog>\r\n\r\n\r\n\r\n\r\n                <Dialog\r\n                    open={this.state.modalReporteGarantia}\r\n                    // TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={this.cerrarModalReporteGarantia}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\">{\"Seleccione un rango de fecha para el reporte de garantia\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-slide-description\">\r\n\r\n\r\n\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\">\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n                                        todayLabel=\"asdadasd\"\r\n                                        cancelLabel=\"Cancelar\"\r\n\r\n                                        minDateMessage=\"La fecha desde no puede ser mayor a la fecha hasta\"\r\n                                        id=\"date-picker-dialog\"\r\n                                        label=\"Date picker dialog\"\r\n                                        format=\"yyyy-MM-dd\"\r\n                                        value={this.state.fechaInicio}\r\n                                        onChange={this.handleDateChange}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n\r\n                                        cancelLabel=\"Cancelar\"\r\n\r\n                                        minDateMessage=\"La fecha hasta no puede ser menor a la fecha desde\"\r\n                                        id=\"date-picker-dialog\"\r\n                                        label=\"Date picker dialog\"\r\n                                        minDate={this.state.fechaInicio}\r\n                                        format=\"yyyy-MM-dd\"\r\n                                        value={this.state.fechaFin}\r\n                                        onChange={this.handleDateChangeFechaFin}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n\r\n\r\n\r\n\r\n\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={this.cerrarModalReporteGarantia} color=\"primary\"> Cancelar </Button>\r\n                        <Button onClick={(e) => this.descargarExcel(this.state.customers, this.state.fileName)} color=\"primary\">  Descargar </Button>\r\n                    </DialogActions>\r\n\r\n                </Dialog>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(OrdenesGarantia);","import React   from 'react';\r\n// import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n// import DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n// import DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\n \r\n \r\n\r\n\r\nimport Clientes from  '../Clientes'\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\nfunction ModalOrden({Zonas,   setRecargarColegios ,setCurrentDistrito ,Colegios , Distritos , setOpenProps, handleCloseModalCliente, Ciudades, setRecargarClientes,  ReportClientes }) {\r\n    // const [open, setOpen] = React.useState(setOpenProps);\r\n\r\n \r\n\r\n\r\n    function handleClose(datos, guardar) {\r\n\r\n\r\n        try {\r\n\r\n            // if (guardar) {\r\n            //     axios.post(\"http://127.0.0.1:8000/api/cliente\",datos\r\n            //     ).then(res => {\r\n            //         setRecargarClientes(true)\r\n            //     })\r\n                \r\n            // }\r\n\r\n            handleCloseModalCliente(false)\r\n\r\n        } catch (error) {\r\n            handleCloseModalCliente(false)\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            <Dialog \r\n             maxWidth= \"xl\"\r\n                open={setOpenProps}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                {/* <div className=\"title-cliente\"> Nuevo Cliente </div> */}\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n\r\n                    <Clientes ReportClientes={ReportClientes} Ciudades={Ciudades}\r\n                                        setRecargarClientes={setRecargarClientes}\r\n                                        titulo=\"Seleccione un cliente\"\r\n                                        handleCloseModalCliente= {handleCloseModalCliente}\r\n                                        btnEditar={false}\r\n                                        btnELiminar={false}\r\n                                        btnSeleccionar={true}\r\n                                        btnNuevoCliente ={true}\r\n                                        Zonas={Zonas}\r\n                                        Distritos={Distritos}\r\n                                        Colegios={Colegios}\r\n                                        setCurrentDistrito={setCurrentDistrito}\r\n                                        setRecargarColegios={setRecargarColegios}\r\n                              \r\n                                    ></Clientes>\r\n\r\n\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n\r\n\r\n\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default (ModalOrden);","/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 500,\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n}));\r\n\r\nconst filter = createFilterOptions();\r\n\r\nexport default function AutocompleteSugerencias({ activo, classe, className, catalogFallas, fallasDefault, setNuevasFallas }) {\r\n\r\n    const ccccc = useStyles();\r\n\r\n\r\n    // const [nuevasFallas , setNuevasFallas] = React.useState([])\r\n\r\n    const catalogoErroresDefault = [\r\n        catalogFallas[0],\r\n        catalogFallas[4]\r\n    ]\r\n\r\n\r\n    const [value, setValue] = React.useState({\r\n        label: '',\r\n        value: '',\r\n    });\r\n    const [open, toggleOpen] = React.useState(false);\r\n\r\n    const handleClose = () => {\r\n        setDialogValue({\r\n            label: '',\r\n            value: '',\r\n        });\r\n\r\n        toggleOpen(false);\r\n    };\r\n\r\n    const [dialogValue, setDialogValue] = React.useState({\r\n        label: '',\r\n        value: '',\r\n    });\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setValue({\r\n            label: dialogValue.label,\r\n            value: parseInt(dialogValue.value, 10),\r\n        });\r\n\r\n        handleClose();\r\n    };\r\n\r\n\r\n\r\n    if (fallasDefault === null) {\r\n        return (\r\n            <React.Fragment>\r\n                <Autocomplete\r\n\r\n                    multiple\r\n                    id=\"free-solo-dialog-demo\"\r\n                    options={catalogFallas}\r\n                    onChange={(event, newValue) => {\r\n                        setNuevasFallas(JSON.stringify(newValue))\r\n                        setValue(newValue);\r\n\r\n                    }}\r\n\r\n                    filterOptions={(options, params) => {\r\n                        const filtered = filter(options, params);\r\n\r\n                        if (params.inputValue !== '') {\r\n\r\n                            filtered.push({\r\n                                value: \"INSERTAR_FALLA\",\r\n                                label: `Añadir \"${params.inputValue}\"`,\r\n                                nombreFalla: params.inputValue\r\n                                // label:  params.inputValue\r\n                            });\r\n                        }\r\n                        return filtered;\r\n                    }}\r\n\r\n                    getOptionLabel={(option) => {\r\n                        if (typeof option === 'string') {\r\n                            return option;\r\n                        }\r\n                        if (option.nombreFalla) {\r\n\r\n                            return option.nombreFalla;\r\n                        }\r\n                        return option.label;\r\n                    }}\r\n                    selectOnFocus\r\n                    clearOnBlur\r\n                    renderOption={(option) => option.label}\r\n                    style={{ width: 800 }}\r\n                    freeSolo\r\n                    renderInput={(params) => (\r\n                        <TextField {...params} className={classe} label=\"Fallas\"\r\n                            multiline\r\n                            margin=\"dense\"\r\n                            rowsMax=\"20\"\r\n\r\n                        />\r\n                    )}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    } else {\r\n        return (\r\n            <React.Fragment>\r\n                <Autocomplete\r\n                    defaultValue={fallasDefault}\r\n                    disabled={activo}\r\n                    multiple\r\n                    id=\"free-solo-dialog-demo\"\r\n                    options={catalogFallas}\r\n                    onChange={(event, newValue) => {\r\n\r\n                        setNuevasFallas(JSON.stringify(newValue))\r\n                        setValue(newValue);\r\n\r\n                    }}\r\n\r\n                    filterOptions={(options, params) => {\r\n                        const filtered = filter(options, params);\r\n\r\n                        if (params.inputValue !== '') {\r\n\r\n                            filtered.push({\r\n                                value: \"INSERTAR_FALLA\",\r\n                                label: `Añadir \"${params.inputValue}\"`,\r\n                                nombreFalla: params.inputValue\r\n                                // label:  params.inputValue\r\n                            });\r\n                        }\r\n                        return filtered;\r\n                    }}\r\n\r\n                    getOptionLabel={(option) => {\r\n                        if (typeof option === 'string') {\r\n                            return option;\r\n                        }\r\n                        if (option.nombreFalla) {\r\n\r\n                            return option.nombreFalla;\r\n                        }\r\n                        return option.label;\r\n                    }}\r\n                    selectOnFocus\r\n                    clearOnBlur\r\n                    renderOption={(option) => option.label}\r\n                    style={{ width: 800 }}\r\n                    freeSolo\r\n                    renderInput={(params) => (\r\n                        <TextField {...params} className={classe} label=\"Fallas\"\r\n                            multiline\r\n                            margin=\"dense\"\r\n                            rowsMax=\"20\"\r\n                            disabled={false}\r\n                        />\r\n                    )}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\n// const top100Films =catalogFallas;\r\n","import React ,{useState} from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport  moment from 'moment'\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport { getCurrentDate } from '../../utils'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst FechaListo = ({setmodalFechaReparacion,modalFechaReparacion, setmensajeEstadoOrden, setfechaReparacion ,  fechaReparacion }) => {\r\n\r\n\r\n    const cerrarModalReporteGarantia = () => {\r\n        setmensajeEstadoOrden (\"Reparada el: \" +  getCurrentDate('-'))\r\n        setmodalFechaReparacion(false)\r\n      }\r\n      const AceptarFechaReporteGarantia = () => {\r\n        setmodalFechaReparacion(false)\r\n        setmensajeEstadoOrden(\"Reparada el: \" + moment(fechaReparacion).format(\"YYYY-MM-DD\"))\r\n      }\r\n      const handleDateChange = (date) => {\r\n        setfechaReparacion( date )\r\n        setmensajeEstadoOrden(\"Reparada el: \" + fechaReparacion)\r\n    \r\n      }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Dialog\r\n                open={modalFechaReparacion}\r\n                // TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={cerrarModalReporteGarantia}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Especifique la fecha de reparación\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n\r\n \r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <Grid container justify=\"space-around\">\r\n\r\n                                <KeyboardDatePicker\r\n                                    margin=\"normal\"\r\n                                    todayLabel=\"asdadasd\"\r\n                                    cancelLabel=\"Cancelar\"\r\n                                    minDateMessage=\"La fecha desde no puede ser mayor a la fecha hasta\"\r\n                                    id=\"date-picker-dialog\"\r\n                                    label=\"Fecha de reparación\"\r\n                                    format=\"yyyy-MM-dd\"\r\n                                    value={fechaReparacion}\r\n                                    onChange={handleDateChange}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n\r\n\r\n\r\n                            </Grid>\r\n                        </MuiPickersUtilsProvider>\r\n \r\n\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={cerrarModalReporteGarantia} color=\"primary\"> Cancelar </Button>\r\n                    <Button onClick={AceptarFechaReporteGarantia} color=\"primary\">  Guardar </Button>\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FechaListo;","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { withRouter } from 'react-router-dom'\r\nimport moment from 'moment';\r\nimport Swal from \"sweetalert2\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport ModalOrden from './ModalOrden'\r\nimport iziToast from \"izitoast\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport uuid from 'uuid/v4'\r\nimport _ from 'lodash'\r\nimport { getCurrentDate,gettDateSumDays } from '../../utils'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\n\r\nimport { API_CATALOGO_FALLAS, API_GET_ORDEN_CODIGO, API_POST_GUARDAR_ORDEN, API_MARCA, API_TIPO_EQUIPO } from \"../../Constantes\";\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport Autocomplete from '../Autocomplete'\r\nimport FechaListo from '../FechaListo';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n  root: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: 400,\r\n  },\r\n  input: {\r\n    marginLeft: 8,\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    width: 1,\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n\r\n\r\n\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    // width: '50%'\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n\r\n    marginRight: theme.spacing(1),\r\n    width: 250,\r\n  },\r\n  textFieldSalto: {\r\n\r\n\r\n    marginRight: theme.spacing(-5),\r\n    width: 250,\r\n  },\r\n\r\n\r\n  textFieldCi: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 300,\r\n  },\r\n  textFieldAll: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 525,\r\n  },\r\n  buttonAdd: {\r\n    width: 35,\r\n    height: 0,\r\n    marginLeft: \"-15px\",\r\n    marginTop: 15,\r\n    backgroundColor: \"#a7aab9\"\r\n\r\n  },\r\n\r\n  linea: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(28),\r\n    width: 830,\r\n  },\r\n  textFieldInforme: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 790,\r\n  },\r\n  dense: {\r\n    marginTop: 19,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n  button: {\r\n    marginLeft: '5%',\r\n    clear: 'both'\r\n  }\r\n}));\r\n\r\n\r\n\r\n\r\nfunction TextFields({esTecnico, Zonas, setRecargarColegios, setCurrentDistrito, Colegios, Distritos, catalogFallas, setRecargarCombos, history, guardarRecargarProductos, tiposEquipos, marcas, ReportClientes, Ciudades, setRecargarClientes, operarios, estadosOrden, garantias, orden }) {\r\n\r\n \r\n\r\n  const [nuevasFallas, setNuevasFallas] = React.useState([])\r\n\r\n  const [modalFechaReparacion, setmodalFechaReparacion] = useState(false)\r\n  const [mensajeEstadoOrden, setmensajeEstadoOrden] = useState(\"Por favor, seleccione un estado\");\r\n  const [fechaReparacion, setfechaReparacion] = useState(gettDateSumDays('-', 3))\r\n\r\n  var datos = ReportClientes;\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleDateChange = (date) => {\r\n    setfechaReparacion(date)\r\n\r\n\r\n  }\r\n\r\n  const [values, setValues] = React.useState({\r\n    currency: '',\r\n  });\r\n\r\n\r\n  const [objMarcas, setMarcas] = React.useState({\r\n    marcas: '',\r\n  });\r\n\r\n  const [objEstadosOrden, setEstadosOrden] = React.useState({\r\n    estadosOrden: '',\r\n  });\r\n\r\n\r\n  const [objOperarios, setOperarios] = React.useState({\r\n    operarios: '',\r\n  });\r\n\r\n  const [objGarantias, setGarantias] = React.useState({\r\n    garantias: '',\r\n  });\r\n\r\n  const cambioGarantias = name => event => {\r\n    setGarantias({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n\r\n  const cambioMarcas = name => event => {\r\n    setMarcas({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const cambioEstadosOrden = name => event => {\r\n    if (event.nativeEvent.explicitOriginalTarget.textContent === \"LISTO\") {\r\n      setmodalFechaReparacion(true)\r\n    } else {\r\n      setmensajeEstadoOrden(\"Por favor, seleccione un estado\")\r\n      setfechaReparacion(\"Por favor, seleccione un estado\")\r\n    }\r\n\r\n    setEstadosOrden({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const cambioOperarios = name => event => {\r\n    setOperarios({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n\r\n  const [codigo, setCodigo] = useState('')\r\n  const [primerNombre, setPrimerNombre] = useState('')\r\n\r\n  const [banderaModalNuevaOrden, setBanderaModalNuevaOrden] = useState(false)\r\n\r\n\r\n  // Caluclo valores.\r\n\r\n  const [__saldo, __setSaldo] = useState(0)\r\n\r\n\r\n\r\n\r\n\r\n  const currencies = marcas\r\n  const _tiposEquipos = tiposEquipos\r\n  const _operarios = operarios\r\n  const ordenesStatus = estadosOrden\r\n  const _garantias = garantias\r\n\r\n\r\n\r\n  const [valores, setValores] = useState({ numeroticket: '' , modelo: '', serie: '', accesorios: '', fallas: '', total: '', abono: '', saldo: '', currency: '', informe: '' })\r\n\r\n\r\n\r\n\r\n\r\n  const fn_onChange = e => {\r\n    const { name, value } = e.target\r\n\r\n\r\n    //  let regex = new RegExp(\"^[ñíóáéú a-zA-Z , .]+$\")\r\n    var regex = new RegExp(\"^[0-9  .]+$\")\r\n\r\n\r\n    if (e.target.name === \"total\" || e.target.name === \"abono\") {\r\n\r\n      for (let i = 0; i <= value.length - 1; i++) {\r\n        let letra = value[i]\r\n        if (!regex.test(letra) || !letra === \" \") {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n    setValores({ ...valores, [name]: value })\r\n\r\n\r\n\r\n\r\n\r\n\r\n    if (e.target.name === \"total\") {\r\n      const { abono } = valores\r\n      if (abono === \"\") {\r\n        __setSaldo(\"$ \" + e.target.value)\r\n      } else {\r\n        __setSaldo(\"$ \" + (e.target.value - abono))\r\n      }\r\n    }\r\n\r\n\r\n    if (e.target.name === \"abono\") {\r\n      const { total } = valores\r\n      if (total === \"\") {\r\n        __setSaldo(\"$ \" + e.target.value)\r\n      } else {\r\n        __setSaldo(\"$ \" + (total - e.target.value))\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  const fn_Cancelar = () => {\r\n    history.push('/ordenes')\r\n  }\r\n\r\n\r\n\r\n  const agregarTipoEquipo = (e) => {\r\n    Swal.fire({\r\n      title: 'Ingrese nuevo tipo de equipo',\r\n      input: 'text',\r\n      inputAttributes: {\r\n        autocapitalize: 'off'\r\n      },\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Guardar',\r\n      cancelButtonText: 'Cancelar',\r\n      showLoaderOnConfirm: true,\r\n      preConfirm: (login) => {\r\n\r\n        var TipoEquipo = {\r\n          IDTipoEquipo: uuid(),\r\n          descripcion: login,\r\n          IDStatus: localStorage.getItem(\"IDStatusActivo\")\r\n        }\r\n        axios.post(API_TIPO_EQUIPO, TipoEquipo).then(respose => {\r\n          setRecargarCombos(true)\r\n        })\r\n        // })\r\n      },\r\n      allowOutsideClick: () => !Swal.isLoading()\r\n    })\r\n  }\r\n\r\n  const agregarMarca = (e) => {\r\n    Swal.fire({\r\n      title: 'Ingrese nueva marca',\r\n      input: 'text',\r\n      inputAttributes: {\r\n        autocapitalize: 'off'\r\n      },\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Guardar',\r\n      cancelButtonText: 'Cancelar',\r\n      showLoaderOnConfirm: true,\r\n      preConfirm: (marcaText) => {\r\n\r\n        var marca = {\r\n          IDMarca: uuid(),\r\n          descripcion: marcaText,\r\n          IDStatus: localStorage.getItem(\"IDStatusActivo\")\r\n        }\r\n        axios.post(API_MARCA, marca).then(respose => {\r\n          setRecargarCombos(true)\r\n        })\r\n        // })\r\n      },\r\n      allowOutsideClick: () => !Swal.isLoading()\r\n    })\r\n  }\r\n\r\n  const guardarOrden = (e) => {\r\n\r\n    var fallasListadoyNuevas;\r\n    if (nuevasFallas.length > 2) {\r\n\r\n\r\n      const fallasSeleccionEnter = _.filter(JSON.parse(nuevasFallas), function (fallas) { return fallas.value === undefined })\r\n      const fallasSeleccionadasDelListado = _.filter(JSON.parse(nuevasFallas), function (fallas) { return fallas.value !== \"INSERTAR_FALLA\" && fallas.value !== undefined })\r\n      const fallasNuevasInsertadas = _.filter(JSON.parse(nuevasFallas), function (fallas) { return fallas.value === \"INSERTAR_FALLA\" })\r\n      const fallasNuevasConID = []\r\n      const dataInsert = []\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      _.forEach(fallasSeleccionEnter, function (value, key) {\r\n        var id = uuid();\r\n\r\n        var unaFalla = {\r\n          value: id,\r\n          label: value\r\n        }\r\n        fallasNuevasConID.push(unaFalla)\r\n\r\n        unaFalla = {\r\n          IDCatalogoFallas: id,\r\n          descripcion: value,\r\n          IDStatus: localStorage.getItem(\"IDStatusActivo\")\r\n        }\r\n        dataInsert.push(unaFalla)\r\n\r\n\r\n      });\r\n\r\n      _.forEach(fallasNuevasInsertadas, function (value, key) {\r\n\r\n        var id = uuid();\r\n\r\n        var unaFalla = {\r\n          value: id,\r\n          label: value.nombreFalla\r\n\r\n        }\r\n        fallasNuevasConID.push(unaFalla)\r\n\r\n        unaFalla = {\r\n          IDCatalogoFallas: id,\r\n          descripcion: value.nombreFalla,\r\n          IDStatus: localStorage.getItem(\"IDStatusActivo\")\r\n        }\r\n        dataInsert.push(unaFalla)\r\n      });\r\n\r\n      fallasListadoyNuevas = _.concat(fallasSeleccionadasDelListado, fallasNuevasConID);\r\n      fallasListadoyNuevas = JSON.stringify(fallasListadoyNuevas)\r\n\r\n\r\n\r\n      if (dataInsert.length > 0) {\r\n        axios.post(API_CATALOGO_FALLAS, dataInsert).then(rest => {\r\n          console.log(\"estado insercion fallas\", rest.data)\r\n        })\r\n      }\r\n\r\n\r\n\r\n    } else {\r\n      fallasListadoyNuevas = null;\r\n    }\r\n\r\n\r\n    e.preventDefault();\r\n    const { modelo, serie, accesorios, fallas, total, abono, saldo, informe, numeroticket } = valores\r\n\r\n    // if (values.currency === \"\") {\r\n    //   iziToast.error({\r\n    //     title: 'Campos imcompletos',\r\n    //     message: 'Seleccione el Tipo de equipo',\r\n    //     timeout: 2000,\r\n    //     position: \"topRight\"\r\n    //   });\r\n    //   return\r\n    // }\r\n\r\n    // if (objMarcas.marcas === \"\") {\r\n    //   iziToast.error({\r\n    //     title: 'Campos imcompletos',\r\n    //     message: 'Seleccione la marca del equipo',\r\n    //     timeout: 2000,\r\n    //     position: \"topRight\"\r\n    //   });\r\n    //   return\r\n    // }\r\n\r\n    // if (objOperarios.operarios === \"\") {\r\n    //   iziToast.error({\r\n    //     title: 'Campos imcompletos',\r\n    //     message: 'Seleccione quien recibió el equipo',\r\n    //     timeout: 2000,\r\n    //     position: \"topRight\"\r\n    //   });\r\n    //   return\r\n    // }\r\n\r\n    // if (objEstadosOrden.estadosOrden === \"\") {\r\n    //   iziToast.error({\r\n    //     title: 'Campos imcompletos',\r\n    //     message: 'Seleccione el estado de la orden',\r\n    //     timeout: 2000,\r\n    //     position: \"topRight\"\r\n    //   });\r\n    //   return\r\n    // }\r\n\r\n    // if (objGarantias.garantias === \"\") {\r\n    //   iziToast.error({\r\n    //     title: 'Campos imcompletos',\r\n    //     message: 'Seleccione si el equipo aplica garantía',\r\n    //     timeout: 2000,\r\n    //     position: \"topRight\"\r\n    //   });\r\n    //   return\r\n    // }\r\n\r\n\r\n    var valorAbono = 0;\r\n    if (abono !== \"\") {\r\n      valorAbono = abono;\r\n    }\r\n\r\n\r\n    var valorTotal = 0;\r\n    if (total !== \"\") {\r\n      valorTotal = total;\r\n    }\r\n\r\n    Swal.fire({\r\n      title: 'Guardando orden',\r\n      timer: 1500,\r\n      onBeforeOpen: () => {\r\n        Swal.showLoading()\r\n      },\r\n    })\r\n\r\n    axios.get(API_GET_ORDEN_CODIGO).then(nOrden => {\r\n\r\n\r\n\r\n      const orden = {\r\n        IDOrden: uuid()\r\n        , numeroOrden: nOrden.data[0].codigo\r\n        \r\n        // , modelo: modelo.toUpperCase()\r\n        , serie: serie.toUpperCase()\r\n        // , accesorios: accesorios.toUpperCase()\r\n        , falla: fallasListadoyNuevas\r\n        , fecha: getCurrentDate('-')\r\n        // , total: valorTotal\r\n        , informeTecnico: informe.toUpperCase()\r\n        // , IDTipoEquipo: values.currency\r\n        // , IDMarca: objMarcas.marcas\r\n        , IDCliente: JSON.parse(localStorage.getItem('currentCliente')).IDCliente\r\n        , IDStatus: localStorage.getItem('IDStatusActivo')\r\n        // , IDGarantia: objGarantias.garantias\r\n        , IDUsuario: (JSON.parse(localStorage.getItem('usuario')).IDUsuario)\r\n        // , IDEstadoOrden: objEstadosOrden.estadosOrden\r\n        , orden_varchar1: ''\r\n        , orden_varchar2: ''\r\n        , orden_entero1: valorAbono\r\n        , orden_entero2: ''\r\n        , orden_varchar1: fechaReparacion\r\n        , numeroticket: numeroticket\r\n      }\r\n\r\n \r\n      axios.post(API_POST_GUARDAR_ORDEN, orden).then(resp => {\r\n\r\n        guardarRecargarProductos(true)\r\n        setRecargarCombos(true)\r\n        history.push('/ordenes')\r\n        Swal.fire({\r\n          title: 'Un momento',\r\n          timer: 1500,\r\n          onBeforeOpen: () => {\r\n            Swal.showLoading()\r\n          },\r\n        })\r\n      })\r\n\r\n\r\n\r\n      // })\r\n\r\n    })\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  function SetStatusModal() {\r\n    setBanderaModalNuevaOrden(false)\r\n\r\n    try {\r\n      setCodigo(JSON.parse(localStorage.getItem('currentCliente')).codigo)\r\n      setPrimerNombre(JSON.parse(localStorage.getItem('currentCliente')).codigo + \" | \" + JSON.parse(localStorage.getItem('currentCliente')).nombres)\r\n\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  function SetStatusModalClose() {\r\n    setBanderaModalNuevaOrden(true)\r\n  }\r\n\r\n  var nombres = ((JSON.parse(localStorage.getItem('usuario')).nombre1) !== null) ? (JSON.parse(localStorage.getItem('usuario')).nombre1) : \"\"\r\n  var apellidos = ((JSON.parse(localStorage.getItem('usuario')).apellidoPaterno) !== null) ? (JSON.parse(localStorage.getItem('usuario')).apellidoPaterno) : \"\"\r\n\r\n  return (\r\n    <div >\r\n\r\n\r\n\r\n      <h1 className=\"text-center\">ORDEN DE INGRESO DE EQUIPO  </h1>\r\n      <Paper className={classes.root}>\r\n\r\n        <InputBase\r\n          className={classes.input}\r\n          // defaultValue={orden.cliente}\r\n          placeholder=\"Código del cliente\"\r\n          inputProps={{ 'aria-label': 'search google maps' }}\r\n          value={primerNombre}\r\n\r\n        />\r\n\r\n        <Divider className={classes.divider} />\r\n        <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"directions\" onClick={SetStatusModalClose} >\r\n          <SearchIcon />\r\n        </IconButton>\r\n      </Paper>\r\n\r\n      <form className={classes.container} onSubmit={guardarOrden} autoComplete=\"off\">\r\n\r\n        {/* <TextField\r\n          id=\"standard-select-currency\"\r\n          select\r\n          label=\"Tipo de Equipo\"\r\n          name=\"tipoEquipo\"\r\n          required\r\n          className={classes.textField}\r\n          value={values.currency}\r\n          onChange={handleChange('currency')}\r\n          SelectProps={{\r\n            MenuProps: {\r\n              className: classes.menu,\r\n            },\r\n          }}\r\n          helperText=\"Por favor, seleccione un tipo de equipo\"\r\n          margin=\"normal\"\r\n        >\r\n          {_tiposEquipos.map(option => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField> */}\r\n        {/* \r\n        <Fab className=\"flotante\" className={classes.buttonAdd} size=\"small\" color=\"primary\" aria-label=\"Add\" onClick={agregarTipoEquipo}  >\r\n          <AddIcon />\r\n        </Fab> */}\r\n\r\n        {/* <TextField\r\n          id=\"standard-select-currency\"\r\n          select\r\n          required\r\n          label=\"Marcas\"\r\n          className={classes.textField}\r\n          value={objMarcas.marcas}\r\n          onChange={cambioMarcas('marcas')}\r\n          SelectProps={{\r\n            MenuProps: {\r\n              className: classes.menu,\r\n            },\r\n          }}\r\n          helperText=\"Por favor, seleccione una marca\"\r\n          margin=\"normal\"\r\n        >\r\n          {currencies.map(option => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <Fab className=\"flotante\" className={classes.buttonAdd} onClick={agregarMarca} size=\"small\" color=\"primary\" aria-label=\"Add\"  >\r\n          <AddIcon />\r\n        </Fab> */}\r\n        {/* <TextField\r\n          id=\"standard-error\"\r\n          label=\"Modelo\"\r\n          required\r\n          name=\"modelo\"\r\n          //  defaultValue={orden.modelo}\r\n          value={valores.modelo}\r\n          className={classes.textField}\r\n          margin=\"normal\"\r\n          onChange={fn_onChange}\r\n        /> */}\r\n\r\n        <TextField\r\n          id=\"standard-disabled\"\r\n          label=\"Serie\"\r\n          name=\"serie\"\r\n          required\r\n          value={valores.serie}\r\n          //   defaultValue={orden.serie}\r\n          className={classes.textField}\r\n          margin=\"normal\"\r\n          onChange={fn_onChange}\r\n        />\r\n\r\n\r\n        <TextField\r\n          id=\"standard-password-input\"\r\n          label=\"Número de Ticket\"\r\n          multiline\r\n          rowsMax=\"25\"\r\n          //   defaultValue={orden.accesorios}\r\n          value={valores.numeroticket}\r\n          className={classes.textField}\r\n          margin=\"normal\"\r\n          name=\"numeroticket\"\r\n          onChange={fn_onChange}\r\n        />\r\n\r\n\r\n        {/* <TextField\r\n          id=\"standard-password-inputa\"\r\n          label=\"Falla/as\"\r\n          name=\"fallas\"\r\n          multiline\r\n          //  defaultValue={orden.falla}\r\n          value={valores.fallas}\r\n          rowsMax=\"20\"\r\n          className={classes.textFieldInforme}\r\n          margin=\"normal\"\r\n          onChange={fn_onChange}\r\n        /> */}\r\n\r\n\r\n        <Autocomplete\r\n          className={classes.textField}\r\n          classe={classes.textFieldInforme}\r\n          catalogFallas={catalogFallas}\r\n          fallasDefault={null}\r\n          setNuevasFallas={setNuevasFallas}\r\n          activo={true}\r\n\r\n        />\r\n\r\n      \r\n\r\n\r\n        {/* <TextField\r\n          id=\"standard-sdelect-currency\"\r\n          select\r\n          label=\"Recibido por\"\r\n          className={classes.textField}\r\n          required\r\n          value={objOperarios.operarios}\r\n          onChange={cambioOperarios('operarios')}\r\n          SelectProps={{\r\n            MenuProps: {\r\n              className: classes.menu,\r\n            },\r\n          }}\r\n          helperText=\"Por favor, seleccione por quien fue recibido el equipo.\"\r\n          margin=\"normal\"\r\n        >\r\n          {_operarios.map(option => (\r\n            <MenuItem key={option.IDUsuario} value={option.IDUsuario}>\r\n              {`${option.nombre1} ${option.apellidoPaterno}`}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField> */}\r\n\r\n\r\n\r\n        <TextField\r\n          id=\"standard-password-inputsa\"\r\n          label=\"Informe Técnico\"\r\n          name=\"informe\"\r\n          //  defaultValue={orden.informeTecnico}\r\n          multiline\r\n          // fullWidth\r\n          value={valores.informe}\r\n          rowsMax=\"20\"\r\n          className={classes.textFieldInforme}\r\n          margin=\"normal\"\r\n          onChange={fn_onChange}\r\n        />\r\n        <hr className={classes.linea} />\r\n\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            todayLabel=\"asdadasd\"\r\n            disabled={esTecnico}\r\n            cancelLabel=\"Cancelar\"\r\n            minDateMessage=\"La fecha desde no puede ser mayor a la fecha hasta\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Fecha de solución\"\r\n            format=\"yyyy-MM-dd\"\r\n            value={fechaReparacion}\r\n            onChange={handleDateChange}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n\r\n\r\n        <TextField\r\n          id=\"standard-dense\"\r\n          label=\"Recibido por\"\r\n          name=\"total\"\r\n          disabled={true}\r\n          // {\"IDUsuario\":\"840d6dab-8a48-4e3c-b399-684492e4e786\",\"cedula\":\"1205627548\",\"nombre1\":\"Natalia\",\"nombre2\":\"Alejandrina\",\"apellidoPaterno\":\"Rosero\",\"apellidoMaterno\":\"Suárez\",\"celular\":\"0982202420\",\"direccion\":\"Bolívar #1229 y Décima Segunda\",\"correo\":\"angelitonaty@hotmail.com\",\"IDStatus\":\"e9190c49-9422-11e9-a5f4-141877d4ed22\",\"nick\":\"Naty\",\"pass\":\"0709\",\"IDRol\":\"d0da6713-9422-11e9-a5f4-141877d4ed22\",\"rol\":\"Administrador\"}\r\n          value={`${nombres} ${apellidos}`}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          margin=\"dense\"\r\n          onChange={fn_onChange}\r\n        // onChange={e => {__setTotal(e.target.value)} }\r\n        />\r\n\r\n\r\n\r\n        {/* <TextField\r\n          id=\"standard-dense\"\r\n          label=\"Total $\"\r\n          name=\"total\"\r\n          value={valores.total}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          margin=\"dense\"\r\n          onChange={fn_onChange}\r\n       \r\n        /> */}\r\n\r\n\r\n        {/* <TextField\r\n          id=\"standard-dense\"\r\n          label=\"Abono  $\"\r\n          name=\"abono\"\r\n          value={valores.abono}\r\n          //   defaultValue={orden.abonos}\r\n          className={clsx(classes.textField, classes.dense)}\r\n          margin=\"dense\"\r\n          onChange={fn_onChange}\r\n        // onChange={e => {__setAbono(e.target.value)} }\r\n        />\r\n        <TextField\r\n          id=\"standard-multiline-static\"\r\n          label=\"Saldo\"\r\n          name=\"saldo\"\r\n          // value={valores.saldo}\r\n          value={__saldo}\r\n          disabled\r\n          defaultValue=\"$\"\r\n          //  onChange={fn_onChange}\r\n          className={classes.textField}\r\n          //     defaultValue={orden.saldo}\r\n          onChange={e => { __setSaldo(e.target.value) }}\r\n          margin=\"normal\"\r\n        /> */}\r\n        {/* <TextField\r\n          id=\"standard-select-currencyss\"\r\n          select\r\n          required\r\n          label=\"Estado de la orden.\"\r\n          className={classes.textField}\r\n          value={objEstadosOrden.estadosOrden}\r\n          onChange={cambioEstadosOrden('estadosOrden')}\r\n          SelectProps={{\r\n            MenuProps: {\r\n              className: classes.menu,\r\n            },\r\n          }}\r\n          helperText={mensajeEstadoOrden}\r\n          margin=\"normal\"\r\n        >\r\n          {ordenesStatus.map(option => (\r\n            <MenuItem key={option.IDEstadoOrden} value={option.IDEstadoOrden}>\r\n              {option.descripcion}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField> */}\r\n        {/* <TextField\r\n          id=\"standard-select-currenscy-native\"\r\n          select\r\n          label=\"Aplica Garantía\"\r\n          className={classes.textFieldAll}\r\n          required\r\n          value={objGarantias.garantias}\r\n          onChange={cambioGarantias('garantias')}\r\n          SelectProps={{\r\n\r\n            MenuProps: {\r\n              className: classes.menu,\r\n            },\r\n          }}\r\n          helperText=\"¿Aplica Garantía?\"\r\n          margin=\"normal\"\r\n        >\r\n          {_garantias.map(option => (\r\n            <MenuItem key={option.IDEstadoOrden} value={option.IDGarantia}>\r\n              {option.descripcion}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField> */}\r\n        <hr className={classes.linea} />\r\n\r\n        <Button variant=\"contained\" size=\"small\" onClick={fn_Cancelar} className={classes.button}>\r\n          <Cancel className={clsx(classes.leftIcon, classes.iconSmall)} />\r\n          Cancelar\r\n      </Button>\r\n\r\n\r\n        <Button type=\"submit\" variant=\"contained\" size=\"small\" className={classes.button}>\r\n          <SaveIcon className={clsx(classes.leftIcon, classes.iconSmall)} />\r\n          Guardar\r\n      </Button>\r\n\r\n\r\n      </form>\r\n\r\n\r\n\r\n\r\n      {banderaModalNuevaOrden ? (\r\n\r\n        <ModalOrden setOpenProps={banderaModalNuevaOrden}\r\n          handleCloseModalCliente={SetStatusModal}\r\n          ReportClientes={datos}\r\n          Ciudades={Ciudades}\r\n          setRecargarClientes={setRecargarClientes}\r\n          Zonas={Zonas}\r\n          Distritos={Distritos}\r\n          Colegios={Colegios}\r\n          setCurrentDistrito={setCurrentDistrito}\r\n          setRecargarColegios={setRecargarColegios}\r\n\r\n        />\r\n      ) : (\r\n          <div></div>\r\n        )}\r\n\r\n\r\n        <FechaListo\r\n          setmodalFechaReparacion={setmodalFechaReparacion}\r\n          modalFechaReparacion={modalFechaReparacion}\r\n\r\n          mensajeEstadoOrden={mensajeEstadoOrden}\r\n          setmensajeEstadoOrden={setmensajeEstadoOrden}\r\n\r\n          setfechaReparacion={setfechaReparacion}\r\n          fechaReparacion={fechaReparacion}\r\n        />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(TextFields)","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport ModalOrden from './ModalOrden'\r\nimport moment from 'moment';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { getCurrentDate } from '../../utils'\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\nimport Autocomplete from '../Autocomplete'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport uuid from 'uuid/v4'\r\n\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n\r\n  KeyboardDatePicker,\r\n\r\n} from '@material-ui/pickers';\r\n\r\nimport _ from 'lodash'\r\n\r\nimport { API_POST_GUARDAR_ORDEN, API_CATALOGO_FALLAS } from \"../../Constantes\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n  root: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: 400,\r\n  },\r\n  input: {\r\n    marginLeft: 8,\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    width: 1,\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n\r\n\r\n\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    // width: '50%'\r\n  },\r\n  textFieldFalla: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 250,\r\n  },\r\n\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n\r\n    marginRight: theme.spacing(1),\r\n    width: 250,\r\n  },\r\n  textFieldSalto: {\r\n\r\n\r\n    marginRight: theme.spacing(-5),\r\n    width: 250,\r\n  },\r\n\r\n  linea: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(28),\r\n    width: 830,\r\n  },\r\n  textFieldCi: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 300,\r\n  },\r\n  textFieldAll: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 525,\r\n  },\r\n  textFieldInforme: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 790,\r\n  },\r\n  dense: {\r\n    marginTop: 19,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n  button: {\r\n    marginLeft: '5%',\r\n    clear: 'both'\r\n  }\r\n}));\r\n\r\n\r\nfunction EditarOrden({  setRecargarColegios, setCurrentDistrito,Colegios , Distritos , setRecargarCombos, catalogFallas, history, back, esTecnico, guardarRecargarProductos, tiposEquipos, marcas, ReportClientes, Ciudades, setRecargarClientes, operarios, estadosOrden, garantias, orden }) {\r\n\r\n\r\n  console.log(\"GARANTA \",orden)\r\n  var fallasDefaults = []\r\n  if (orden.falla === null || orden.falla === \"\") {\r\n    fallasDefaults =  null\r\n  } else {\r\n    fallasDefaults = JSON.parse(orden.falla.toLowerCase()) \r\n  }\r\n\r\n\r\n  const [nuevasFallas, setNuevasFallas] = React.useState([])\r\n\r\n\r\n  var datos = ReportClientes;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [mensajeEstadoOrden, setmensajeEstadoOrden] = useState(orden.fechaReparacion)\r\n\r\n\r\n\r\n  const [modalReporteGarantia, setmodalReporteGarantia] = useState(false);\r\n  const [fechaReparacion, setfechaReparacion] = useState(orden.fechaReparacion )\r\n\r\n\r\n\r\n\r\n\r\n  const cerrarModalReporteGarantia = () => {\r\n    setmodalReporteGarantia(false)\r\n  }\r\n  const AceptarFechaReporteGarantia = () => {\r\n    setmodalReporteGarantia(false)\r\n    setmensajeEstadoOrden(\"Reparada el: \" + moment(fechaReparacion).format(\"YYYY-MM-DD\"))\r\n  }\r\n\r\n  const abrirModalReporteGarantia = () => {\r\n    setmodalReporteGarantia(true)\r\n  }\r\n  const handleDateChange = (date) => {\r\n \r\n    setfechaReparacion(date)\r\n\r\n    setmensajeEstadoOrden(\"Reparada el: \" + fechaReparacion)\r\n\r\n  }\r\n\r\n  const [values, setValues] = React.useState({\r\n    currency: orden.IDTipoEquipo,\r\n  });\r\n\r\n\r\n  const [objMarcas, setMarcas] = React.useState({\r\n    marcas: orden.IDMarca,\r\n  });\r\n\r\n  const [objEstadosOrden, setEstadosOrden] = React.useState({\r\n    estadosOrden: orden.IDEstadoOrden,\r\n  });\r\n\r\n\r\n  const [objOperarios, setOperarios] = React.useState({\r\n    operarios: orden.IDUsuario,\r\n  });\r\n\r\n  const [objGarantias, setGarantias] = React.useState({\r\n    garantias: orden.IDGarantia,\r\n  });\r\n\r\n  const cambioGarantias = name => event => {\r\n    setGarantias({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n\r\n  const cambioMarcas = name => event => {\r\n    setMarcas({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const cambioEstadosOrden = name => event => {\r\n\r\n    if (event.nativeEvent.explicitOriginalTarget.textContent === \"LISTO\") {\r\n      setmodalReporteGarantia(true)\r\n    } else {\r\n      setmensajeEstadoOrden(\"Por favor, seleccione un estado\")\r\n    }\r\n    setEstadosOrden({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const cambioOperarios = name => event => {\r\n    setOperarios({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n\r\n  const [codigo, setCodigo] = useState('')\r\n  const [primerNombre, setPrimerNombre] = useState(orden.cliente)\r\n\r\n  const [banderaModalNuevaOrden, setBanderaModalNuevaOrden] = useState(false)\r\n\r\n\r\n  // Caluclo valores.\r\n\r\n  // const [__saldo, __setSaldo] = useState(orden.total.replace(\"$ \", \"\") - orden.abonos.replace(\"$ \", \"\"))\r\n\r\n\r\n\r\n\r\n\r\n  const currencies = marcas\r\n  const _tiposEquipos = tiposEquipos\r\n  const _operarios = operarios\r\n  const ordenesStatus = estadosOrden\r\n  const _garantias = garantias\r\n\r\n\r\n\r\n  const [valores, setValores] = useState({ modelo: orden.modelo, serie: orden.serie, accesorios: orden.accesorios, fallas: orden.falla , currency: '', informe: orden.informeTecnico , numeroTicket : orden.numeroTicket })\r\n  const fn_onChange = e => {\r\n    const { name, value } = e.target\r\n\r\n\r\n\r\n    var regex = new RegExp(\"^[0-9  .]+$\")\r\n    if (e.target.name === \"total\" || e.target.name === \"abono\") {\r\n      for (let i = 0; i <= value.length - 1; i++) {\r\n        let letra = value[i]\r\n        if (!regex.test(letra) || !letra === \" \") {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    setValores({ ...valores, [name]: value })\r\n\r\n    // if (e.target.name === \"total\") {\r\n    //   const { abono } = valores\r\n    //   if (abono === \"\") {\r\n    //     __setSaldo(\"$ \" + e.target.value)\r\n    //   } else {\r\n    //     __setSaldo(\"$ \" + (e.target.value - abono))\r\n    //   }\r\n    // }\r\n    // if (e.target.name === \"abono\") {\r\n    //   const { total } = valores\r\n    //   if (total === \"\") {\r\n    //     __setSaldo(\"$ \" + e.target.value)\r\n    //   } else {\r\n    //     __setSaldo(\"$ \" + (total - e.target.value))\r\n    //   }\r\n    // }\r\n\r\n  }\r\n\r\n  const fn_Cancelar = () => {\r\n    history.push(back)\r\n  }\r\n\r\n  const guardarOrden = () => {\r\n\r\n    var fallasListadoyNuevas;\r\n    if (nuevasFallas.length > 2) {\r\n      const fallasSeleccionEnter = _.filter(JSON.parse(nuevasFallas), function (fallas) { return fallas.value === undefined })\r\n      const fallasSeleccionadasDelListado = _.filter(JSON.parse(nuevasFallas), function (fallas) { return fallas.value !== \"INSERTAR_FALLA\" && fallas.value !== undefined })\r\n      const fallasNuevasInsertadas = _.filter(JSON.parse(nuevasFallas), function (fallas) { return fallas.value === \"INSERTAR_FALLA\" })\r\n      const fallasNuevasConID = []\r\n      const dataInsert = []\r\n  \r\n      _.forEach(fallasSeleccionEnter, function (value, key) {\r\n        var id = uuid();\r\n  \r\n        var unaFalla = {\r\n          value: id,\r\n          label: value\r\n        }\r\n        fallasNuevasConID.push(unaFalla)\r\n  \r\n        unaFalla = {\r\n          IDCatalogoFallas: id,\r\n          descripcion: value,\r\n          IDStatus: localStorage.getItem(\"IDStatusActivo\")\r\n        }\r\n        dataInsert.push(unaFalla)\r\n  \r\n  \r\n      });\r\n  \r\n      _.forEach(fallasNuevasInsertadas, function (value, key) {\r\n  \r\n        var id = uuid();\r\n  \r\n        var unaFalla = {\r\n          value: id,\r\n          label: value.nombreFalla\r\n  \r\n        }\r\n        fallasNuevasConID.push(unaFalla)\r\n  \r\n        unaFalla = {\r\n          IDCatalogoFallas: id,\r\n          descripcion: value.nombreFalla,\r\n          IDStatus: localStorage.getItem(\"IDStatusActivo\")\r\n        }\r\n        dataInsert.push(unaFalla)\r\n      });\r\n  \r\n        fallasListadoyNuevas = _.concat(fallasSeleccionadasDelListado, fallasNuevasConID);\r\n        fallasListadoyNuevas = JSON.stringify(fallasListadoyNuevas)\r\n  \r\n        \r\n      if (dataInsert.length > 0) {\r\n        axios.post(API_CATALOGO_FALLAS, dataInsert).then(rest => {\r\n          console.log(\"estado insercion fallas\", rest.data)\r\n        })\r\n      }\r\n      \r\n\r\n    }else {\r\n      fallasListadoyNuevas = null;\r\n   }\r\n    \r\n\r\n\r\n    const {  serie,   fallas,   informe, numeroTicket } = valores\r\n\r\n    const orden = {\r\n\r\n      modelo: null // modelo.toUpperCase()\r\n      , serie: serie.toUpperCase()\r\n      , accesorios:  null\r\n      , falla: fallasListadoyNuevas  // (fallas === null) ? \"\" : fallas.toUpperCase()\r\n      , total:  null\r\n      , informeTecnico: (informe === null) ? \"\" : informe.toUpperCase()\r\n      , IDTipoEquipo: values.currency\r\n      , IDMarca: null //objMarcas.marcas\r\n \r\n      , IDGarantia: null // objGarantias.garantias\r\n      , IDUsuario: objOperarios.operarios\r\n      , IDEstadoOrden: null // objEstadosOrden.estadosOrden\r\n      , orden_entero1: null // abono\r\n      , orden_varchar1: fechaReparacion\r\n      , numeroTicket: numeroTicket\r\n    }\r\n \r\n\r\n\r\n    axios.post(`${API_POST_GUARDAR_ORDEN}/${localStorage.getItem('current_IDOrden')}`, orden).then(responseA => {\r\n\r\n\r\n      guardarRecargarProductos(true)\r\n      setRecargarCombos(true)\r\n      history.push(back)\r\n      Swal.fire({\r\n        title: 'Un momento',\r\n        timer: 1500,\r\n        onBeforeOpen: () => {\r\n          Swal.showLoading()\r\n        },\r\n      })\r\n\r\n    })\r\n\r\n \r\n\r\n  }\r\n\r\n\r\n\r\n  function SetStatusModal() {\r\n    setBanderaModalNuevaOrden(false)\r\n\r\n    try {\r\n      setCodigo(JSON.parse(localStorage.getItem('currentCliente')).codigo)\r\n      setPrimerNombre(JSON.parse(localStorage.getItem('currentCliente')).codigo + \" | \" + JSON.parse(localStorage.getItem('currentCliente')).nombres)\r\n\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  function SetStatusModalClose() {\r\n    setBanderaModalNuevaOrden(true)\r\n  }\r\n\r\n  return (\r\n    <div >\r\n\r\n      <h1 className=\"text-center\">EDITAR ORDEN  </h1>\r\n      <Paper className={classes.root}>\r\n\r\n        <InputBase\r\n          disabled={esTecnico}\r\n          className={classes.input}\r\n          defaultValue={orden.cliente}\r\n          placeholder=\"Código del cliente\"\r\n          inputProps={{ 'aria-label': 'search google maps' }}\r\n          value={primerNombre}\r\n\r\n        />\r\n\r\n        <Divider className={classes.divider} />\r\n        <IconButton disabled={esTecnico} color=\"primary\" className={classes.iconButton} aria-label=\"directions\" onClick={SetStatusModalClose} >\r\n          <SearchIcon />\r\n        </IconButton>\r\n      </Paper>\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n\r\n        {/* <TextField\r\n          id=\"standard-select-currency\"\r\n          select\r\n          label=\"Tipo de Equipo\"\r\n          name=\"tipoEquipo\"\r\n          className={classes.textField}\r\n          value={values.currency}\r\n          disabled={esTecnico}\r\n          onChange={handleChange('currency')}\r\n          SelectProps={{\r\n            MenuProps: {\r\n              className: classes.menu,\r\n            },\r\n          }}\r\n          helperText=\"Por favor, seleccione un tipo de equipo\"\r\n          margin=\"normal\"\r\n        >\r\n          {_tiposEquipos.map(option => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField> */}\r\n\r\n        {/* <TextField\r\n          id=\"standard-select-currency\"\r\n          select\r\n          disabled={esTecnico}\r\n          label=\"Marcas\"\r\n          className={classes.textField}\r\n          value={objMarcas.marcas}\r\n          onChange={cambioMarcas('marcas')}\r\n          SelectProps={{\r\n            MenuProps: {\r\n              className: classes.menu,\r\n            },\r\n          }}\r\n          helperText=\"Por favor, seleccione una marca\"\r\n          margin=\"normal\"\r\n        >\r\n          {currencies.map(option => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField> */}\r\n\r\n        {/* <TextField\r\n\r\n          id=\"standard-error\"\r\n          label=\"Modelo\"\r\n          name=\"modelo\"\r\n\r\n          value={valores.modelo}\r\n\r\n          disabled={esTecnico}\r\n          className={classes.textField}\r\n          margin=\"normal\"\r\n          onChange={fn_onChange}\r\n        /> */}\r\n\r\n        <TextField\r\n\r\n          id=\"standard-disabled\"\r\n          label=\"Serie\"\r\n          name=\"serie\"\r\n          disabled={esTecnico}\r\n          value={valores.serie}\r\n          //   defaultValue={orden.serie}\r\n          className={classes.textField}\r\n          margin=\"normal\"\r\n          onChange={fn_onChange}\r\n        />\r\n\r\n\r\n<TextField\r\n          id=\"standard-password-input\"\r\n          label=\"Número de Ticket\"\r\n          multiline\r\n          rowsMax=\"25\"\r\n          //   defaultValue={orden.accesorios}\r\n          value={valores.numeroTicket}\r\n          className={classes.textField}\r\n          margin=\"normal\"\r\n          name=\"numeroticket\"\r\n          onChange={fn_onChange}\r\n        />\r\n        {/* <TextField\r\n          id=\"standard-password-input\"\r\n          label=\"Accesorios\"\r\n          multiline\r\n          disabled={esTecnico}\r\n          rowsMax=\"20\"\r\n          //   defaultValue={orden.accesorios}\r\n          value={valores.accesorios}\r\n          className={classes.textFieldAll}\r\n          margin=\"normal\"\r\n          name=\"accesorios\"\r\n          onChange={fn_onChange}\r\n        /> */}\r\n\r\n\r\n        <Autocomplete\r\n          className={classes.textField}\r\n          catalogFallas={catalogFallas}\r\n          fallasDefault={fallasDefaults}\r\n          setNuevasFallas={setNuevasFallas}\r\n          activo={esTecnico}\r\n        />\r\n\r\n\r\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <TextField\r\n          id=\"standard-password-inputsa\"\r\n          label=\"Informe Técnico\"\r\n          name=\"informe\"\r\n          //  defaultValue={orden.informeTecnico}\r\n          multiline\r\n          // fullWidth\r\n          value={valores.informe}\r\n          rowsMax=\"20\"\r\n          className={classes.textFieldInforme}\r\n          margin=\"normal\"\r\n          onChange={fn_onChange}\r\n        />\r\n\r\n<hr className={classes.linea} />\r\n        \r\n<MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            todayLabel=\"asdadasd\"\r\n            cancelLabel=\"Cancelar\"\r\n            minDateMessage=\"La fecha desde no puede ser mayor a la fecha hasta\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Fecha de solución\"\r\n            format=\"yyyy-MM-dd\"\r\n            disabled={esTecnico}\r\n            defaultValue={fechaReparacion}\r\n            value={fechaReparacion}\r\n            onChange={handleDateChange}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n\r\n\r\n\r\n<TextField\r\n          id=\"standard-sdelect-currency\"\r\n          select\r\n          disabled={true}\r\n          label=\"Recibido por\"\r\n          value={objOperarios.operarios}\r\n          onChange={cambioOperarios('operarios')}\r\n          SelectProps={{\r\n            MenuProps: {\r\n              className: classes.menu,\r\n            },\r\n          }}\r\n          helperText=\"Por favor, seleccione por quien fue recibido el equipo.\"\r\n          margin=\"normal\"\r\n        >\r\n          {_operarios.map(option => (\r\n            <MenuItem key={option.IDUsuario} value={option.IDUsuario}>\r\n              {`${option.nombre1} ${option.apellidoPaterno}`}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n\r\n \r\n      </form>\r\n\r\n      <br /><br />\r\n      <Button variant=\"contained\" size=\"small\" onClick={fn_Cancelar} className={classes.button}>\r\n        <Cancel className={clsx(classes.leftIcon, classes.iconSmall)} />\r\n        Cancelar\r\n      </Button>\r\n      <Button onClick={guardarOrden} variant=\"contained\" size=\"small\" className={classes.button}>\r\n        <SaveIcon className={clsx(classes.leftIcon, classes.iconSmall)} />\r\n        Guardar\r\n      </Button>\r\n\r\n\r\n\r\n      {banderaModalNuevaOrden ? (\r\n\r\n        <ModalOrden setOpenProps={banderaModalNuevaOrden}\r\n          handleCloseModalCliente={SetStatusModal}\r\n          ReportClientes={datos} Ciudades={Ciudades}\r\n          setRecargarClientes={setRecargarClientes}\r\n          Distritos={Distritos}\r\n          Colegios={Colegios}\r\n          setCurrentDistrito={setCurrentDistrito}\r\n          setRecargarColegios={setRecargarColegios}\r\n          setRecargarClientes={setRecargarClientes}\r\n          \r\n        />\r\n      ) : (\r\n          <div></div>\r\n        )}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <Dialog\r\n        open={modalReporteGarantia}\r\n        // TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={cerrarModalReporteGarantia}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Especifique la fecha de reparación\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n\r\n\r\n\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container justify=\"space-around\">\r\n\r\n                <KeyboardDatePicker\r\n                  margin=\"normal\"\r\n                  todayLabel=\"asdadasd\"\r\n                  cancelLabel=\"Cancelar\"\r\n\r\n                  minDateMessage=\"La fecha desde no puede ser mayor a la fecha hasta\"\r\n                  id=\"date-picker-dialog\"\r\n                  label=\"Fecha de reparación\"\r\n                  format=\"yyyy-MM-dd\"\r\n                  value={fechaReparacion}\r\n                  onChange={handleDateChange}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                />\r\n\r\n\r\n\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n\r\n\r\n\r\n\r\n\r\n          </DialogContentText>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={cerrarModalReporteGarantia} color=\"primary\"> Cancelar </Button>\r\n          <Button onClick={AceptarFechaReporteGarantia} color=\"primary\">  Guardar </Button>\r\n        </DialogActions>\r\n\r\n      </Dialog>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(EditarOrden)","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\n\r\nimport { API_DISTRITO , API_COLEGIOS ,  API_GET_CIUDAD_DISTRITO ,  API_CLIENTES } from '../../Constantes'\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 250,\r\n  },\r\n  textFieldCi: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 300,\r\n  },\r\n  textFieldAll: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 530,\r\n  },\r\n  dense: {\r\n    marginTop: 19,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n  selectDistritoCiudad: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 500,\r\n  },\r\n  diseñoModalDistritos: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    height: 200,\r\n  },\r\n  diseñoModalDistritosCombos: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    height: 80,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction EditarCliente({Zonas, cliente, Ciudades, history, setRecargarClientes, Distritos, Colegios, setCurrentDistrito, setRecargarColegios }) {\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  console.log(\"DIstrito\", cliente[0].distrito)\r\n\r\n\r\n  const [nombreDistritoSeleccionado, setNombreDistritoSeleccionado] = useState((cliente[0].distritonombre == null || cliente[0].distritonombre == \"\") ? \"--SELECCIONE DISTRITO--\" : cliente[0].distritonombre)\r\n  const [idDistritoSeleccionado, setIdDistritoSeleccionado] = useState(cliente[0].distrito)\r\n\r\n  const [nombreColegioSeleccionado, setNombreColegioSeleccionado] = useState((cliente[0].institucioneducativanombre == null || cliente[0].institucioneducativanombre == \"\") ? \"--SELECCIONE COLEGIO--\" : cliente[0].institucioneducativanombre)\r\n  const [idColegioSeleccionado, setIdColegioSeleccionado] = useState(cliente[0].institucion)\r\n\r\n\r\n  const [open, setOpenDistrito] = React.useState(false);\r\n\r\n\r\n  \r\n  const [nombreZonaSeleccioando, setNombreZonaSeleccioando] = useState('--SELECCIONE ZONA--')\r\n  const [ciudadSeleccioanda, setCiudadSeleccioanda] = useState('--SELECCIONE CIUDAD--')\r\n\r\n  \r\n  const [_distritos, _setDistritos] = useState([])\r\n  const [_ciudadDistrito, _setCiudadDistrito] = useState([])\r\n  const [_instutucionEducativa, _setInstutucionEducativa] = useState([])\r\n  const [idInstitucionEducativa, setIdInstitucionEducativa] = useState(cliente[0].institucion)\r\n\r\n\r\n  const cargarDistritoPorZona = async (idZona) => {\r\n    const resultado = await axios.get(`${API_DISTRITO}/${idZona}`)\r\n    _setDistritos(resultado.data)\r\n  }\r\n  const cargarCiudadPorDistrito = async (idDistrito) => {\r\n    const resultado = await axios.get(`${API_GET_CIUDAD_DISTRITO}/${idDistrito}`)\r\n    _setCiudadDistrito(resultado.data)\r\n  }\r\n  const cargarColegioPorCiudad = async (idDistrito) => {\r\n    const resultado = await axios.get(`${API_COLEGIOS}/${idDistrito}`)\r\n    _setInstutucionEducativa(resultado.data)\r\n  }\r\n\r\n\r\n\r\n\r\n  const cargarColegioPorDistrito = async (idDistrito) => {\r\n\r\n\r\n    setCurrentDistrito(idDistrito);\r\n    setRecargarColegios(true)\r\n  }\r\n\r\n\r\n  const handleClickOpenDistrito = () => {\r\n    setOpenDistrito(true);\r\n  };\r\n\r\n  const handleCloseDistrito = () => {\r\n    setOpenDistrito(false);\r\n  };\r\n\r\n  const handleCancelarDistrito = () => {\r\n    setNombreColegioSeleccionado('--SELECCIONE COLEGIO--')\r\n    setNombreDistritoSeleccionado('--SELECCIONE DISTRITO--')\r\n    setIdColegioSeleccionado('')\r\n    setIdDistritoSeleccionado('')\r\n    setOpenDistrito(false);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const currencies = Ciudades\r\n\r\n  const [values, setValues] = React.useState({\r\n    currency: cliente[0].IDCiudad\r\n  });\r\n\r\n  const [codigo, setCodigo] = useState(cliente[0].codigo)\r\n  const [cedula, setCedula] = useState(cliente[0].cedula)\r\n  const [nombre1, setNombre1] = useState(cliente[0].nombre1)\r\n  const [nombre2, setNombre2] = useState(cliente[0].nombre2)\r\n  const [apellidoPaterno, setApellidoPaterno] = useState(cliente[0].apellidoPaterno)\r\n  const [apellidoMaterno, setApellidoMaterno] = useState(cliente[0].apellidoMaterno)\r\n  const [celular, setCelular] = useState(cliente[0].celular)\r\n  const [direccion, setDireccion] = useState(cliente[0].direccion)\r\n  const [correo, setCorreo] = useState(cliente[0].correo)\r\n\r\n\r\n\r\n  const handleChange = name => event => {\r\n\r\n\r\n\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n\r\n\r\n  function actualizarCliente(event) {\r\n    event.preventDefault();\r\n\r\n    var cliente = {\r\n      codigo,\r\n      cedula,\r\n      nombre1,\r\n      nombre2,\r\n      apellidoPaterno,\r\n      apellidoMaterno,\r\n      celular,\r\n      direccion,\r\n      correo,\r\n      IDCiudad: values.currency\r\n      , 'IDDistrito': null\r\n      , 'IDInstitucionEducativa': idInstitucionEducativa\r\n    }\r\n\r\n    axios.post(`${API_CLIENTES}/${localStorage.getItem('current_IDCLiente')}`, cliente).then(res => {\r\n      setRecargarClientes(true)\r\n      history.push('/clientes')\r\n      Swal.fire({\r\n        title: 'Un momento',\r\n        timer: 1500,\r\n        onBeforeOpen: () => {\r\n          Swal.showLoading()\r\n        },\r\n      })\r\n    })\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"row\">\r\n      <div className=\"col-md-8\">\r\n\r\n\r\n        <form\r\n          className={classes.container}\r\n          noValidate autoComplete=\"off\"\r\n          onSubmit={actualizarCliente}\r\n        >\r\n          <TextField\r\n            id=\"standard-uncontrolled\"\r\n            required\r\n            label=\"Cédula\"\r\n            className={classes.textFieldCi}\r\n            margin=\"normal\"\r\n            // value={cliente.cedula}\r\n            defaultValue={cliente[0].cedula}\r\n            onChange={e => setCedula(e.target.value)}\r\n\r\n          />\r\n\r\n          <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpenDistrito}>Distrito  y Colegio</Button>\r\n\r\n\r\n          <TextField\r\n            id=\"standard-uncontrolled\"\r\n            required\r\n            label=\"Primer Nombre\"\r\n            defaultValue={cliente[0].nombre1.toUpperCase()}\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            onChange={e => setNombre1(e.target.value.toUpperCase())}\r\n          />\r\n\r\n          <TextField\r\n            required\r\n            id=\"standard-required\"\r\n            label=\"Segundo Nombre\"\r\n            defaultValue={cliente[0].nombre2.toUpperCase()}\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            onChange={e => setNombre2(e.target.value.toUpperCase())}\r\n          />\r\n\r\n          <TextField\r\n            id=\"standard-uncontrolled\"\r\n            required\r\n            defaultValue={cliente[0].apellidoPaterno.toUpperCase()}\r\n            label=\"Apellido Paterno\"\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            onChange={e => setApellidoPaterno(e.target.value.toUpperCase())}\r\n          />\r\n          <TextField\r\n            required\r\n            id=\"standard-required\"\r\n            defaultValue={cliente[0].apellidoMaterno.toUpperCase()}\r\n            label=\"Apellido Materno\"\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            onChange={e => setApellidoMaterno(e.target.value.toUpperCase())}\r\n          />\r\n\r\n          <TextField\r\n            required\r\n            id=\"standard-required\"\r\n            defaultValue={(cliente[0].celular !== null) ? cliente[0].celular.toUpperCase() : \"\"}\r\n            label=\"Celular\"\r\n            // className={classes.textField}\r\n            margin=\"normal\"\r\n            onChange={e => setCelular(e.target.value)}\r\n          />\r\n\r\n\r\n\r\n\r\n          <TextField\r\n            id=\"standard-select-currency-native\"\r\n            select\r\n            label=\"\"\r\n            className={classes.textField}\r\n            defaultValue={cliente[0].IDCiudad}\r\n            onChange={handleChange('currency')}\r\n\r\n            SelectProps={{\r\n              native: true,\r\n              MenuProps: {\r\n                className: classes.menu,\r\n              },\r\n            }}\r\n            helperText=\"Por favor, seleccione una ciudad de residencia.\"\r\n            margin=\"normal\"\r\n          >\r\n            {currencies.map(option => (\r\n              <option key={option.value} value={option.value}>\r\n                {option.label}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n\r\n\r\n\r\n\r\n          <TextField\r\n            id=\"standard-full-width\"\r\n            label=\"Direccion\"\r\n            defaultValue={(cliente[0].direccion !== null) ? cliente[0].direccion.toUpperCase() : \"\"}\r\n            placeholder=\"Dirección Domiciliaria\"\r\n            helperText=\"\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onChange={e => setDireccion(e.target.value.toUpperCase())}\r\n          />\r\n\r\n\r\n\r\n\r\n          <TextField\r\n            id=\"standard-full-width\"\r\n            label=\"Correo Electronico\"\r\n            defaultValue={(cliente[0].correo !== null) ? cliente[0].correo.toUpperCase() : \"\"}\r\n            placeholder=\"mi-correo@ejemplo.com\"\r\n            helperText=\"\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onChange={e => setCorreo(e.target.value.toUpperCase())}\r\n          />\r\n\r\n\r\n\r\n          <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleCloseDistrito}>\r\n            <DialogTitle>Seleccione el distrito y el colegio</DialogTitle>\r\n\r\n            <DialogContent className={classes.diseñoModalDistritos}>\r\n              <form className={classes.container}>\r\n\r\n              <FormControl className={classes.diseñoModalDistritosCombos} >\r\n                <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={Zonas}\r\n                  getOptionLabel={(option) => option.label}\r\n                  style={{ width: 400 }}\r\n                  onChange={(event, value) => {\r\n                    if (value != null) {\r\n                      cargarDistritoPorZona(value.value)\r\n                    }\r\n                  }}\r\n                  renderInput={(params) =>\r\n                    <TextField {...params}\r\n                      className={classes.selectDistritoCiudad}\r\n                      label={cliente[0].nombreZona}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  }\r\n                />\r\n              </FormControl>\r\n\r\n              {/* Distrito */}\r\n              <FormControl className={classes.diseñoModalDistritosCombos} >\r\n                <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={_distritos}\r\n                  getOptionLabel={(option) => option.label}\r\n                  style={{ width: 300 }}\r\n                  onChange={(event, value) => {\r\n                    if (value != null) {\r\n                      cargarCiudadPorDistrito(value.value);\r\n                      // cargarColegioPorDistrito(value.value)\r\n                      // setNombreDistritoSeleccionado(value.label)\r\n                      // setIdDistritoSeleccionado(value.value)\r\n\r\n                    }\r\n                  }}\r\n                  renderInput={(params) =>\r\n                    <TextField {...params}\r\n                      className={classes.selectDistritoCiudad}\r\n                      label={cliente[0].distritonombre}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  }\r\n                />\r\n              </FormControl>\r\n\r\n              {/* CIUDAD */}\r\n              <FormControl className={classes.diseñoModalDistritosCombos} >\r\n                <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={_ciudadDistrito}\r\n                  getOptionLabel={(option) => option.label}\r\n                  style={{ width: 300 }}\r\n                  onChange={(event, value) => {\r\n                    if (value != null) {\r\n                      cargarColegioPorCiudad(value.value);\r\n                      // cargarColegioPorDistrito(value.value)\r\n                      // setNombreDistritoSeleccionado(value.label)\r\n                      // setIdDistritoSeleccionado(value.value)\r\n\r\n                    }\r\n                  }}\r\n                  renderInput={(params) =>\r\n                    <TextField {...params}\r\n                      className={classes.selectDistritoCiudad}\r\n                      label={cliente[0].nombreCiudadDistrito}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  }\r\n                />\r\n              </FormControl>\r\n\r\n\r\n\r\n\r\n              {/* Colegios */}\r\n              <FormControl className={classes.formControl}>\r\n                <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={_instutucionEducativa}\r\n                  getOptionLabel={(option) => option.label}\r\n                  style={{ width: 300 }}\r\n                  onChange={(event, value) => {\r\n                    if (value != null) {\r\n                      setIdInstitucionEducativa(value.value)\r\n                      // setNombreColegioSeleccionado(value.label)\r\n                      // setIdColegioSeleccionado(value.value)\r\n                    } else {\r\n                      // cargarColegioPorDistrito('')\r\n                    }\r\n                  }}\r\n                  renderInput={(params) =>\r\n                    <TextField {...params}\r\n                      className={classes.selectDistritoCiudad}\r\n                      label={cliente[0].institucioneducativanombre}\r\n                      variant=\"outlined\"\r\n\r\n                    />\r\n                  }\r\n                />\r\n\r\n              </FormControl>\r\n\r\n{/*                 \r\n                <FormControl className={classes.diseñoModalDistritosCombos} >\r\n\r\n                  <Autocomplete\r\n                    id=\"combo-box-demo\"\r\n                    options={Distritos}\r\n                    getOptionLabel={(option) => option.label}\r\n                    style={{ width: 300 }}\r\n                    onChange={(event, value) => {\r\n                      if (value != null) {\r\n                        cargarColegioPorDistrito(value.value)\r\n\r\n                        setNombreDistritoSeleccionado(value.label)\r\n                        setIdDistritoSeleccionado(value.value)\r\n\r\n                      }\r\n                    }}\r\n                    renderInput={(params) =>\r\n                      <TextField {...params}\r\n                        className={classes.selectDistritoCiudad}\r\n                        label={nombreDistritoSeleccionado}\r\n                        variant=\"outlined\"\r\n\r\n\r\n                      />\r\n                    }\r\n                  />\r\n\r\n\r\n                </FormControl>\r\n                <FormControl className={classes.formControl}>\r\n\r\n\r\n                  <Autocomplete\r\n                    id=\"combo-box-demo\"\r\n\r\n                    options={Colegios}\r\n                    getOptionLabel={(option) => option.label}\r\n                    style={{ width: 300 }}\r\n                    onChange={(event, value) => {\r\n                      if (value != null) {\r\n\r\n                        setNombreColegioSeleccionado(value.label)\r\n                        setIdColegioSeleccionado(value.value)\r\n\r\n\r\n                      } else {\r\n                        // cargarColegioPorDistrito('')\r\n                      }\r\n                    }}\r\n                    renderInput={(params) =>\r\n                      <TextField {...params}\r\n                        className={classes.selectDistritoCiudad}\r\n                        label={nombreColegioSeleccionado}\r\n                        variant=\"outlined\"\r\n\r\n                      />\r\n                    }\r\n                  />\r\n\r\n                </FormControl> */}\r\n              </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseDistrito} color=\"secondary\">\r\n                Cerrar\r\n          </Button>\r\n\r\n              <Button onClick={handleCancelarDistrito} color=\"primary\">\r\n                Guardar sin datos\r\n          </Button>\r\n              <Button onClick={handleCloseDistrito} color=\"primary\">\r\n                Actualizar\r\n          </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n\r\n\r\n          <DialogActions className=\"pull-right\">\r\n\r\n            <Link to=\"/clientes\">\r\n              <Button color=\"primary\">\r\n                Cancelar\r\n              </Button>\r\n            </Link>\r\n\r\n            <Button type=\"submit\" color=\"primary\">\r\n              Guardar\r\n            </Button>\r\n          </DialogActions>\r\n\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(EditarCliente)","import React, { useState  } from 'react';\r\n \r\nimport { makeStyles } from '@material-ui/core/styles';\r\n \r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n \r\nimport { withRouter } from 'react-router-dom'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport Swal from \"sweetalert2\";  \r\n\r\nimport  {API_USUARIO} from '../../Constantes'\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 250,\r\n  },\r\n  textFieldCi: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 300,\r\n  },\r\n  textFieldAll: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 530,\r\n  },\r\n  dense: {\r\n    marginTop: 19,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n}));\r\n\r\n\r\n\r\n \r\n\r\n  function EditarUsuario( {cliente , roles , history , setRecargarClientes, currentRol}) {\r\n\r\n\r\n    const classes = useStyles();\r\n \r\n    const currencies = roles\r\n\r\n    const [values, setValues] = React.useState({\r\n      currency: currentRol[0].IDRol \r\n    });\r\n\r\n    const [codigo ,setCodigo]= useState(cliente[0].codigo)\r\n    const [cedula ,setCedula]= useState(cliente[0].cedula)\r\n    const [nombre1 ,setNombre1]= useState(cliente[0].nombre1)\r\n    const [nombre2 ,setNombre2]= useState(cliente[0].nombre2)\r\n    const [apellidoPaterno ,setApellidoPaterno]= useState(cliente[0].apellidoPaterno)\r\n    const [apellidoMaterno ,setApellidoMaterno]= useState(cliente[0].apellidoMaterno)\r\n    const [celular ,setCelular]= useState(cliente[0].celular)\r\n    const [direccion ,setDireccion]= useState(cliente[0].direccion)\r\n    const [correo ,setCorreo]= useState(cliente[0].correo)\r\n\r\n    const [nick ,setUsuario]= useState(cliente[0].nick)\r\n    const [pass ,setContraseña]= useState(cliente[0].pass)\r\n\r\n\r\n\r\n\r\n    const handleChange = name => event => {\r\n      setValues({ ...values, [name]: event.target.value });\r\n    };\r\n \r\n\r\n\r\n   function actualizarCliente (event) {\r\n    event.preventDefault();\r\n\r\n \r\n        var cliente  = {\r\n          codigo,\r\n          cedula,\r\n          nombre1,\r\n          nombre2,\r\n          apellidoPaterno,\r\n          apellidoMaterno,\r\n          celular,\r\n          direccion,\r\n          correo,\r\n          IDRol: values.currency,\r\n          nick,\r\n          pass\r\n\r\n        }\r\n\r\n        \r\n        axios.post(`${API_USUARIO}/${localStorage.getItem('current_IDUsuario')}`  ,cliente ).then(res => {\r\n        \r\n          history.push('/usuarios')\r\n          setRecargarClientes(true)\r\n          Swal.fire({\r\n            title: 'Un momento',\r\n            timer: 1500,\r\n            onBeforeOpen: () => {\r\n              Swal.showLoading()\r\n            },\r\n          })\r\n        })\r\n       \r\n     \r\n\r\n        \r\n    }\r\n\r\n \r\n  return (\r\n\r\n    <div className=\"row\">\r\n      <div className=\"col-md-8\">\r\n        \r\n   \r\n    <form\r\n  className={classes.container} \r\n     noValidate autoComplete=\"off\"\r\n   onSubmit={actualizarCliente}\r\n    >\r\n      <TextField\r\n        id=\"standard-uncontrolled\"\r\n        required\r\n        label=\"Cédula\"\r\n        className={classes.textFieldCi}\r\n        margin=\"normal\"\r\n        // value={cliente.cedula}\r\n        defaultValue=  {cliente[0].cedula}\r\n         onChange={e => setCedula(e.target.value)}\r\n        \r\n      />\r\n      <TextField\r\n        id=\"standard-uncontrolled\"\r\n        required\r\n        label=\"Primer Nombre\"\r\n        defaultValue=  {cliente[0].nombre1.toUpperCase()}\r\n         className={classes.textField}\r\n        margin=\"normal\"\r\n        onChange={e => setNombre1(e.target.value.toUpperCase())}\r\n      />\r\n\r\n      <TextField\r\n        required\r\n        id=\"standard-required\"\r\n        label=\"Segundo Nombre\"\r\n        defaultValue=  {cliente[0].nombre2.toUpperCase()}\r\n        className={classes.textField.toUpperCase()}\r\n        margin=\"normal\"\r\n         onChange={e => setNombre2(e.target.value)}\r\n      />\r\n\r\n      <TextField\r\n        id=\"standard-uncontrolled\"\r\n        required\r\n        defaultValue=  {cliente[0].apellidoPaterno.toUpperCase()}\r\n        label=\"Apellido Paterno\"\r\n    className={classes.textField}\r\n        margin=\"normal\"\r\n         onChange={e => setApellidoPaterno(e.target.value.toUpperCase())}\r\n      />\r\n      <TextField\r\n        required\r\n        id=\"standard-required\"\r\n        defaultValue=  {cliente[0].apellidoMaterno.toUpperCase()}\r\n        label=\"Apellido Materno\"\r\n         className={classes.textField}\r\n        margin=\"normal\"\r\n        onChange={e => setApellidoMaterno(e.target.value.toUpperCase())}\r\n      />\r\n\r\n      <TextField\r\n        required\r\n        id=\"standard-required\"\r\n        defaultValue=  {cliente[0].celular}\r\n        label=\"Celular\"\r\n        // className={classes.textField}\r\n        margin=\"normal\"\r\n        onChange={e => setCelular(e.target.value)}\r\n      />\r\n\r\n\r\n\r\n\r\n<TextField\r\n        id=\"standard-select-currency-native\"\r\n        select\r\n        label=\"\"\r\n        className={classes.textField}\r\n        defaultValue={currentRol[0].IDRol}\r\n        onChange={handleChange('currency')}\r\n        \r\n        SelectProps={{\r\n          native: true,\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        helperText=\"Por favor, seleccione una ciudad de residencia.\"\r\n        margin=\"normal\"\r\n      >\r\n        {currencies.map(option => (\r\n          <option key={option.IDRol} value={option.IDRol}>\r\n            {option.descripcion}\r\n          </option>\r\n        ))}\r\n      </TextField>\r\n\r\n\r\n  \r\n\r\n      <TextField\r\n        id=\"standard-full-width\"\r\n        label=\"Direccion\"\r\n        defaultValue=   { (cliente[0].direccion !== null) ? cliente[0].direccion.toUpperCase(): \"\"}  \r\n        placeholder=\"Dirección Domiciliaria\"\r\n        helperText=\"\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n         onChange={e => setDireccion(e.target.value.toUpperCase())}\r\n      />\r\n\r\n\r\n\r\n\r\n<TextField\r\n        id=\"standard-full-width\"\r\n        label=\"Correo Electronico\"\r\n        defaultValue= { (cliente[0].correo !== null) ? cliente[0].correo.toUpperCase(): \"\"}\r\n        placeholder=\"mi-correo@ejemplo.com\"\r\n        helperText=\"\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        onChange={e => setCorreo(e.target.value.toUpperCase())}\r\n      />\r\n \r\n <TextField\r\n        id=\"standard-full-width\"\r\n        label=\"Usuario\"\r\n        defaultValue=  {cliente[0].nick}\r\n        placeholder=\"Nick\"\r\n        helperText=\"\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        onChange={e => setUsuario(e.target.value)}\r\n      />\r\n \r\n \r\n <TextField\r\n        id=\"standard-full-width\"\r\n        label=\"Contraseña\"\r\n        defaultValue=  {cliente[0].pass}\r\n        placeholder=\"\"\r\n        helperText=\"\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        onChange={e => setContraseña(e.target.value)}\r\n      />\r\n \r\n\r\n\r\n\r\n      <DialogActions className=\"pull-right\">\r\n\r\n      <Link to=\"/usuarios\">\r\n            <Button   color=\"primary\">\r\n              Cancelar\r\n              </Button>\r\n              </Link>\r\n\r\n            <Button type=\"submit\"   color=\"primary\">\r\n              Guardar\r\n            </Button>\r\n      </DialogActions>\r\n\r\n    </form>\r\n  \r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(EditarUsuario )","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport KeyboardReturn from '@material-ui/icons/KeyboardReturn';\r\nimport { BrowserRouter as Router, Route, Switch, Link, withRouter } from 'react-router-dom'\r\n\r\nimport Ordenes from './Ordenes'\r\nimport Clientes from './Clientes'\r\nimport Usuarios from './usuarios'\r\n\r\nimport OrdenesGarantia from './OrdenesGarantia'\r\n\r\nimport FRM from './NuevaOrden/Formulario'\r\nimport EditarOrden from './NuevaOrden/FormularioEditar'\r\n\r\nimport EditarCliente from './EditarCliente/EditarCliente'\r\n\r\nimport axios from 'axios';\r\nimport _ from 'lodash'\r\n\r\nimport EditarUsuario from './usuarios/EditarUsuario'\r\n\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport PeopleAlt from '@material-ui/icons/NaturePeopleOutlined';\r\n\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\n\r\nimport { TIME_FOR_LOGOUT_INACTIVE, API_CATALOGO_FALLAS, API_COLEGIOS, API_DISTRITO, API_ZONAS, ROL_HAITECH, API_GE_ROL, API_GET_LISTADO_USUARIOS_ROL, API_MARCA, API_REPORTE_ORDENES, ROL_ADMINISTRADOR, API_TIPO_EQUIPO, API_STATUS, API_CLIENTES, API_CIUDAD, API_GET_GARANTIAS, API_CLIENTES_DESCONCATENADO, API_GET_ESTADOS_ORDEN, API_GET_TECNICOS_ADMINISTRADORES } from '../Constantes'\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    linkPanel: {\r\n        textDecoration: 'none',\r\n        color: 'black'\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n}));\r\n\r\nfunction Menu(props) {\r\n\r\n\r\n\r\n    const { history } = props;\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(true);\r\n\r\n\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n    // const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    const [ReporteOrdenesProesada, setReporteOrdenesProesada] = useState([])\r\n    const [Reporteordenes, setReporteOrdenes] = useState([])\r\n    const [ReportClientes, setReportClientes] = useState([])\r\n    const [ReportClientesSinFiltro, setReportClientesSF] = useState([])\r\n\r\n\r\n    const [Zonas, setZonas] = useState([])\r\n\r\n    const [Colegios, setColegios] = useState([])\r\n    const [Distritos, setDistritos] = useState([])\r\n    const [Ciudades, setCiudades] = useState([])\r\n    const [tiposEquipos, setTiposEquipos] = useState([])\r\n    const [marcas, setMarcas] = useState([])\r\n    const [operarios, setOperarios] = useState([])\r\n\r\n    const [usuarios, setUsuarios] = useState([])\r\n    const [recargarUsuarios, setRecargarUsuario] = useState(true)\r\n    const [roles, setRoles] = useState([])\r\n\r\n\r\n\r\n    const [recargarProductos, guardarRecargarProductos] = useState(true)\r\n    const [recargarClientes, setRecargarClientes] = useState(true)\r\n\r\n    const [recargarCombos, setRecargarCombos] = useState(true)\r\n    const [recargarComboUsuario, setrecargarComboUsuario] = useState(true)\r\n\r\n    const [estadosOrden, setEstadosOrden] = useState([])\r\n    const [garantias, setGarantias] = useState([])\r\n    const [visualizaMenu, serVisualizaMenu] = useState({ display: '' })\r\n    const [usuarioHaitech, setUsuarioHaitech] = useState({ display: 'none' })\r\n\r\n\r\n    const [recargarColegios, setRecargarColegios] = useState(false)\r\n    const [currentDistrito, setCurrentDistrito] = useState('')\r\n\r\n    const [catalogFallas, setCatalogFallas] = useState([])\r\n\r\n    function onLogout() {\r\n        localStorage.removeItem('usuario')\r\n        history.push('/login')\r\n    }\r\n\r\n\r\n    if (JSON.parse(localStorage.getItem('usuario')) === null) {\r\n        history.push('/login')\r\n    }\r\n\r\n    function verificarSessionInactiva() {\r\n\r\n        var interval = 1000;\r\n        var IDLE_TIMEOUT = TIME_FOR_LOGOUT_INACTIVE;\r\n        var idleCounter = 0;\r\n        document.onmousemove = document.onkeypress = function () {\r\n            idleCounter = 0;\r\n        }\r\n        const tiempo = window.setInterval(function () {\r\n            // console.log(idleCounter)\r\n            if (++idleCounter >= IDLE_TIMEOUT) {\r\n                console.log('Login  Again')\r\n                idleCounter = 0;\r\n                onLogout();\r\n            }\r\n        }, interval);\r\n        return tiempo\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n\r\n        try {\r\n            serVisualizaMenu((JSON.parse(localStorage.getItem('usuario')).rol === ROL_ADMINISTRADOR) ? { display: '' } : { display: 'none' })\r\n\r\n            setUsuarioHaitech((JSON.parse(localStorage.getItem('usuario')).rol === ROL_HAITECH) ? { display: 'none' } : { display: '' })\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n        if (recargarComboUsuario) {\r\n\r\n            const getTecnicosYAdministradores = async () => {\r\n                const resultado = await axios.get(API_GET_TECNICOS_ADMINISTRADORES)\r\n                setOperarios(resultado.data)\r\n            }\r\n\r\n            getTecnicosYAdministradores()\r\n            setrecargarComboUsuario(false)\r\n        }\r\n\r\n\r\n        if (recargarCombos) {\r\n\r\n            const getGarantias = async () => {\r\n                const resultado = await axios.get(API_GET_GARANTIAS)\r\n                setGarantias(resultado.data)\r\n\r\n            }\r\n            getGarantias()\r\n\r\n            const getEstadosOrden = async () => {\r\n                const resultado = await axios.get(API_GET_ESTADOS_ORDEN)\r\n                setEstadosOrden(resultado.data)\r\n\r\n            }\r\n            getEstadosOrden()\r\n\r\n            const getMarcas = async () => {\r\n                const resultado = await axios.get(API_MARCA)\r\n                setMarcas(resultado.data)\r\n\r\n            }\r\n            getMarcas()\r\n\r\n            const getTiposEquipo = async () => {\r\n                const resultado = await axios.get(API_TIPO_EQUIPO)\r\n                setTiposEquipos(resultado.data)\r\n\r\n            }\r\n            getTiposEquipo()\r\n\r\n\r\n            const getTecnicosYAdministradores = async () => {\r\n                const resultado = await axios.get(API_GET_TECNICOS_ADMINISTRADORES)\r\n                setOperarios(resultado.data)\r\n\r\n            }\r\n            getTecnicosYAdministradores()\r\n\r\n            const Getciudades = async () => {\r\n                const resultado = await axios.get(API_CIUDAD)\r\n                setCiudades(resultado.data)\r\n\r\n            }\r\n            Getciudades()\r\n\r\n            const GetZonas = async () => {\r\n                const resultado = await axios.get(API_ZONAS)\r\n                setZonas(resultado.data)\r\n\r\n            }\r\n            GetZonas()\r\n\r\n\r\n            const GetDistritos = async () => {\r\n                const resultado = await axios.get(API_DISTRITO)\r\n                setDistritos(resultado.data)\r\n\r\n            }\r\n            GetDistritos()\r\n\r\n\r\n            const getCatalogoFallas = async () => {\r\n                const resultado = await axios.get(API_CATALOGO_FALLAS)\r\n                setCatalogFallas(resultado.data)\r\n\r\n            }\r\n            getCatalogoFallas()\r\n\r\n\r\n\r\n            setRecargarCombos(false)\r\n        }\r\n\r\n\r\n        if (recargarColegios) {\r\n\r\n            const GetColegios = async () => {\r\n                const resultado = await axios.get(`${API_COLEGIOS}/${currentDistrito}`)\r\n                setColegios(resultado.data)\r\n\r\n            }\r\n            GetColegios()\r\n            setRecargarColegios(false)\r\n\r\n        }\r\n\r\n\r\n        const GetStatus = async () => {\r\n            const resultado = await axios.get(`${API_STATUS}/Activo`)\r\n            localStorage.setItem(\"IDStatusActivo\", resultado.data.IDStatus)\r\n\r\n            const resultado1 = await axios.get(`${API_STATUS}/Inactivo`)\r\n            localStorage.setItem(\"IDStatusInactivo\", resultado1.data.IDStatus)\r\n\r\n        }\r\n        GetStatus()\r\n\r\n\r\n\r\n\r\n\r\n        if (recargarUsuarios) {\r\n\r\n\r\n            const consultarUsuarios = async () => {\r\n                const listaUsuarios = await axios.get(API_GET_LISTADO_USUARIOS_ROL)\r\n                setUsuarios(listaUsuarios.data)\r\n\r\n            }\r\n            const consultarRoles = async () => {\r\n                const listaRoles = await axios.get(API_GE_ROL)\r\n                setRoles(listaRoles.data)\r\n\r\n            }\r\n\r\n\r\n            consultarRoles()\r\n            consultarUsuarios()\r\n            setRecargarUsuario(false)\r\n\r\n        }\r\n\r\n        if (recargarProductos) {\r\n            if (window.innerWidth <= 800) {\r\n                setOpen(false);\r\n            }\r\n\r\n            const consultarApi = async () => {\r\n\r\n                const resultado = await axios.get(API_REPORTE_ORDENES)\r\n                // const resultado2 =await axios.get(API_REPORTE_ORDENES)\r\n                setReporteOrdenes(resultado.data)\r\n\r\n\r\n                const dataArreglada = []\r\n\r\n                const dataCAdena = JSON.stringify(resultado.data)\r\n\r\n\r\n\r\n                const dataBruta = JSON.parse(dataCAdena)\r\n                _.forEach(dataBruta, function (value, key) {\r\n                    // value.falla = \"Soy hermoso\" + key ;\r\n\r\n                    if (value.falla !== \"\") {\r\n\r\n                        var jsonFallas = JSON.parse(value.falla)\r\n\r\n                        var cadenaFallas = \"\";\r\n                        _.forEach(jsonFallas, function (value, key) {\r\n                            cadenaFallas += value.LABEL + \", \"\r\n                        })\r\n\r\n                        value.falla = cadenaFallas.slice(0, -2);\r\n                    }\r\n\r\n\r\n                    dataArreglada.push(value)\r\n                })\r\n\r\n                setReporteOrdenesProesada(dataArreglada)\r\n\r\n\r\n\r\n            }\r\n            consultarApi()\r\n            guardarRecargarProductos(false)\r\n        }\r\n\r\n\r\n        if (recargarClientes) {\r\n\r\n\r\n            const consultarApiClientes = async () => {\r\n                const resultado = await axios.get(API_CLIENTES)\r\n\r\n                setReportClientesSF(resultado.data)\r\n\r\n                var reporteClientes = []\r\n                resultado.data.filter(cliente => {\r\n                    var unCliente = {\r\n                        IDCliente: cliente.IDCliente\r\n                        , codigo: cliente.codigo\r\n                        , cedula: cliente.cedula\r\n                        , nombres: cliente.nombre1 + \" \" + cliente.nombre2 + \" \" + cliente.apellidoPaterno + \" \" + cliente.apellidoMaterno\r\n                        , celular: cliente.celular\r\n                        , direccion: cliente.direccion\r\n                        , correo: cliente.correo\r\n                        , ciudad: cliente.ciudad\r\n                        , distritonombre: cliente.distritonombre\r\n                        , institucioneducativanombre: cliente.institucioneducativanombre\r\n\r\n                    }\r\n                    reporteClientes.push(unCliente)\r\n                })\r\n                setReportClientes(reporteClientes)\r\n            }\r\n\r\n\r\n\r\n            consultarApiClientes()\r\n            setRecargarClientes(false)\r\n        }\r\n\r\n\r\n\r\n        const tiempo = verificarSessionInactiva()\r\n        return () => { clearInterval(tiempo); console.log(\"Destroy for inactivity\") }\r\n\r\n\r\n    }, [recargarProductos, recargarClientes, recargarUsuarios, recargarComboUsuario, recargarCombos, recargarColegios])\r\n\r\n    if (JSON.parse(localStorage.getItem('usuario')) === null) {\r\n\r\n        return <div></div>\r\n    }\r\n    else {\r\n\r\n\r\n\r\n        return (\r\n\r\n            <Router>\r\n                <div className={classes.root}>\r\n                    <CssBaseline />\r\n                    <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                        <Toolbar className={classes.toolbar}>\r\n                            <IconButton\r\n                                edge=\"start\"\r\n                                color=\"inherit\"\r\n                                aria-label=\"Open drawer\"\r\n                                onClick={handleDrawerOpen}\r\n                                className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                                Inicio\r\n                             </Typography>\r\n                            <IconButton color=\"inherit\">\r\n\r\n                                {/* Bienvenido  {`${JSON.parse(localStorage.getItem('usuario')).rol}  ${JSON.parse(localStorage.getItem('usuario')).nombre1} `}  */}\r\n                            </IconButton>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Drawer\r\n                        variant=\"permanent\"\r\n                        classes={{\r\n                            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                        }}\r\n                        open={open}\r\n                    >\r\n\r\n                        <div className={classes.toolbarIcon}>\r\n                            <strong>  {\r\n                                ` ${JSON.parse(localStorage.getItem('usuario')).rol}  ${JSON.parse(localStorage.getItem('usuario')).nombre1} `\r\n                            } </strong>\r\n                            <IconButton onClick={handleDrawerClose}>\r\n                                <ChevronLeftIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                        <Divider />\r\n                        <List>\r\n\r\n\r\n\r\n\r\n\r\n                            <div>\r\n                                <Link style={usuarioHaitech} to=\"/ordenes\" className={classes.linkPanel} >\r\n                                    <ListItem button>\r\n                                        <ListItemIcon>\r\n                                            <ShoppingCartIcon />\r\n                                        </ListItemIcon>\r\n\r\n                                        <ListItemText primary=\"Ordenes\" />\r\n\r\n                                    </ListItem>\r\n\r\n                                </Link>\r\n\r\n                                <Link to=\"/clientes\" style={usuarioHaitech} className={classes.linkPanel}  >\r\n                                    <ListItem button>\r\n                                        <ListItemIcon>\r\n                                            <PeopleIcon />\r\n                                        </ListItemIcon>\r\n\r\n                                        <ListItemText primary=\"Clientes\" />\r\n\r\n                                    </ListItem>\r\n                                </Link>\r\n\r\n                                <Link style={visualizaMenu} to=\"/usuarios\" className={classes.linkPanel}  >\r\n                                    <ListItem button>\r\n                                        <ListItemIcon>\r\n                                            <PeopleAlt />\r\n                                        </ListItemIcon>\r\n\r\n                                        <ListItemText primary=\"Usuarios\" />\r\n\r\n                                    </ListItem>\r\n                                </Link>\r\n                                {/* <Link to=\"/ordenesgarantia\" className={classes.linkPanel}  >\r\n                                    <ListItem button>\r\n                                        <ListItemIcon>\r\n                                            <AssignmentIcon />\r\n                                        </ListItemIcon>\r\n\r\n                                        <ListItemText primary=\"Garantia\" />\r\n\r\n                                    </ListItem>\r\n                                </Link> */}\r\n\r\n\r\n\r\n\r\n                                <ListItem button onClick={onLogout}>\r\n                                    <ListItemIcon>\r\n                                        <KeyboardReturn />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Salir\" />\r\n                                </ListItem>\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                        </List>\r\n                        <Divider />\r\n\r\n                    </Drawer>\r\n                    <main className={classes.content}>\r\n                        <div className={classes.appBarSpacer} />\r\n                        <Container maxWidth=\"lg\" className={classes.container}>\r\n\r\n\r\n                            <Switch>\r\n                                <Route exact path=\"/ordenes\"\r\n                                    render={() => (\r\n                                        <Ordenes\r\n                                            setrecargarComboUsuario={setrecargarComboUsuario}\r\n                                            Reporteordenes={ReporteOrdenesProesada}\r\n                                            guardarRecargarProductos={guardarRecargarProductos}\r\n\r\n                                        ></Ordenes>\r\n                                    )}\r\n                                />\r\n\r\n                                <Route exact path=\"/ordenesgarantia\"\r\n                                    render={() => (\r\n                                        <OrdenesGarantia\r\n                                            Reporteordenes={ReporteOrdenesProesada}\r\n                                            guardarRecargarProductos={guardarRecargarProductos}\r\n\r\n                                        ></OrdenesGarantia>\r\n                                    )}\r\n                                />\r\n\r\n                                <Route exact path=\"/clientes\"\r\n                                    render={() => (\r\n                                        <Clientes\r\n                                            titulo=\"Clientes\"\r\n                                            ReportClientes={ReportClientes}\r\n                                            Ciudades={Ciudades}\r\n                                            Distritos={Distritos}\r\n                                            Colegios={Colegios}\r\n                                            Zonas={Zonas}\r\n                                            setCurrentDistrito={setCurrentDistrito}\r\n                                            setRecargarColegios={setRecargarColegios}\r\n                                            setRecargarClientes={setRecargarClientes}\r\n                                            btnEditar={true}\r\n                                            btnELiminar={true}\r\n                                            btnSeleccionar={false}\r\n                                            btnNuevoCliente={true}\r\n\r\n                                        ></Clientes>\r\n                                    )}\r\n                                />\r\n\r\n\r\n                                <Route exact path=\"/usuarios\"\r\n                                    render={() => (\r\n                                        <Usuarios setRecargarCombos={setrecargarComboUsuario} setRecargarUsuario={setRecargarUsuario} usuarios={usuarios}></Usuarios>\r\n                                    )}\r\n                                />\r\n\r\n\r\n                                <Route exact path=\"/orden/editar/:id\"\r\n                                    render={(props) => {\r\n\r\n                                        const idOrden = props.match.params.id\r\n                                        const orden = Reporteordenes.filter(unaOrden => unaOrden.IDOrden === idOrden)\r\n                                        var esTecn = (JSON.parse(localStorage.getItem('usuario')).rol === ROL_ADMINISTRADOR) ? false : true\r\n\r\n\r\n                                        return (\r\n                                            <EditarOrden ReportClientes={ReportClientes}\r\n                                                setRecargarCombos={setRecargarCombos}\r\n                                                catalogFallas={catalogFallas}\r\n                                                back=\"/ordenes\"\r\n                                                marcas={marcas}\r\n                                                orden={orden[0]}\r\n                                                esTecnico={esTecn}\r\n                                                tiposEquipos={tiposEquipos}\r\n                                                setRecargarClientes={setRecargarClientes}\r\n                                                Ciudades={Ciudades}\r\n                                                operarios={operarios}\r\n                                                estadosOrden={estadosOrden}\r\n                                                garantias={garantias}\r\n                                                guardarRecargarProductos={guardarRecargarProductos}\r\n                                                Distritos={Distritos}\r\n                                                Colegios={Colegios}\r\n                                                setCurrentDistrito={setCurrentDistrito}\r\n                                                setRecargarColegios={setRecargarColegios}\r\n\r\n                                            ></EditarOrden>\r\n                                        )\r\n\r\n                                    }}\r\n                                />\r\n                                <Route exact path=\"/ordengarantia/editar/:id\"\r\n                                    render={(props) => {\r\n\r\n                                        const idOrden = props.match.params.id\r\n                                        const orden = Reporteordenes.filter(unaOrden => unaOrden.IDOrden === idOrden)\r\n\r\n                                        var esTecn = (JSON.parse(localStorage.getItem('usuario')).rol === ROL_ADMINISTRADOR) ? false : true\r\n                                        return (\r\n                                            <EditarOrden ReportClientes={ReportClientes}\r\n                                                setRecargarCombos={setRecargarCombos}\r\n                                                catalogFallas={catalogFallas}\r\n                                                back=\"/ordenesgarantia\"\r\n                                                marcas={marcas}\r\n                                                esTecnico={esTecn}\r\n                                                orden={orden[0]}\r\n                                                tiposEquipos={tiposEquipos}\r\n                                                setRecargarClientes={setRecargarClientes}\r\n                                                Ciudades={Ciudades}\r\n                                                operarios={operarios}\r\n                                                estadosOrden={estadosOrden}\r\n                                                garantias={garantias}\r\n                                                guardarRecargarProductos={guardarRecargarProductos}\r\n                                            ></EditarOrden>\r\n                                        )\r\n\r\n                                    }}\r\n                                />\r\n\r\n\r\n\r\n                                <Route exact path=\"/formularioNuevaOrden\"\r\n                                         render={(props) => {\r\n                                        var esTecn = (JSON.parse(localStorage.getItem('usuario')).rol === ROL_ADMINISTRADOR) ? false : true\r\n                                     \r\n                                      return    (\r\n                                        \r\n                                        <FRM ReportClientes={ReportClientes}\r\n                                            marcas={marcas}\r\n                                            tiposEquipos={tiposEquipos}\r\n                                            setRecargarClientes={setRecargarClientes}\r\n                                            Ciudades={Ciudades}\r\n                                            operarios={operarios}\r\n                                            orden={null}\r\n                                            estadosOrden={estadosOrden}\r\n                                            garantias={garantias}\r\n                                            guardarRecargarProductos={guardarRecargarProductos}\r\n                                            setRecargarCombos={setRecargarCombos}\r\n                                            catalogFallas={catalogFallas}\r\n                                            setRecargarCombos={setRecargarCombos}\r\n                                            Zonas={Zonas}\r\n                                            esTecnico={esTecn}\r\n                                            Distritos={Distritos}\r\n                                            Colegios={Colegios}\r\n                                            setCurrentDistrito={setCurrentDistrito}\r\n                                            setRecargarColegios={setRecargarColegios}\r\n\r\n\r\n\r\n                                        ></FRM>\r\n                                    )\r\n                                }}\r\n                                />\r\n\r\n\r\n\r\n\r\n                                <Route exact path=\"/cliente/editar/:id\"\r\n                                    render={(props) => {\r\n\r\n                                        const idCliente = props.match.params.id\r\n                                        const cliente = ReportClientesSinFiltro.filter(unCliente => unCliente.IDCliente === idCliente)\r\n\r\n\r\n                                        return (\r\n                                            <EditarCliente\r\n                                                Ciudades={Ciudades}\r\n                                                cliente={cliente}\r\n                                                setRecargarClientes={setRecargarClientes}\r\n                                                Zonas={Zonas}\r\n                                                Distritos={Distritos}\r\n                                                Colegios={Colegios}\r\n                                                setCurrentDistrito={setCurrentDistrito}\r\n                                                setRecargarColegios={setRecargarColegios}\r\n                                                setRecargarClientes={setRecargarClientes}\r\n\r\n\r\n                                            />\r\n                                        )\r\n\r\n                                    }}\r\n                                />\r\n\r\n                                <Route exact path=\"/usuario/editar/:id\"\r\n                                    render={(props) => {\r\n\r\n\r\n                                        const idUsuario = props.match.params.id\r\n                                        const usuario = usuarios.filter(unUsuario => unUsuario.IDUsuario === idUsuario)\r\n\r\n\r\n                                        const currentRol = roles.filter(unRol => unRol.IDRol === usuario[0].IDRol)\r\n\r\n                                        if (usuario.length > 0) {\r\n                                            return (\r\n                                                <EditarUsuario\r\n                                                    cliente={usuario}\r\n                                                    roles={roles}\r\n                                                    currentRol={currentRol}\r\n                                                    setRecargarClientes={setRecargarUsuario}\r\n                                                />\r\n                                            )\r\n                                        } else {\r\n                                            return <div></div>\r\n                                        }\r\n\r\n\r\n                                    }}\r\n                                />\r\n\r\n\r\n\r\n                            </Switch>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            {/*          \r\n         \r\n          <Grid container spacing={3}>\r\n      \r\n            <Grid item xs={12} md={8} lg={9}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Chart />\r\n              </Paper>\r\n            </Grid>\r\n   \r\n            <Grid item xs={12} md={4} lg={3}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Deposits />\r\n              </Paper>\r\n            </Grid>\r\n    \r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <Orders />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid> */}\r\n\r\n\r\n\r\n\r\n                        </Container>\r\n                        {/* <MadeWithLove /> */}\r\n                    </main>\r\n                </div>\r\n\r\n\r\n            </Router>\r\n        );\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default (Menu);","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport NuevoCliente from './Components/NuevoCliente'\nimport EditarCliente from './Components/EditarCliente'\nimport Login from './SignInSide'\nimport Menu from './Components/Menu'\n// import Index from './ui'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      intervalId:0\n    }\n  }\n\n//   componentWillUnmount() {\n//     clearInterval(this.state.intervalId)\n// }\n\n \n  componentDidMount() {\n\n    \n  }\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          {/* <Route exact path =\"/\" component ={Index}></Route> */}\n          <Route exact path=\"/\" component={Login}></Route>\n          <Route exact path=\"/login\" component={Login}></Route>\n          <Route exact path=\"/nuevo-cliente\" component={NuevoCliente}></Route>\n          <Route exact path=\"/editar-cliente\" component={EditarCliente}></Route>\n          <Route exact path=\"/login\" component={Login}></Route>\n          <Route exact path=\"/Menu\" component={Menu}></Route>\n          <Route exact path=\"/ordenes\" component={Menu}></Route>\n          <Route exact path=\"/ordenesgarantia\" component={Menu}></Route>\n\n          <Route exact path=\"/clientes\" component={Menu}></Route>\n          <Route exact path=\"/usuarios\" component={Menu}></Route>\n\n          <Route exact path=\"/formularioNuevaOrden\" component={Menu}></Route>\n\n\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactExport from \"react-export-excel\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nconst dataSet1 = [\r\n    {\r\n        name: \"ZONA\",\r\n        amount: 30000,\r\n        sex: 'M',\r\n        is_married: true\r\n    },\r\n    {\r\n        name: \"DISTRITO\",\r\n        amount: 355000,\r\n        sex: 'F',\r\n        is_married: false\r\n    },\r\n    {\r\n        name: \"CIUDAD\",\r\n        amount: 250000,\r\n        sex: 'M',\r\n        is_married: false\r\n    },\r\n    {\r\n        name: \"IE\",\r\n        amount: 450500,\r\n        sex: 'M',\r\n        is_married: true\r\n    }\r\n];\r\n \r\n\r\nclass Download extends React.Component {\r\n    render() {\r\n        return (\r\n            <ExcelFile>\r\n                <ExcelSheet data={dataSet1} name=\"Employees\">\r\n                    <ExcelColumn label=\"Name\" value=\"name\"/>\r\n                    <ExcelColumn label=\"Wallet Money\" value=\"amount\"/>\r\n                    <ExcelColumn label=\"Gender\" value=\"sex\"/>\r\n                    <ExcelColumn label=\"Marital Status\"\r\n                                 value={(col) => col.is_married ? \"Married\" : \"Single\"}/>\r\n                </ExcelSheet>\r\n            </ExcelFile>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Download;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"./Components/TablaDatos.css\";\nimport * as serviceWorker from './serviceWorker';\n \nimport \"../node_modules/izitoast/dist/css/iziToast.min.css\";\n\nimport EcxelReact from './Components/ExcelReact'\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}